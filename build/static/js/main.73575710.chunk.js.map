{"version":3,"sources":["assets/images/logo.png","assets/images/applyProject1.jpg","assets/images/applyProject2.jpg","assets/images/applyDataBase.jpg","logo.svg","utils/api.js","components/busniess/Login/Login.js","components/busniess/Login/index.js","components/busniess/NoticeList/NoticeList.js","components/busniess/NoticeList/index.js","components/busniess/ApplyDataBase/ApplyDataBase.js","components/busniess/ApplyDataBase/index.js","components/busniess/ApplyDataBase/ShowImage/index.js","components/busniess/ApplyDataBase/ShowImage/ShowImage.js","components/busniess/ApplyProject/CommitCard/CommitCard.js","components/busniess/ApplyProject/CommitCard/index.js","components/busniess/ApplyProject/ApplyProject.js","components/busniess/ApplyProject/index.js","components/busniess/ActApply/ActApply.js","components/busniess/ActApply/index.js","components/busniess/ShowProject/ShowProject.js","components/busniess/ShowProject/index.js","components/busniess/DownFile/DownFile.js","components/busniess/DownFile/index.js","components/busniess/MenuDataBase/MenuDataBase.js","components/busniess/EditNotice/EditNotice.js","components/busniess/EditNotice/index.js","components/busniess/ApproveList/ApproveList.js","components/busniess/ApproveList/index.js","components/busniess/ApproveProjectList/ApproveProjectList.js","components/busniess/ApproveProjectList/index.js","components/busniess/UploadFile/UploadFile.js","components/busniess/MenuCommittee/MenuCommittee.js","components/busniess/MenuCommittee/index.js","components/busniess/Home/Home.js","components/busniess/Home/index.js","components/busniess/Register/Register.js","components/busniess/Register/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","http","setDefaultBaseURL","setDefaultHeaders","createApi","method","url","setDefaultOptions","withCredentials","doctorInfoId","Login","state","disabled","counts","showSpin","componentDidMount","login","e","a","form","props","loginData","mobileno","getFieldValue","validCode","loginMethod","useCookie","preventDefault","validateFieldsAndScroll","err","values","setState","res","data","OpResult","message","success","localStorage","setItem","JSON","stringify","history","location","saveDoctorData","push","pathname","error","ErrorMsg","this","doctorData","addRecords","resid","Error","countDown","countdown","setInterval","clearInterval","getVerCode","telephone","console","log","info","onRegister","callback","getFieldDecorator","className","spinning","onSubmit","handleSubmit","Item","rules","required","size","prefix","type","style","color","placeholder","onClick","htmlType","Component","create","Panel","noticeId","NoticeList","collapsed","imageUrl","userInfo","currentNotice","historyNotice","getTable","current","customPanelStyle","background","borderRadius","marginBottom","border","overflow","title","description","content","publishTime","showIcon","length","bordered","defaultActiveKey","expandIcon","isActive","rotate","map","item","index","header","key","image","PRESENTED_IMAGE_SIMPLE","ApplyDataBase","applyList","page","record","loading","prop","icon","onBack","onApply","addText","showImage","isShowImage","pages","listPage","applyPage","checkPage","showImagePage","schedulePage","ShowImage","src","height","Meta","CommitCard","width","marginTop","avatar","active","person","writeTime","suggest","applyProjectId","suggestId","joinProjectId","Step","customDot","dot","status","ApplyProject","postilData","isEdit","doctorInfo","getApplyData","parse","getItem","getTableNew","subresid","studyType","split","onSubmitRecord","isSubmit","modifyRecords","obj","study","toString","doctor","hospital","task","doctorId","post","taskPrincipal","inlandUnit","foreignUnit","studyReason","studyArea","studyTarget","studyDescription","studyLast","studySelected","studyAssess","studyCheck","staticMethod","standard","sure","committee","referenceData","phoneNumber","phone","email","REC_ID","onLookSchedule","progressDot","onCheck","onEdit","print","newContent","document","getElementById","innerHTML","oldContent","body","window","reload","formItemLayout","labelCol","xs","span","sm","wrapperCol","Fragment","applyProjectImage1","applyProjectImage2","id","textAlign","label","joinPerson","position","right","applyTime","itemLayout","dataSource","renderItem","actions","joinPersonID","onConfirm","okText","cancelText","href","REC_CRTTIME","whitespace","initialValue","ref","el","componentRef","applyDataBaseId","uploadFile","file","Promise","resolve","reject","fd","FormData","append","name","xhr","XMLHttpRequest","open","onload","response","imgUrl","send","ActApply","handleUploadFile","fileInfo","fileUrl","encodeURIComponent","then","teamPeople","teamPeople2","teamPeople3","CDPatientNumber","CDNumber","UCPatientNumber","UCNumber","doctorPhoto","getBase64","img","reader","FileReader","addEventListener","result","readAsDataURL","handleChange","originFileObj","uploadButton","options","value","applyDataBaseImage","Group","defaultValue","onChange","onChangeCheckbox","alt","approveStatus","valuePropName","listType","showUploadList","customRequest","onRemove","handleRemoveFile","showProjectId","ShowProject","TextArea","spin","visible","getData","handleCancel","onSuggest","onjoin","submitSuggest","projectId","applyId","applyData","includes","isJoined","columns","dataIndex","render","text","scroll","x","y","React","fileId","onDown","DownFile","warning","urls","i","len","TabPane","MenuDataBase","tabBarStyle","display","alignItems","paddingLeft","tab","onPublish","isPublish","EditNotice","editVisible","save","publish","renderContent","renderListPage","renderAddPage","renderCheckPage","onAdd","onOk","handleOk","onCancel","destroyOnClose","footer","ApproveList","onPassOrReject","clearCache","isPass","ApproveProjectList","onAgreeOrReject","onDelete","UploadFile","removeRecords","fileName","remark","MenuCommittee","Home","currentItem","toggleCollapsed","getDoctorInfo","cmswhere","UserInfo","EMP_HANDPHONE","onEditInfo","onSave","occupationNumber","logout","removeItem","replace","onMenuDetail","margin","flexDirection","selectedKeys","defaultOpenKeys","mode","theme","inlineCollapsed","logo","path","component","placement","fontSize","Data","Register","onLogin","register","registerData","Handphone","userid","validcode","nickname","validresid","marginLeft","App","exact","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,gFCA3CD,EAAOC,QAAU,IAA0B,kC,mnBCE3CC,IAAKC,kBAAkB,8BAGvBD,IAAKE,kBAAkB,CACrB,eAAgB,qBAIlBF,IAAKG,UAAU,iBAAkB,CAC/BC,OAAQ,MACRC,IAAK,sCAIPL,IAAKM,kBAAkB,CACrBC,iBAAiB,IAkDnBP,IAAKG,UAAU,aAAc,CAC3BC,OAAQ,MAERC,IAAK,8BAaPL,IAAKG,UAAU,WAAY,CACzBC,OAAQ,MAERC,IAAK,yBAMPL,IAAKG,UAAU,QAAS,CACtBC,OAAQ,OACRC,IAAK,uBAMPL,IAAKG,UAAU,cAAe,CAC5BC,OAAQ,MACRC,IAAK,4BAMPL,IAAKG,UAAU,oBAAqB,CAClCC,OAAQ,OACRC,IAAK,qCAGQL,QAAf,EC7GMQ,EAAe,eACfC,E,2MACJC,MAAQ,CACNC,UAAU,EACVC,OAAQ,GACRC,UAAU,G,EAGZC,kBAAoB,a,EAEpBC,M,uCAAQ,WAAMC,GAAN,mBAAAC,EAAA,sDACEC,EAAS,EAAKC,MAAdD,KACFE,EAAY,CAChBC,SAAUH,EAAKI,cAAc,SAC7BC,UAAWL,EAAKI,cAAc,SAC9BE,YAAa,SACbC,WAAW,GAEbT,EAAEU,iBAEF,EAAKP,MAAMD,KAAKS,wBAAhB,uCAAwC,WAAOC,EAAKC,GAAZ,SAAAZ,EAAA,0DAClCW,EADkC,wDAItC,EAAKE,SAAS,CACZjB,UAAU,IAL0B,kBAQxBb,IAAOe,MAAMK,GARW,UASX,MADzBW,EARoC,QAS5BC,KAAKC,SATuB,oBAUlCC,EAAA,EAAQC,QAAQ,4BAChBC,aAAaC,QAAQ,WAAYC,KAAKC,UAAUR,EAAIC,OAXlB,KAYlC,EAAKb,MAAMqB,QAAQC,SAAS/B,OAZM,uCAYU,EAAKgC,iBAZf,QAalC,EAAKZ,SAAS,CACZjB,UAAU,IAEZ,EAAKM,MAAMqB,QAAQG,KAAK,CACtBC,SAAU,UAjBsB,wBAoBlCV,EAAA,EAAQW,MAAMd,EAAIC,KAAKc,UApBW,0DAuBpCZ,EAAA,EAAQW,MAAM,KAAMX,SAvBgB,0DAAxC,oCAAAa,KAAA,gBAVM,2C,wDA4CRL,e,sBAAiB,4BAAAzB,EAAA,6DACX+B,EAAa,EAAK7B,MAAMqB,QAAQC,SAAS/B,MAAMsC,WADpC,kBAIDhD,IAAOiD,WAAW,CAC5BC,MAAO1C,EACPwB,KAAM,CAACgB,KANI,cAQLhB,KAAKmB,MARA,gDAYbjB,EAAA,EAAQW,MAAM,KAAMX,SAZP,yD,EAejBkB,UAAY,WACV,IAAIxC,EAAS,GACb,EAAKkB,SAAS,CACZnB,UAAU,IAEZ,IAAI0C,EAAYC,aAAY,WACtB1C,EAAS,GACXA,IACA,EAAKkB,SAAS,CACZlB,aAGF,EAAKkB,SAAS,CACZnB,UAAU,IAEZ4C,cAAcF,MAEf,M,EAELG,W,sBAAa,4BAAAvC,EAAA,2DACHC,EAAS,EAAKC,MAAdD,MAECI,cAAc,SAHZ,wBAIT,EAAK8B,YAJI,kBAMKpD,IAAOwD,WAAW,CAC5BC,UAAWvC,EAAKI,cAAc,WAPzB,8DAUPoC,QAAQC,IAAR,MAVO,gCAaTzB,EAAA,EAAQ0B,KAAK,4EAbJ,yD,EAgBbC,WAAa,WACX,EAAK1C,MAAMqB,QAAQG,KAAK,CACtBC,SAAU,e,sFAxDZG,KAAKjB,SAAW,SAACpB,EAAOoD,O,+BA2DhB,IAAD,EACgCf,KAAKrC,MAApCC,EADD,EACCA,SAAUC,EADX,EACWA,OAAQC,EADnB,EACmBA,SAClBkD,EAAsBhB,KAAK5B,MAAMD,KAAjC6C,kBACR,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,uBAAMC,SAAUpD,GACd,uBAAMqD,SAAUnB,KAAKoB,aAAcH,UAAU,uBAC3C,4CACA,sBAAMI,KAAN,KACGL,EAAkB,QAAS,CAC1BM,MAAO,CAAC,CAAEC,UAAU,EAAMpC,QAAS,uDADpC6B,CAGC,uBACEQ,KAAK,QACLC,OACE,uBAAMC,KAAK,QAAQC,MAAO,CAAEC,MAAO,qBAErCC,YAAY,yBAIlB,sBAAMR,KAAN,CAAWJ,UAAU,oBAClBD,EAAkB,QAAS,CAC1BM,MAAO,CAAC,CAAEC,UAAU,EAAMpC,QAAS,uDADpC6B,CAGC,uBACEQ,KAAK,QACLP,UAAU,yBACVQ,OACE,uBAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAEpCC,YAAY,0BAIjBjE,EACC,uBACEqD,UAAU,6BACVO,KAAK,QACLE,KAAK,UACL9D,UAAQ,GAEPC,GAGH,uBACEoD,UAAU,0BACVO,KAAK,QACLE,KAAK,UACLI,QAAS9B,KAAKS,YAJhB,kCASF,uBACEiB,KAAK,UACLK,SAAS,SACTd,UAAU,oBACVa,QAAS9B,KAAKhC,MACdwD,KAAK,SALP,gBASA,yBAAKP,UAAU,uBACb,uBAAGa,QAAS9B,KAAKc,YAAjB,yB,GA7KIkB,aCJLtE,ED2LA,IAAKuE,QAAL,CAAcvE,G,8FExLrBwE,G,WAAAA,OACFC,EAAW,eCJFC,E,2MDObzE,MAAQ,CACN0E,WAAW,EACXC,SAAU,GACVC,SAAU,GACVC,cAAe,GACfC,cAAe,GACf3E,UAAS,G,EAEXC,kB,sBAAoB,kCAAAG,EAAA,6DAElB,EAAKa,SAAS,CACZjB,UAAS,IAHO,kBAMJb,IAAOyF,SAAS,CAC1BvC,MAAOgC,IAPO,OAMhBnD,EANgB,qBAScA,EAAIC,KAAKA,MAAhC0D,EATS,KASGlD,EATH,WAUhB,EAAKV,SAAS,CACZyD,cAAeG,EACfF,cAAehD,IAZD,wDAelB,EAAKV,SAAS,CACZjB,UAAS,IAhBO,yD,wEAoBlB,IAAM8E,EAAmB,CACvBC,WAAY,UACZC,aAAc,EACdC,aAAc,GACdC,OAAQ,EACRC,SAAU,UANL,EAQ2CjD,KAAKrC,MAA/C6E,EARD,EAQCA,cAAeC,EARhB,EAQgBA,cAAc3E,EAR9B,EAQ8BA,SACrC,OACE,yBAAKmD,UAAU,cACb,uBAAMC,SAAUpD,GAChB,wDACA,uBACEqB,QAASqD,EAAcU,MACvBC,YAAa,6BAAK,8BAAOX,EAAcY,SAAe,0BAAMnC,UAAU,mBAAmBuB,EAAca,cACvG3B,KAAK,OACL4B,UAAQ,IAGV,yBAAKrC,UAAU,mBAAf,KACA,wDACCwB,EAAcc,OAAS,EACtB,uBACEC,UAAU,EACVvC,UAAU,sBACVwC,iBAAkB,CAAC,KACnBC,WAAY,gBAAGC,EAAH,EAAGA,SAAH,OACV,uBAAMjC,KAAK,cAAckC,OAAQD,EAAW,GAAK,MAGlDlB,EAAcoB,KAAI,SAACC,EAAKC,GACvB,OACE,kBAAC7B,EAAD,CAAO8B,OAAQ,6BAAK,8BAAOF,EAAKZ,OAAa,0BAAMjC,UAAU,mBAAmB6C,EAAKT,cAA2BY,IAAKF,EAAOpC,MAAOiB,GACjI,2BAAIkB,EAAKV,cAMjB,uBAAOc,MAAO,IAAMC,+B,GApELnC,aEWnBoC,G,mBAQJ,WAAYhG,GAAQ,IAAD,8BACjB,4CAAMA,KARRT,MAAQ,CACN2E,SAAU,GACV+B,UAAW,GACXC,KAAM,WACNC,OAAQ,GACRC,SAAS,GAEQ,EAGnBzG,kBAHmB,sBAGC,sBAAAG,EAAA,0FAHD,E,sEAMjB,IAAMuG,EAAOzE,KAAK5B,MACToG,EAAaxE,KAAKrC,MAAlB6G,QAGT,OACE,yBAAKvD,UAAU,iBACb,yBAAKA,UAAU,sBACb,uBACEyD,KACgB,cAAdD,EAAKH,MACS,cAAdG,EAAKH,MACS,iBAAdG,EAAKH,KACD,WACA,OAEN5C,KAAK,UACLI,QACgB,cAAd2C,EAAKH,MACS,cAAdG,EAAKH,MACS,iBAAdG,EAAKH,KACDtE,KAAK5B,MAAMuG,OACX3E,KAAK5B,MAAMwG,QAEjB3D,UAAU,qBAEK,cAAdwD,EAAKH,MACQ,cAAdG,EAAKH,MACS,iBAAdG,EAAKH,KACD,eACAG,EAAKI,SAAW,gBAEtB,uBACE5D,UAAU,yBACVS,KAAK,OACLI,QACgB,kBAAd2C,EAAKH,KACDtE,KAAK5B,MAAMuG,OACX3E,KAAK5B,MAAM0G,WAGhBL,EAAKM,YACF,GACc,kBAAdN,EAAKH,KACL,eACc,aAAdG,EAAKH,KACL,iCACA,KAGR,uBAAMpD,SAAUsD,GACd,yBAAKvD,UAAU,yBACX,WACA,OAAQwD,EAAKH,MACX,IAAK,WACH,OAAOG,EAAKO,MAAMC,SACpB,IAAK,YACH,OAAOR,EAAKO,MAAME,UACpB,IAAK,YACH,OAAOT,EAAKO,MAAMG,UACpB,IAAK,gBACH,OAAOV,EAAKO,MAAMI,cACpB,IAAK,eACH,OAAOX,EAAKO,MAAMK,cAXtB,U,GAjEcrD,cCjBboC,EDuGA,IAAKnC,QAAL,CAAcmC,G,yCEvGdkB,G,qBCCU,SAAAlH,GACvB,OACE,yBAAK6C,UAAU,aACb,yBACEsE,IAAKnH,EAAM8F,MACXvC,MAAO,CAAEqB,OAAQ,iBAAkBwC,OAAQ,c,SCL3CC,E,IAAAA,KCDOC,EDEI,SAACnB,GAClB,OACE,6BACE,uBAAM5C,MAAO,CAAEgE,MAAO,IAAKC,UAAW,KACpC,uBAAUpB,SAASD,EAAOtF,KAAkB4G,QAAM,EAACC,QAAM,GACvD,kBAACL,EAAD,CACEI,OAAQ,uBAAMnE,KAAK,SACnBwB,MAAO,wDAAUqB,EAAOtF,KAAK8G,QAC7B5C,YACE,6BACE,kDAASoB,EAAOtF,KAAK+G,WACrB,kDAASzB,EAAOtF,KAAKgH,gB,4DEgB/BC,GAAiB,eACjBC,GAAY,eACZC,GAAgB,eAEdC,I,IADAZ,K,IACAY,MAEFC,GAAY,SAACC,EAAD,OAAQC,EAAR,EAAQA,OAAR,EAAgBzC,MAAhB,OAChB,uBAASX,QAAS,8BAAOoD,IAAiBD,IAGtCE,G,2MACJ9I,MAAQ,CACN2E,SAAU,GACV+B,UAAW,GACXC,KAAM,WACNC,OAAQ,GACRmC,WAAY,GACZlC,SAAS,EACTmC,QAAQ,EACRC,WAAY,M,EAEd7I,kB,sBAAoB,4BAAAG,EAAA,sEACZ,EAAK2I,eADO,OAEZD,EAAarH,KAAKuH,MAAMzH,aAAa0H,QAAQ,eACnD,EAAKhI,SAAS,CACZ6H,eAJgB,2C,EASpBC,a,sBAAe,8BAAA3I,EAAA,6DAEb,EAAKa,SAAS,CACZyF,SAAS,IAHE,kBAMCvH,IAAO+J,YAAY,CAC7B7G,MAAO+F,GACPe,SAAS,GAAD,OAAKd,GAAL,YAAkBC,MARjB,OAUW,IAJtBpH,EANW,QAUHC,KAAKmB,QACPnB,EAAO,GACXD,EAAIC,MACFD,EAAIC,KAAKA,MACTD,EAAIC,KAAKA,KAAK4E,KAAI,SAAAC,GAChB,IAAIoD,EAAYpD,EAAKoD,WAAapD,EAAKoD,UAAUC,MAAM,KACvDrD,EAAKoD,UAAYA,EACjBjI,EAAKW,KAAKkE,MAEd,EAAK/E,SAAS,CACZsF,UAAWpF,KApBJ,gDAwBXE,EAAA,EAAQW,MAAM,KAAMX,SAxBT,QA0Bb,EAAKJ,SAAS,CACZyF,SAAS,IA3BE,yD,EA+BfpD,aAAe,SAACnD,EAAGyD,GACjB,EAAKtD,MAAMD,KAAKS,yBAAwB,SAACC,EAAKC,GACvCD,GACH,EAAKsC,SAASrC,EAAQ4C,O,EAK5B0F,e,uCAAiB,WAAM7C,GAAN,SAAArG,EAAA,6DAEfqG,EAAO8C,SAAW,IAFH,kBAIDpK,IAAOqK,cAAc,CAC/BnH,MAAO+F,GACPjH,KAAM,CAACsF,KANI,UAQS,GART,OAQLtF,KAAKmB,MARA,uBASXjB,EAAA,EAAQC,QAAQ,4BATL,SAUL,EAAKyH,eAVA,yDAab1H,EAAA,EAAQW,MAAM,KAAMX,SAbP,0D,wDAiBjBgC,S,uCAAW,WAAOrC,EAAQ4C,GAAf,uBAAAxD,EAAA,yDAELqJ,EAAM,GACEzI,EAAO0I,OAAS1I,EAAO0I,MAAMC,WAHhC,EAI8B,EAAK9J,MAApCgJ,EAJC,EAIDA,OAAQpC,EAJP,EAIOA,OAAQqC,EAJf,EAIeA,WAEtBW,EADW,IAAT7F,EACI,CACJgG,OAAQ5I,EAAO4I,OACfC,SAAU7I,EAAO6I,SACjBC,KAAM9I,EAAO8I,KACbC,SAAUjB,EAAWiB,SAErBC,KAAMhJ,EAAOgJ,KAEbC,cAAejJ,EAAOiJ,cACtBb,UAAWpI,EAAOoI,UAClBc,WAAYlJ,EAAOkJ,WACnBC,YAAanJ,EAAOmJ,YACpBC,YAAapJ,EAAOoJ,YACpBC,UAAWrJ,EAAOqJ,UAClBC,YAAatJ,EAAOsJ,YACpBC,iBAAkBvJ,EAAOuJ,iBACzBC,UAAWxJ,EAAOwJ,UAClBC,cAAezJ,EAAOyJ,cACtBC,YAAa1J,EAAO0J,YACpBC,WAAY3J,EAAO2J,WACnBC,aAAc5J,EAAO4J,aACrBC,SAAU7J,EAAO6J,SACjBC,KAAM9J,EAAO8J,KACbC,UAAW/J,EAAO+J,UAClBC,cAAehK,EAAOgK,eAGlB,CACJpB,OAAQ5I,EAAO4I,OACfC,SAAU7I,EAAO6I,SACjBC,KAAM9I,EAAO8I,KACbmB,YAAajK,EAAOkK,MACpBlB,KAAMhJ,EAAOgJ,KACbmB,MAAOnK,EAAOmK,MACdlB,cAAejJ,EAAOiJ,cACtBb,UAAWpI,EAAOoI,UAClBc,WAAYlJ,EAAOkJ,WACnBC,YAAanJ,EAAOmJ,YACpBC,YAAapJ,EAAOoJ,YACpBC,UAAWrJ,EAAOqJ,UAClBC,YAAatJ,EAAOsJ,YACpBC,iBAAkBvJ,EAAOuJ,iBACzBC,UAAWxJ,EAAOwJ,UAClBC,cAAezJ,EAAOyJ,cACtBC,YAAa1J,EAAO0J,YACpBC,WAAY3J,EAAO2J,WACnBC,aAAc5J,EAAO4J,aACrBC,SAAU7J,EAAO6J,SACjBC,KAAM9J,EAAO8J,KACbC,UAAW/J,EAAO+J,UAClBC,cAAehK,EAAOgK,cACtBzB,SAAU,MAGC,IAAXV,EA5DK,wBA6DPY,EAAI2B,OAAS3E,EAAO2E,OA7Db,kBA+DOjM,IAAOqK,cAAc,CAC/BnH,MAAO+F,GACPjH,KAAM,CAACsI,KAjEJ,cAmEiB,GAnEjB,OAmEGtI,KAAKmB,OACXjB,EAAA,EAAQC,QAAQ,kCAElB,EAAKL,SAAS,CACZuF,KAAM,WACNqC,QAAQ,IAxEL,UA0EC,EAAKE,eA1EN,0DA4EL1H,EAAA,EAAQW,MAAM,KAAMX,SA5Ef,2DAgFOlC,IAAOiD,WAAW,CAC5BC,MAAO+F,GACPjH,KAAM,CAACsI,KAlFJ,eAoFiB,GApFjB,OAoFGtI,KAAKmB,OACXjB,EAAA,EAAQC,QAAQ,kCAElB,EAAKL,SAAS,CACZuF,KAAM,WACNqC,QAAQ,IAzFL,UA2FC,EAAKE,eA3FN,2DA6FL1H,EAAA,EAAQW,MAAM,KAAMX,SA7Ff,kE,0DAiGXyF,QAAU,WACRjE,QAAQC,IAAI,SAAU,EAAKjD,MAAMgJ,QACjC,EAAK5H,SAAS,CACZuF,KAAM,e,EAGV6E,eAAiB,SAAA5E,GACD,IAAMnF,QAAQ,CAC1B8D,MAAO,2BACPyC,MAAO,IACPvC,QACE,yBAAKzB,MAAO,CAAEiE,UAAW,SACvB,yBAAKjE,MAAO,CAAEoB,aAAc,SAA5B,iCAA4CwB,EAAOqD,MACnD,uBACEjF,QACoB,iBAAlB4B,EAAOiC,QAAqC,iBAAlBjC,EAAOiC,OAAkB,EAAI,EAEzD4C,YAAa9C,IAEb,kBAACD,GAAD,CAAMnD,MAAM,6BACZ,kBAACmD,GAAD,CAAMnD,MAAM,iBACZ,kBAACmD,GAAD,CAAMnD,MAAM,kBAVhB,Q,EAiBNyB,OAAS,WACP,EAAK5F,SAAS,CACZuF,KAAM,c,EAGV+E,QAAU,SAAAvF,GACR,EAAK/E,SAAS,CACZuF,KAAM,YACNC,OAAQT,K,EAGZwF,OAAS,SAAAxF,GACP,EAAK/E,SAAS,CACZuF,KAAM,YACNC,OAAQT,EACR6C,QAAQ,K,EAGZ7B,UAAY,WACV,EAAK/F,SAAS,CACZuF,KAAM,mB,EAIViF,MAAQ,WACN,IAEIC,EAFWC,SAASC,eAAe,oBAEbC,UAEtBC,EAAaH,SAASI,KAAKF,UAQ/B,OANAF,SAASI,KAAKF,UAAYH,EAE1BM,OAAOP,QAEPO,OAAOpK,SAASqK,SAChBN,SAASI,KAAKF,UAAYC,GACnB,G,wEAEC,IAAD,OACC5I,EAAsBhB,KAAK5B,MAAMD,KAAjC6C,kBADD,EAUHhB,KAAKrC,MANP0G,GAJK,EAGL/B,SAHK,EAIL+B,WACAG,EALK,EAKLA,QAEAD,GAPK,EAMLD,KANK,EAOLC,QAEAoC,GATK,EAQLD,WARK,EASLC,QAEIqD,EAAiB,CACrBC,SAAU,CACRC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,MAqBVnF,EAAQ,CACZI,cACE,kBAAC,IAAMkF,SAAP,KACE,kBAAC,EAAD,CAAWpG,MAAOqG,OAClB,kBAAC,EAAD,CAAWrG,MAAOsG,QAGtBrF,UACE,kBAAC,IAAMmF,SAAP,KACE,uCACMN,EADN,CAGE/I,UAAU,oBACVwJ,GAAG,qBAEH,yBAAKxJ,UAAU,6BACb,yBAAKA,UAAU,kCACb,wBAAIU,MAAO,CAAE+I,UAAW,WAAxB,uDACA,wBAAI/I,MAAO,CAAE+I,UAAW,WAAxB,4BACA,sBAAMrJ,KAAN,CAAWsJ,MAAO,+DAChB,8BAAOpG,EAAOqD,OAEhB,sBAAMvG,KAAN,CAAWsJ,MAAO,qEAChB,8BAAOpG,EAAOwD,gBAEhB,sBAAM1G,KAAN,CAAWsJ,MAAO,yDAChB,8BAAOpG,EAAOmD,SAEhB,sBAAMrG,KAAN,CAAWsJ,MAAO,+DAChB,8BAAOpG,EAAOoD,WAEhB,sBAAMtG,KAAN,CAAWsJ,MAAO,mDAChB,8BAAOpG,EAAOuD,OAEhB,sBAAMzG,KAAN,CAAWsJ,MAAO,+DAChB,8BAAOpG,EAAOwE,cAEhB,sBAAM1H,KAAN,CAAWsJ,MAAO,6CAChB,8BAAOpG,EAAO0E,QAEhB,sBAAM5H,KAAN,CAAWsJ,MAAO,uFAChB,8BAAOpG,EAAOyD,aAEhB,sBAAM3G,KAAN,CAAWsJ,MAAO,uFAChB,8BAAOpG,EAAO0D,cAchB,wBAAItG,MAAO,CAAE+I,UAAW,WAAxB,4BACA,sBAAMrJ,KAAN,CAAWsJ,MAAO,qEAChB,8BAAOpG,EAAO2D,cAEhB,sBAAM7G,KAAN,CAAWsJ,MAAO,+DAChB,8BAAOpG,EAAO4D,YAEhB,sBAAM9G,KAAN,CACEsJ,MACE,+JAGF,8BAAOpG,EAAO6D,cAEhB,sBAAM/G,KAAN,CACEsJ,MACE,+JAGF,8BAAOpG,EAAO+D,YAEhB,sBAAMjH,KAAN,CACEsJ,MACE,6OAKF,8BAAOpG,EAAO8D,mBAEhB,sBAAMhH,KAAN,CACEsJ,MACE,6LAKF,8BAAOpG,EAAOgE,gBAEhB,sBAAMlH,KAAN,CACEsJ,MACE,+JAGF,8BAAOpG,EAAO+D,YAEhB,sBAAMjH,KAAN,CACEsJ,MACE,mJAGF,8BAAOpG,EAAOiE,cAEhB,sBAAMnH,KAAN,CACEsJ,MAAO,2HAEP,8BAAOpG,EAAOkE,aAEhB,sBAAMpH,KAAN,CACEsJ,MACE,mJAGF,8BAAOpG,EAAOiE,cAEhB,sBAAMnH,KAAN,CACEsJ,MACE,yVAKF,8BAAOpG,EAAOmE,eAEhB,sBAAMrH,KAAN,CAAWsJ,MAAO,+GAChB,8BAAOpG,EAAOoE,WAEhB,sBAAMtH,KAAN,CAAWsJ,MAAO,2EAChB,8BAAOpG,EAAOqE,OAEhB,sBAAMvH,KAAN,CAAWsJ,MAAO,qEAChB,8BAAOpG,EAAOsE,YAEhB,sBAAMxH,KAAN,CAAWsJ,MAAO,+DAChB,8BAAOpG,EAAOuE,iBAGjBvE,EAAO,cACN,yBAAKtD,UAAU,oCACb,gEACCsD,EAAO,eACRA,EAAO,cAAgBhB,OAAS,EAC9BgB,EAAO,cAAgBV,KAAI,SAAAC,GACzB,OACE,yBAAK7C,UAAU,2CACb,uBACE9B,QACE,6BACE,2BAAI2E,EAAK8G,WAAT,4BACA,uBACEjJ,MAAO,CAAEkJ,SAAU,WAAYC,MAAO,QAErChH,EAAKiH,YAIZrJ,KAAK,OACLT,UAAU,+CAMlB,yBACEA,UAAU,0CACVU,MAAO,CAAE+I,UAAW,WAFtB,kCAOF,kFACCnG,EAAO,eACNA,EAAO,cAAgBV,KAAI,SAAAC,GACzB,OACE,kBAAC,EAAD,CAAYG,IAAKH,EAAKoF,OAAQjK,KAAM6E,QAI1C,OAGR,uBACEY,KAAK,WACLhD,KAAK,UACLT,UAAU,0BACVa,QAAS9B,KAAKuJ,OAJhB,iBAUJtE,SACE,kBAAC,IAAMqF,SAAP,KACE,uBACErJ,UAAU,4BACV+J,WAAW,aACXC,WAAY5G,EACZ6G,WAAY,SAAApH,GAAI,OACd,sBAAMzC,KAAN,CACE8J,QAAS,CACP,uBACElH,IAAI,qBACJnC,QAAS,WACP,EAAKuH,QAAQvF,KAHjB,gBAQCA,EAAKsH,aASF,KARF,uBACEnH,IAAI,qBACJnC,QAAS,WACP,EAAKwH,OAAOxF,KAHhB,gBASgB,MAAlBA,EAAKuD,SACH,uBACEpD,IAAI,qBACJnC,QAAS,WACP,EAAKqH,eAAerF,KAHxB,4BASA,uBACEZ,MAAM,6CACNmI,UAAW,WACT,EAAKjE,eAAetD,IAEtBwH,OAAO,MACPC,WAAW,MAEX,uBAAGtH,IAAI,sBAAP,mBAMN,sBAAM5C,KAAKoE,KAAX,CAIEvC,MACE,kBAAC,IAAMoH,SAAP,KACE,uBAAGrJ,UAAU,iCAAiCuK,KAAK,KAAnD,4BACQ1H,EAAK8D,MAEb,uBAAG3G,UAAU,iCAAiCuK,KAAK,KAAnD,4BACQ1H,EAAK6D,WAIjBxE,YACE,kBAAC,IAAMmH,SAAP,KACE,uBACE1I,MACkB,iBAAhBkC,EAAK0C,OACD,WACgB,iBAAhB1C,EAAK0C,OACL,MACA,SAGL1C,EAAK0C,QACD,OAKb,8DAAW1C,EAAK2H,kBAO1BpG,aACE,6BACE,wBAAI1D,MAAO,CAAE+I,UAAW,WAAanG,EAAOqD,MAC5C,uBACEjF,QACoB,iBAAlB4B,EAAOiC,QAAqC,iBAAlBjC,EAAOiC,OAAkB,EAAI,EAEzD4C,YAAa9C,IAEb,kBAACD,GAAD,CAAMnD,MAAM,6BACZ,kBAACmD,GAAD,CAAMnD,MAAM,iBACZ,kBAACmD,GAAD,CAAMnD,MAAM,kBAVhB,KAeFgC,UACE,uCACM8E,EADN,CAGE/I,UAAU,sBAEV,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,kCACb,wBAAIU,MAAO,CAAE+I,UAAW,WAAxB,uDACA,wBAAI/I,MAAO,CAAE+I,UAAW,WAAxB,4BAEA,sBAAMrJ,KAAN,CAAWsJ,MAAO,iEACf3J,EAAkB,OAAQ,CACzBM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,+CACTuM,YAAY,IAGhBC,aAAchF,EAASpC,EAAOqD,KAAO,MARtC5G,CASE,8BAEL,sBAAMK,KAAN,CAAWsJ,MAAO,qEACf3J,EAAkB,gBAAiB,CAClCM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,qDACTuM,YAAY,IAGhBC,aAAchF,EAASpC,EAAOwD,cAAgB,MAR/C/G,CASE,8BA0BL,sBAAMK,KAAN,CAAWsJ,MAAO,mDACf3J,EAAkB,OAAQ,CACzBM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,mDACTuM,YAAY,IAGhBC,aAAchF,EAASpC,EAAOuD,KAAO,MARtC9G,CASE,8BA0BL,sBAAMK,KAAN,CAAWsJ,MAAO,uFACf3J,EAAkB,aAAc,CAC/BM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,sEACTuM,YAAY,IAGhBC,aAAchF,EAASpC,EAAOyD,WAAa,MAR5ChH,CASE,8BAEL,sBAAMK,KAAN,CAAWsJ,MAAO,uFACf3J,EAAkB,cAAe,CAChCM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,sEACTuM,YAAY,IAGhBC,aAAchF,EAASpC,EAAO0D,YAAc,MAR7CjH,CASE,8BAEL,wBAAIW,MAAO,CAAE+I,UAAW,WAAxB,4BACA,sBAAMrJ,KAAN,CAAWsJ,MAAO,qEACf3J,EAAkB,cAAe,CAChCM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,oDACTuM,YAAY,IAGhBC,aAAchF,EAASpC,EAAO2D,YAAc,MAR7ClH,CASE,kBAAC,KAAD,CAAUC,UAAU,iCAEzB,sBAAMI,KAAN,CAAWsJ,MAAO,+DACf3J,EAAkB,YAAa,CAC9BM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,8CACTuM,YAAY,IAGhBC,aAAchF,EAASpC,EAAO4D,UAAY,MAR3CnH,CASE,kBAAC,KAAD,CAAUC,UAAU,iCAEzB,sBAAMI,KAAN,CACEsJ,MACE,+JAGD3J,EAAkB,cAAe,CAChCM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,8CACTuM,YAAY,IAGhBC,aAAchF,EAASpC,EAAO6D,YAAc,MAR7CpH,CASE,kBAAC,KAAD,CAAUC,UAAU,iCAEzB,sBAAMI,KAAN,CACEsJ,MACE,+JAGD3J,EAAkB,YAAa,CAC9BM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,8CACTuM,YAAY,IAGhBC,aAAchF,EAASpC,EAAO+D,UAAY,MAR3CtH,CASE,kBAAC,KAAD,CAAUC,UAAU,iCAEzB,sBAAMI,KAAN,CACEsJ,MACE,6OAKD3J,EAAkB,mBAAoB,CACrCM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,gEACTuM,YAAY,IAGhBC,aAAchF,EAASpC,EAAO8D,iBAAmB,MARlDrH,CASE,kBAAC,KAAD,CAAUC,UAAU,iCAEzB,sBAAMI,KAAN,CACEsJ,MACE,6LAKD3J,EAAkB,gBAAiB,CAClCM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,8CACTuM,YAAY,IAGhBC,aAAchF,EAASpC,EAAOgE,cAAgB,MAR/CvH,CASE,kBAAC,KAAD,CAAUC,UAAU,iCAEzB,sBAAMI,KAAN,CACEsJ,MAAO,mJAEN3J,EAAkB,cAAe,CAChCM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,kCACTuM,YAAY,IAGhBC,aAAchF,EAASpC,EAAOiE,YAAc,MAR7CxH,CASE,kBAAC,KAAD,CAAUC,UAAU,iCAEzB,sBAAMI,KAAN,CACEsJ,MAAO,2HAEN3J,EAAkB,aAAc,CAC/BM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,oDACTuM,YAAY,IAGhBC,aAAchF,EAASpC,EAAOkE,WAAa,MAR5CzH,CASE,kBAAC,KAAD,CAAUC,UAAU,iCAEzB,sBAAMI,KAAN,CACEsJ,MACE,yVAKD3J,EAAkB,eAAgB,CACjCM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,8CACTuM,YAAY,IAGhBC,aAAchF,EAASpC,EAAOmE,aAAe,MAR9C1H,CASE,kBAAC,KAAD,CAAUC,UAAU,iCAEzB,sBAAMI,KAAN,CAAWsJ,MAAO,+GACf3J,EAAkB,WAAY,CAC7BM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,8FACTuM,YAAY,IAGhBC,aAAchF,EAASpC,EAAOoE,SAAW,MAR1C3H,CASE,kBAAC,KAAD,CAAUC,UAAU,iCAEzB,sBAAMI,KAAN,CAAWsJ,MAAO,2EACf3J,EAAkB,OAAQ,CACzBM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,0DACTuM,YAAY,IAGhBC,aAAchF,EAASpC,EAAOqE,KAAO,MARtC5H,CASE,kBAAC,KAAD,CAAUC,UAAU,iCAEzB,sBAAMI,KAAN,CAAWsJ,MAAO,qEACf3J,EAAkB,YAAa,CAC9BM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,oDACTuM,YAAY,IAGhBC,aAAchF,EAASpC,EAAOsE,UAAY,MAR3C7H,CASE,kBAAC,KAAD,CAAUC,UAAU,iCAEzB,sBAAMI,KAAN,CAAWsJ,MAAO,+DACf3J,EAAkB,gBAAiB,CAClCM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,8CACTuM,YAAY,IAGhBC,aAAchF,EAASpC,EAAOuE,cAAgB,MAR/C9H,CASE,kBAAC,KAAD,CAAUC,UAAU,mCAI7B,uBACEA,UAAU,yBACVc,SAAS,SACTD,QAAS,WACP,EAAKV,aAAa,EAAM,KAJ5B,gBASA,uBACEM,KAAK,UACLT,UAAU,2BACVc,SAAS,SACTD,QAAS,WACP,EAAKV,aAAa,EAAM,KAL5B,kBAcN,OACE,kBAAC,IAAMkJ,SAAP,KAaE,uBAAMpJ,SAAUsD,GAChB,kBAAC,EAAD,CACEQ,MAAOA,EACPV,KAAMtE,KAAKrC,MAAM2G,KACjBK,OAAQ3E,KAAK2E,OACbG,UAAW9E,KAAK8E,UAChBF,QAAS5E,KAAK4E,QACdgH,IAAK,SAAAC,GAAE,OAAK,EAAKC,aAAeD,W,GAv6Bf7J,aCvCZyE,GDq9BA,IAAKxE,QAAL,CAAcwE,I,0DE57BvBsF,GAAkB,eAChB1F,G,IAAAA,KAEFC,GAAY,SAACC,EAAD,OAAQC,EAAR,EAAQA,OAAR,EAAgBzC,MAAhB,OAChB,uBAASX,QAAS,8BAAOoD,IAAiBD,IAGtCyF,GAAa,SAACC,EAAM3O,GACxB,OAAO,IAAI4O,SAAQ,SAACC,EAASC,GAC3B,IAAIC,EAAK,IAAIC,SACbD,EAAGE,OAAO,OAAQN,EAAMA,EAAKO,MAC7B,IAAMC,EAAM,IAAIC,eAChBD,EAAIE,KAAK,OAAQrP,GACjBmP,EAAIG,OAAS,WACX,IAAM3N,EAAOM,KAAKuH,MAAM2F,EAAII,UAC5B,GAAmB,MAAfJ,EAAIjG,QAAkC,IAAfvH,EAAKa,OAA8B,MAAfb,EAAKa,MAIlDsM,EAAOnN,OAJ2D,CAClE,IAAM6N,EAAS7N,EAAKA,KACpBkN,EAAQW,KAKZL,EAAIM,KAAKV,OAGPW,G,2MACJrP,MAAQ,CACN2E,SAAU,GACV+B,UAAW,GACXC,KAAM,WACNC,OAAQ,GACRC,SAAS,EACTmC,QAAQ,G,EAEV5I,kB,sBAAoB,sBAAAG,EAAA,sEACb,EAAK2I,eADQ,2C,EAKpBA,a,sBAAe,8BAAA3I,EAAA,6DAEb,EAAKa,SAAS,CACZyF,SAAS,IAHE,kBAMCvH,IAAOyF,SAAS,CAC1BvC,MAAO4L,KAPE,OAMX/M,EANW,OASPC,EAAO,GACXD,EAAIC,MACFD,EAAIC,KAAKA,MACTD,EAAIC,KAAKA,KAAK4E,KAAI,SAAAC,GAChB,IAAIoD,EAAYpD,EAAKoD,WAAapD,EAAKoD,UAAUC,MAAM,KACvDrD,EAAKoD,UAAYA,EACjBjI,EAAKW,KAAKkE,MAEQ,GAAlB9E,EAAIC,KAAKa,OACX,EAAKf,SAAS,CACZsF,UAAWpF,IAnBJ,kDAuBXE,EAAA,EAAQW,MAAM,KAAMX,SAvBT,QAyBb,EAAKJ,SAAS,CACZyF,SAAS,IA1BE,0D,EA8BfpD,aAAe,SAACnD,EAAGyD,GACjB,EAAKtD,MAAMD,KAAKS,yBAAwB,SAACC,EAAKC,GACvCD,GACH,EAAKsC,SAASrC,EAAQ4C,O,EAK5B0F,e,uCAAiB,WAAM7C,GAAN,SAAArG,EAAA,6DAEfqG,EAAO8C,SAAW,IAFH,kBAIDpK,IAAOqK,cAAc,CAC/BnH,MAAO4L,GACP9M,KAAM,CAACsF,KANI,UAQS,GART,OAQLtF,KAAKmB,MARA,uBASXjB,EAAA,EAAQC,QAAQ,4BATL,SAUL,EAAKyH,eAVA,yDAab1H,EAAA,EAAQW,MAAM,KAAMX,SAbP,0D,wDAkBjB8N,iB,uCAAmB,WAAMC,GAAN,iBAAAhP,EAAA,6DACX+N,EAAOiB,EAASjB,KACH,UACN,GACPkB,EAJW,gFAIwEC,mBAFtE,WAFF,oBAMJA,mBAHA,KAHI,kBAQTpB,GAAWC,EAAMkB,GAASE,MAAK,SAAA/K,GACnC,EAAKvD,SAAS,CACZuD,gBAVW,gFAcRnD,EAAA,EAAQW,MAAM,KAAIX,UAdV,yD,wDAkBnBgC,S,uCAAW,WAAOrC,EAAQ4C,GAAf,yBAAAxD,EAAA,yDAELqJ,EAAM,GACNC,EAAQ1I,EAAO0I,OAAS1I,EAAO0I,MAAMC,WAHhC,EAIkB,EAAK9J,MAAxBgJ,EAJC,EAIDA,OAAQpC,EAJP,EAIOA,OACH,IAAT7C,EACF6F,EAAG,cACDG,OAAQ5I,EAAO4I,OACfC,SAAU7I,EAAO6I,SACjBG,KAAMhJ,EAAOgJ,KACbiB,YAAajK,EAAOkK,MACpBC,MAAOnK,EAAOmK,MACdqE,WAAYxO,EAAOwO,WACnBC,YAAazO,EAAOyO,YACpBC,YAAa1O,EAAO0O,YACpBtG,UAAWpI,EAAO0I,MAClBiG,gBAAiB3O,EAAO4O,SACxBC,gBAAiB7O,EAAO8O,SACxBC,YAAa,EAAKlQ,MAAM2E,UAZvB,YAaUkF,IAGV,GACDE,OAAQ5I,EAAO4I,OACfC,SAAU7I,EAAO6I,SACjBG,KAAMhJ,EAAOgJ,KACbiB,YAAajK,EAAOkK,MACpBC,MAAOnK,EAAOmK,MACdqE,WAAYxO,EAAOwO,WACnBC,YAAazO,EAAOyO,YACpBC,YAAa1O,EAAO0O,YACpBtG,UAAWpI,EAAO0I,MAClBiG,gBAAiB3O,EAAO4O,SACxBC,gBAAiB7O,EAAO8O,SACxBC,YAAa,EAAKlQ,MAAM2E,UAZvB,2BAaUkF,GAbV,0BAcS,KAdZD,EAAG,IAiBDZ,EAvCK,wBAwCPY,EAAI2B,OAAS3E,EAAO2E,OAxCb,kBA0COjM,IAAOqK,cAAc,CAC/BnH,MAAO4L,GACP9M,KAAM,CAACsI,KA5CJ,OA8CiB,GA9CjB,OA8CGtI,KAAKmB,OACXjB,EAAA,EAAQC,QAAQ,kCAElB,EAAKL,SAAS,CACZuF,KAAM,WACNqC,QAAO,IAET,EAAKE,eArDA,kDAuDL1H,EAAA,EAAQW,MAAM,KAAMX,SAvDf,2DA2DOlC,IAAOiD,WAAW,CAC5BC,MAAO4L,GACP9M,KAAM,CAACsI,KA7DJ,QA+DiB,GA/DjB,OA+DGtI,KAAKmB,OACXjB,EAAA,EAAQC,QAAQ,kCAElB,EAAKL,SAAS,CACZuF,KAAM,WACNqC,QAAO,IAET,EAAKE,eAtEA,mDAwEL1H,EAAA,EAAQW,MAAM,KAAMX,SAxEf,kE,0DA4EXoK,MAAQ,WACN,IAEIC,EAFWC,SAASC,eAAe,qBAEbC,UAEtBC,EAAaH,SAASI,KAAKF,UAQ/B,OANAF,SAASI,KAAKF,UAAYH,EAE1BM,OAAOP,QAEPO,OAAOpK,SAASqK,SAChBN,SAASI,KAAKF,UAAYC,GACnB,G,EAETkE,UAAY,SAACC,EAAKhN,GAChB,IAAMiN,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,kBAAMnN,EAASiN,EAAOG,WACtDH,EAAOI,cAAcL,I,EAEvBM,aAAe,SAAAxN,GACbF,QAAQC,IAAI,OAAQC,GACK,cAArBA,EAAKoL,KAAKzF,QAGW,SAArB3F,EAAKoL,KAAKzF,QAEZ,EAAKsH,UAAUjN,EAAKoL,KAAKqC,eAAe,SAAAhM,GAAQ,OAC9C,EAAKvD,SAAS,CACZuD,iB,EAMRsC,QAAU,WACR,EAAK7F,SAAS,CACZuF,KAAM,e,EAGVK,OAAS,WACP,EAAK5F,SAAS,CACZuF,KAAM,c,EAGV+E,QAAU,SAAA9E,GACR,EAAKxF,SAAS,CACZuF,KAAM,YACNC,Y,EAGJ+E,OAAS,SAAA/E,GACP,EAAKxF,SAAS,CACZuF,KAAM,YACNC,SACAoC,QAAQ,K,EAGZ7B,UAAY,WACV,EAAK/F,SAAS,CACZuF,KAAM,mB,EAKV6E,eAAiB,SAAA5E,GACD,IAAMnF,QAAQ,CAC1B8D,MAAO,2BACPyC,MAAO,IACPvC,QACE,yBAAKzB,MAAO,CAAEiE,UAAW,SACvB,uBACEjD,QACoB,iBAAlB4B,EAAOiC,QAAqC,iBAAlBjC,EAAOiC,OAAkB,EAAI,EAEzD4C,YAAa9C,IAEb,kBAAC,GAAD,CAAMpD,MAAM,6BACZ,kBAAC,GAAD,CAAMA,MAAM,iBACZ,kBAAC,GAAD,CAAMA,MAAM,kBAThB,Q,wEAgBI,IAAD,OACClC,EAAsBhB,KAAK5B,MAAMD,KAAjC6C,kBADD,EAEuDhB,KAAKrC,MAA3D2E,EAFD,EAECA,SAAU+B,EAFX,EAEWA,UAAWG,EAFtB,EAEsBA,QAAeD,GAFrC,EAE+BD,KAF/B,EAEqCC,QAAOoC,EAF5C,EAE4CA,OAC7CqD,EAAiB,CACrBC,SAAU,CACRC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,MAeVoE,EACJ,6BACE,uBAAM7M,KAAM1B,KAAKrC,MAAM6G,QAAU,UAAY,SAC7C,yBAAKvD,UAAU,mBAAf,WAGEuN,EAAU,CACd,CAAE7D,MAAO,iCAAS8D,MAAO,kCACzB,CAAE9D,MAAO,iCAAS8D,MAAO,kCACzB,CAAE9D,MAAO,iCAAS8D,MAAO,kCACzB,CAAE9D,MAAO,2BAAQ8D,MAAO,6BAEpBzJ,EAAQ,CACZI,cAAe,kBAAC,EAAD,CAAWlB,MAAOwK,OACjCvJ,UACE,kBAAC,IAAMmF,SAAP,KACE,uCACMN,EADN,CAGE/I,UAAU,qBACVwJ,GAAG,sBAEH,wBAAI9I,MAAO,CAAE+I,UAAW,WAAxB,yEAGA,wBAAI/I,MAAO,CAAE+I,UAAW,WAAxB,wCACA,sBAAMrJ,KAAN,CAAWsJ,MAAO,yDAChB,8BAAOpG,EAAOmD,SAEhB,sBAAMrG,KAAN,CAAWsJ,MAAO,+DAChB,8BAAOpG,EAAOoD,WAEhB,sBAAMtG,KAAN,CAAWsJ,MAAO,mDAChB,8BAAOpG,EAAOuD,OAEhB,sBAAMzG,KAAN,CAAWsJ,MAAO,+DAChB,8BAAOpG,EAAOwE,cAEhB,sBAAM1H,KAAN,CAAWsJ,MAAO,6CAChB,8BAAOpG,EAAO0E,QAEhB,sBAAM5H,KAAN,CAAWsJ,MAAO,8EAChB,8BAAOpG,EAAO+I,YADhB,WAEE,8BAAO/I,EAAOgJ,aAFhB,WAGE,8BAAOhJ,EAAOiJ,aAHhB,YAKA,sBAAMnM,KAAN,CAAWsJ,MAAO,6FAChB,uBAAUgE,MAAV,CACEH,QAASA,EACTI,aAAcrK,EAAO2C,UACrB2H,SAAU7O,KAAK8O,oBAGnB,wBAAInN,MAAO,CAAE+I,UAAW,WAAxB,oDAEA,sBAAMrJ,KAAN,CAAWsJ,MAAO,iEAChB,8BAAOpG,EAAOkJ,kBAEhB,sBAAMpM,KAAN,CAAWsJ,MAAO,iEAChB,8BAAOpG,EAAOoJ,kBAEhB,sBAAMtM,KAAN,CAAWsJ,MAAO,+DAChB,yBACEpF,IAAKhB,EAAOsJ,YACZkB,IAAI,SACJpN,MAAO,CAAEgE,MAAO,QAASH,OAAQ,aAKvC,uBACEd,KAAK,WACLhD,KAAK,UACLT,UAAU,2BACVa,QAAS9B,KAAKuJ,OAJhB,iBAUJtE,SACE,uBACEhE,UAAU,6BACV+J,WAAW,aACXC,WAAY5G,EACZ6G,WAAY,SAAApH,GAAI,OACd,sBAAMzC,KAAN,CACE8J,QAAS,CACP,uBACElH,IAAI,qBACJnC,QAAS,WACP,EAAKuH,QAAQvF,KAHjB,gBAQA,uBACEG,IAAI,qBACJnC,QAAS,WACP,EAAKwH,OAAOxF,KAHhB,gBAQkB,MAAlBA,EAAKuD,SACH,uBACEpD,IAAI,qBACJnC,QAAS,WACP,EAAKqH,eAAerF,KAHxB,4BASA,uBACEZ,MAAM,6CACNmI,UAAW,WACT,EAAKjE,eAAetD,IAEtBwH,OAAO,MACPC,WAAW,MAEX,uBAAGtH,IAAI,sBAAP,mBAMN,sBAAM5C,KAAKoE,KAAX,CAIEvC,MACE,kBAAC,IAAMoH,SAAP,KACE,uBAAGrJ,UAAU,kCAAkCuK,KAAK,KAApD,sBACO1H,EAAK4D,QAEZ,uBAAGzG,UAAU,kCAAkCuK,KAAK,KAApD,4BACQ1H,EAAK6D,WAIjBxE,YACE,uBACEvB,MACyB,iBAAvBkC,EAAKkL,cACD,WACuB,iBAAvBlL,EAAKkL,cACL,MACA,SAGLlL,EAAKkL,iBAIZ,8DAAWlL,EAAK2H,iBAMxBvG,UACE,uCACM8E,EADN,CAGE/I,UAAU,uBAEV,wBAAIU,MAAO,CAAE+I,UAAW,WAAxB,yEACA,wBAAI/I,MAAO,CAAE+I,UAAW,WAAxB,wCACA,sBAAMrJ,KAAN,CAAWsJ,MAAO,yDACf3J,EAAkB,SAAU,CAC3BM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,uCACTuM,YAAY,IAGhBC,aAAchF,EAAOpC,EAAOmD,OAAO,MARpC1G,CASE,8BAEL,sBAAMK,KAAN,CAAWsJ,MAAO,+DACf3J,EAAkB,WAAY,CAC7BM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,6CACTuM,YAAY,IAGhBC,aAAchF,EAAOpC,EAAOoD,SAAS,MARtC3G,CASE,8BAEL,sBAAMK,KAAN,CAAWsJ,MAAO,mDACf3J,EAAkB,OAAQ,CACzBM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,mDACTuM,YAAY,IAGhBC,aAAahF,EAAQpC,EAAOuD,KAAK,MARlC9G,CASE,8BAEL,sBAAMK,KAAN,CAAWsJ,MAAO,+DACf3J,EAAkB,QAAS,CAC1BM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,0DACTuM,YAAY,IAGhBC,aAAchF,EAAOpC,EAAOwE,YAAY,MARzC/H,CASE,8BAEL,sBAAMK,KAAN,CAAWsJ,MAAO,6CACf3J,EAAkB,QAAS,CAC1BM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,8CACTuM,YAAY,IAGhBC,aAAchF,EAAOpC,EAAO0E,MAAM,MARnCjI,CASE,8BAEL,sBAAMK,KAAN,CAAWsJ,MAAO,8EACf3J,EAAkB,aAAc,CAC/B2K,aAAchF,EAAOpC,EAAO+I,WAAW,MADxCtM,CAEE,6BACFA,EAAkB,cAAe,CAChC2K,aAAchF,EAAOpC,EAAOgJ,YAAY,MADzCvM,CAEE,6BACFA,EAAkB,cAAe,CAChC2K,aAAahF,EAAQpC,EAAOiJ,YAAY,MADzCxM,CAEE,8BAEL,sBAAMK,KAAN,CAAWsJ,MAAO,6FACf3J,EAAkB,QAAS,CAC1BM,MAAO,GACP2N,cAAe,UACftD,aAAchF,EAAOpC,EAAOiD,MAAM,MAHnCxG,CAKC,uBAAU2N,MAAV,CACEH,QAASA,EACTK,SAAU7O,KAAK8O,qBAIrB,wBAAInN,MAAO,CAAE+I,UAAW,WAAxB,oDAEA,sBAAMrJ,KAAN,CAAWsJ,MAAO,iEACf3J,EAAkB,WAAY,CAQ7B2K,aAAchF,EAAOpC,EAAOkJ,gBAAgB,MAR7CzM,CASE,8BAEL,sBAAMK,KAAN,CAAWsJ,MAAO,iEACf3J,EAAkB,WAAY,CAQ7B2K,aAAchF,EAAOpC,EAAOoJ,gBAAgB,MAR7C3M,CASE,8BAEL,sBAAMK,KAAN,CAAWsJ,MAAO,qEACf3J,EAAkB,cAAe,CAChC2K,aAAchF,EAAOpC,EAAOsJ,YAAY,MADzC7M,CAGC,wBACEwL,KAAK,SACL0C,SAAS,eACTjO,UAAU,kBACVkO,gBAAgB,EAChBC,cAAepP,KAAKiN,iBAEpBoC,SAAUrP,KAAKsP,iBACfT,SAAU7O,KAAKqO,cAEd/L,EACC,yBAAKiD,IAAKjD,EAAUyM,IAAI,SAASpN,MAAO,CAAEgE,MAAO,UAEjD4I,KAKR,uBACEtN,UAAU,0BACVc,SAAS,SACTD,QAAS,WACP,EAAKV,aAAa,EAAM,KAJ5B,gBASA,uBACEM,KAAK,UACLT,UAAU,4BACVc,SAAS,SACTD,QAAS,WACP,EAAKV,aAAa,EAAM,KAL5B,kBAcN,OACE,uBAAMF,SAAUsD,GAChB,kBAAC,EAAD,CACEQ,MAAOA,EACPV,KAAMtE,KAAKrC,MAAM2G,KACjBK,OAAQ3E,KAAK2E,OACbG,UAAW9E,KAAK8E,UAChBF,QAAS5E,KAAK4E,QACdgH,IAAK,SAAAC,GAAE,OAAK,EAAKC,aAAeD,U,GA/lBjB7J,aClDRgL,GDupBA,IAAK/K,QAAL,CAAc+K,I,2BEzoBvBuC,I,OAAgB,gBAChBrJ,GAAiB,eACjBC,GAAY,eAGZqJ,I,IAFEC,S,2MAGN9R,MAAQ,CACNsB,KAAM,CAAC,IACPqF,KAAM,WACNoL,MAAM,EACNnL,OAAQ,GACRoL,SAAS,G,EAEX5R,kB,sBAAoB,sBAAAG,EAAA,sEACZ,EAAK0R,UADO,2C,EASpBvG,QAAU,SAAA9E,GACR5D,QAAQC,IAAI,SAAU2D,GACtB,EAAKxF,SAAS,CACZuF,KAAM,YACNC,Y,EAGJI,OAAS,WACP,EAAK5F,SAAS,CACZuF,KAAM,c,EAGVuL,aAAe,WACb,EAAK9Q,SAAS,CACZ4Q,SAAS,K,EAGbG,UAAY,WACV,EAAK/Q,SAAS,CACZ4Q,SAAS,K,EAGbI,O,uCAAS,WAAMxL,GAAN,eAAArG,EAAA,6DACD0I,EAAarH,KAAKuH,MAAMzH,aAAa0H,QAAQ,eACnDxC,EAAO6G,aAAexE,EAAWiB,SAF1B,kBAKO5K,IAAOiD,WAAW,CAC5BC,MAAO+F,GACPjH,KAAM,CAACsF,KAPJ,cASiB,GATjB,OASGtF,KAAKmB,OACXjB,EAAA,EAAQC,QAAQ,4BAVb,SAYC,EAAKwQ,UAZN,yDAcLzQ,EAAA,EAAQW,MAAM,KAAMX,SAdf,0D,wDAiBT6Q,c,uCAAgB,WAAM/R,GAAN,eAAAC,EAAA,sDACNqG,EAAW,EAAK5G,MAAhB4G,OACR,EAAKnG,MAAMD,KAAKS,wBAAhB,uCAAwC,WAAOC,EAAKC,GAAZ,eAAAZ,EAAA,0DAClCW,EADkC,wDAKlCI,EAAO,CACT,CACEgH,QAASnH,EAAOmH,QAChBgK,UAAW1L,EAAO2E,SARgB,kBAYxBjM,IAAOiD,WAAW,CAC5BC,MAAOgG,GACPlH,SAdkC,OAgBb,IAhBa,OAgB5BA,KAAKmB,OACXjB,EAAA,EAAQC,QAAQ,4BAjBkB,kDAoBpCD,EAAA,EAAQW,MAAM,KAAMX,SApBgB,QAsBtC,EAAKJ,SAAS,CACZ4Q,SAAS,IAvB2B,0DAAxC,oCAAA3P,KAAA,gBAFc,2C,wDA6BhB6G,a,sBAAe,8BAAA3I,EAAA,+EAGCjB,IAAOyF,SAAS,CAC1BvC,MAAO+F,KAJE,UAMY,KAHvBlH,EAHW,QAMHC,KAAKa,MANF,uBAOTa,QAAQC,IAAI,gBAAiB5B,EAAIC,KAAKA,MAClCA,EAAO,GAEXD,EAAIC,KAAKA,KAAK4E,KAAI,SAAAC,GACZA,EAAKsH,cACPnM,EAAKW,KAAKkE,EAAKoM,YAZV,kBAeFjR,GAfE,mH,EAmBf2Q,Q,sBAAU,kCAAA1R,EAAA,6DACF0I,EAAarH,KAAKuH,MAAMzH,aAAa0H,QAAQ,eACnD,EAAKhI,SAAS,CACZ2Q,MAAM,IAHA,kBAOMzS,IAAOyF,SAAS,CAC1BvC,MAAOoP,KARH,UAUiB,KAHvBvQ,EAPM,QAUEC,KAAKa,MAVP,iCAWkB,EAAK+G,eAXvB,OAWAsJ,EAXA,OAaJxP,QAAQC,IAAI,YAAauP,GACrBlR,EAAO,GACXD,EAAIC,KAAKA,KAAK4E,KAAI,SAAAC,GAChBnD,QAAQC,IAAI,OAAQkD,GAEhBqM,EAAUC,SAAStM,EAAKoM,UAAYpM,EAAK+D,UAAYjB,EAAWiB,UAClE/D,EAAKuM,UAAW,EAChBpR,EAAKW,KAAKkE,IAEV7E,EAAKW,KAAKkE,MAGdnD,QAAQC,IAAI,OAAO3B,GACnB,EAAKF,SAAS,CACZE,SA3BE,kEAgCR,EAAKF,SAAS,CACZ2Q,MAAM,IAjCA,0D,sFA3FR1P,KAAKjB,SAAW,SAACpB,EAAOoD,O,+BAgIhB,IAAD,SAC8Bf,KAAKrC,MAAlCsB,EADD,EACCA,KAAMyQ,EADP,EACOA,KAAMpL,EADb,EACaA,KAAMC,EADnB,EACmBA,OAYpB+L,EAAU,CACd,CACEpN,MAAO,eACPqN,UAAW,SACXtM,IAAK,SACL0B,MAAO,IAET,CACEzC,MAAO,2BACPqN,UAAW,YACXtM,IAAK,YACL0B,MAAO,KAET,CACEzC,MAAO,2BACPqN,UAAW,OACXtM,IAAK,WACL0B,MAAO,KAET,CACEzC,MAAO,qBACPqN,UAAW,SACXtM,IAAK,SACL0B,MAAO,KAET,CACEzC,MAAO,2BACPqN,UAAW,SACXtM,IAAK,SACL0B,MAAO,IACP6K,OAAQ,SAAAvR,GACN,OACE,uBACA2C,MACW,uBAAT3C,EAAiB,OAAkB,uBAATA,EAAiB,WAAa,SAGvDA,KAKT,CACEiE,MAAO,eACPqN,UAAW,SACXtM,IAAK,SACL0B,MAAO,IACP6K,OAAQ,SAACC,EAAMlM,GACb,OACE,8BACE,uBACEzC,QAAS,WACP,EAAKuH,QAAQ9E,KAFjB,gBAOA,wBAAS7C,KAAK,aACZ6C,EAAO8L,SAOJ,KANL,uBACEvO,QAAS,WACP,EAAKiO,OAAOxL,KAFhB,gCAYJY,EACJ,kBAAC,IAAMmF,SAAP,KACY,cAAThG,EACC,uBACEI,KAAM,WACNhD,KAAK,UACLI,QAAS9B,KAAK2E,OACd1D,UAAU,mBAJZ,gBAQE,KACJ,uCA7FmB,CACrBgJ,SAAU,CACRC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,MAsFZ,CAEElJ,UAAU,mBACVwJ,GAAG,qBAEH,yBAAKxJ,UAAU,6BACb,yBAAKA,UAAU,kCACb,wBAAIU,MAAO,CAAE+I,UAAW,WAAxB,uDACA,wBAAI/I,MAAO,CAAE+I,UAAW,WAAxB,4BACA,sBAAMrJ,KAAN,CAAWsJ,MAAO,+DAChB,8BAAOpG,EAAOqD,OAEhB,sBAAMvG,KAAN,CAAWsJ,MAAO,qEAChB,8BAAOpG,EAAOwD,gBAEhB,sBAAM1G,KAAN,CAAWsJ,MAAO,yDAChB,8BAAOpG,EAAOmD,SAEhB,sBAAMrG,KAAN,CAAWsJ,MAAO,+DAChB,8BAAOpG,EAAOoD,WAEhB,sBAAMtG,KAAN,CAAWsJ,MAAO,mDAChB,8BAAOpG,EAAOuD,OAEhB,sBAAMzG,KAAN,CAAWsJ,MAAO,+DAChB,8BAAOpG,EAAOwE,cAEhB,sBAAM1H,KAAN,CAAWsJ,MAAO,6CAChB,8BAAOpG,EAAO0E,QAEhB,sBAAM5H,KAAN,CAAWsJ,MAAO,uFAChB,8BAAOpG,EAAOyD,aAEhB,sBAAM3G,KAAN,CAAWsJ,MAAO,uFAChB,8BAAOpG,EAAO0D,cAchB,wBAAItG,MAAO,CAAE+I,UAAW,WAAxB,4BACA,sBAAMrJ,KAAN,CAAWsJ,MAAO,qEAChB,8BAAOpG,EAAO2D,cAEhB,sBAAM7G,KAAN,CAAWsJ,MAAO,+DAChB,8BAAOpG,EAAO4D,YAEhB,sBAAM9G,KAAN,CACEsJ,MACE,+JAGF,8BAAOpG,EAAO6D,cAEhB,sBAAM/G,KAAN,CACEsJ,MACE,+JAGF,8BAAOpG,EAAO+D,YAEhB,sBAAMjH,KAAN,CACEsJ,MACE,6OAKF,8BAAOpG,EAAO8D,mBAEhB,sBAAMhH,KAAN,CACEsJ,MACE,6LAKF,8BAAOpG,EAAOgE,gBAEhB,sBAAMlH,KAAN,CACEsJ,MACE,+JAGF,8BAAOpG,EAAO+D,YAEhB,sBAAMjH,KAAN,CACEsJ,MAAO,mJAEP,8BAAOpG,EAAOiE,cAEhB,sBAAMnH,KAAN,CACEsJ,MAAO,2HAEP,8BAAOpG,EAAOkE,aAEhB,sBAAMpH,KAAN,CACEsJ,MAAO,mJAEP,8BAAOpG,EAAOiE,cAEhB,sBAAMnH,KAAN,CACEsJ,MACE,yVAKF,8BAAOpG,EAAOmE,eAEhB,sBAAMrH,KAAN,CAAWsJ,MAAO,+GAChB,8BAAOpG,EAAOoE,WAEhB,sBAAMtH,KAAN,CAAWsJ,MAAO,2EAChB,8BAAOpG,EAAOqE,OAEhB,sBAAMvH,KAAN,CAAWsJ,MAAO,qEAChB,8BAAOpG,EAAOsE,YAEhB,sBAAMxH,KAAN,CAAWsJ,MAAO,+DAChB,8BAAOpG,EAAOuE,iBAGjBvE,EAAO,cACN,yBAAKtD,UAAU,oCACb,kFACCsD,EAAO,eACNA,EAAO,cAAgBV,KAAI,SAAAC,GACzB,OACE,kBAAC,EAAD,CAAYG,IAAKH,EAAKoF,OAAQjK,KAAM6E,QAI1C,QAKZ,OACE,yBAAK7C,UAAU,sBACH,aAATqD,EACC,uBAAMpD,SAAUwO,GACd,wBACEzL,IAAI,IACJhD,UAAU,2BACVqP,QAASA,EACTrF,WAAYhM,EACZyR,OAAQ,CAAEC,EAAG,IAAMC,EAAG,0BAI1BzL,O,GA5YgB0L,IAAM7O,YCnBjBwN,GDqaA,IAAKvN,QAAL,CAAcuN,IEtZvBsB,I,OAAS,gBAETR,I,IADEb,SACQ,SAAArR,GAAU,IAChB2S,EAAW3S,EAAX2S,OACR,MAAO,CACL,CACE7N,MAAO,qBACPqN,UAAW,WACXtM,IAAK,WACL0B,MAAO,KAET,CACEzC,MAAO,eACPqN,UAAW,SACXtM,IAAK,SACL0B,MAAO,KAET,CACEzC,MAAO,qBACPqN,UAAW,eACXtM,IAAK,eACL0B,MAAO,KAET,CACEzC,MAAO,2BACPqN,UAAW,aACXtM,IAAK,aACL0B,MAAO,KAET,CACEzC,MAAO,eACPe,IAAK,SACL0B,MAAO,IACP6K,OAAQ,SAACC,EAAMlM,GAAP,OACN,8BACE,uBACEzC,QAAS,WACPiP,EAAOxM,KAFX,sBAYJyM,G,2MACJrT,MAAQ,CACN+R,MAAM,EACNzQ,KAAM,GACNsF,OAAQ,GACRoL,SAAS,EACTxC,QAAS,I,EAOXyC,Q,sBAAU,4BAAA1R,EAAA,6DAER,EAAKa,SAAS,CACZyF,SAAS,IAHH,kBAMMvH,IAAOyF,SAAS,CAC1BvC,MAAO2Q,KAPH,OASgB,IAHtB9R,EANM,QASEC,KAAKa,OACX,EAAKf,SAAS,CACZE,KAAMD,EAAIC,KAAKA,OAXb,gDAeNE,EAAA,EAAQW,MAAM,KAAMX,SAfd,QAiBR,EAAKJ,SAAS,CACZyF,SAAS,IAlBH,yD,EAuBVuM,OAAS,SAAAzT,GACP,IAAKA,EACH,OAAO,IAAM2T,QAAQ,CACnB/N,MAAO,qDAIX,IADA,IAAMgO,EAAO5T,EAAI6J,MAAM,UACdgK,EAAI,EAAGC,EAAMF,EAAK3N,OAAQ4N,EAAIC,EAAKD,IAC1CrH,OAAO6C,KAAKuE,EAAKC,K,mFAnCnBnR,KAAK4P,Y,+BAsCG,IAAD,SACgB5P,KAAKrC,MAApB+R,EADD,EACCA,KAAMzQ,EADP,EACOA,KACd,OACE,yBAAKgC,UAAU,cACb,uBAAMC,SAAUwO,GACd,wBACEzL,IAAI,IACJhD,UAAU,mBACVqP,QAASA,GAAQ,CACfS,OAAQ,SAAAxM,GACN,EAAKwM,OAAOxM,EAAO4I,UAErBlO,KAAMA,IAERyR,OAAQ,CAAEC,EAAG,IAAMC,EAAG,uBACtB3F,WAAYhM,U,GA9DD+C,aC9DRgP,GDoIA,IAAK/O,QAAL,CAAc+O,IE3HrBK,G,IAAAA,QA0COC,G,2MAvCb3T,MAAQ,G,EAGRI,kBAAoB,a,wEAGlB,OACI,uBACQ0F,iBAAiB,IACjB8N,YAAa,CACX/L,OAAQ,OACRgM,QAAS,OACTC,WAAY,SACZC,YAAa,SAGf,kBAACL,GAAD,CAASM,IAAI,eAAK1N,IAAI,KACrB,kBAAC,EAAD,OAED,kBAACoN,GAAD,CAASM,IAAI,6CAAU1N,IAAI,KACzB,kBAAC,GAAD,OAEF,kBAACoN,GAAD,CAASM,IAAI,uCAAS1N,IAAI,KACzB,kBAAC,GAAD,OAKD,kBAACoN,GAAD,CAASM,IAAI,2BAAO1N,IAAI,KACtB,kBAAC,GAAD,OAEF,kBAACoN,GAAD,CAASM,IAAI,2BAAO1N,IAAI,KACtB,kBAAC,GAAD,Y,GAjCSjC,a,4kBCM3B,IAAMG,GAAW,eACX6H,GAAiB,CACrBC,SAAU,CACRC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,MAGVmG,GAAU,SAAAlS,GAAU,IAChBkL,EAA4BlL,EAA5BkL,OAAQsI,EAAoBxT,EAApBwT,UAAoBxT,EAATa,KAC3B,MAAO,CACL,CACEiE,MAAO,eACPqN,UAAW,SACXtM,IAAK,SACL0B,MAAO,IAET,CACEzC,MAAO,eACPqN,UAAW,QACXtM,IAAK,QACL0B,MAAO,IACP6K,OAAQ,SAAAC,GAAI,OAAI,2BAAIA,KAEtB,CACEvN,MAAO,2BACPqN,UAAW,UACXtM,IAAK,UACL0B,MAAO,KAET,CACEzC,MAAO,qBACPqN,UAAW,gBACXtM,IAAK,gBACL0B,MAAO,KAET,CACEzC,MAAO,2BACPqN,UAAW,cACXtM,IAAK,cACL0B,MAAO,KAET,CACEzC,MAAO,eACPqN,UAAW,SACXtM,IAAK,SACLuM,OAAQ,SAAAvR,GAAI,OACV,uBAAK2C,MAAgB,uBAAT3C,EAAiB,WAAa,SAAUA,IAEtD0G,MAAO,KAET,CACEzC,MAAO,eACPe,IAAK,SACL0B,MAAO,IACP6K,OAAQ,SAACC,EAAMlM,GAAP,OACN,8BACE,uBACEzC,QAAS,WACPwH,EAAO/E,KAFX,gBAOA,wBAAS7C,KAAK,aACQ,MAArB6C,EAAOsN,UACN,uBACE/P,QAAS,WACP8P,EAAUrN,EAAQ,KAFtB,4BAQA,uBACEzC,QAAS,WACP8P,EAAUrN,EAAQ,KAFtB,qBAcNuN,G,2MACJnU,MAAQ,CACNsB,KAAM,GACNsF,OAAQ,GACRD,KAAM,WACNoL,MAAM,EACNC,SAAS,EACToC,aAAa,G,EAEflC,aAAe,WACb,EAAK9Q,SAAS,CACZ4Q,SAAS,EACToC,aAAa,K,EAGjBC,K,uCAAO,WAAO/T,EAAGyD,GAAV,SAAAxD,EAAA,sDACL,EAAKE,MAAMD,KAAKS,yBAAwB,SAACC,EAAKC,GACvCD,GACH,EAAKsC,SAASrC,EAAQ4C,MAHrB,2C,0DAQPP,S,uCAAW,WAAOrC,EAAQ4C,GAAf,iBAAAxD,EAAA,yDAEI,IAATwD,EAFK,wBAGHzC,EAAO,CAACH,GAHL,kBAKO7B,IAAOiD,WAAW,CAC5BC,MAAOgC,GACPlD,SAPG,UASkB,IATlB,OASGA,KAAKmB,MATR,wBAUHjB,EAAA,EAAQC,QAAQ,4BAChB,EAAKL,SAAS,CACZ4Q,SAAS,IAZR,UAcG,EAAKC,UAdR,0DAiBLzQ,EAAA,EAAQW,MAAM,KAAMX,SAjBf,uCAoBHF,EAAO,CAAC,GAAD,GAAMH,EAAN,CAAcoK,OAAQ,EAAKvL,MAAM4G,OAAO2E,UApB5C,oBAsBOjM,IAAOqK,cAAc,CAC/BnH,MAAOgC,GACPlD,SAxBG,WA0BkB,IA1BlB,OA0BGA,KAAKmB,MA1BR,wBA2BHjB,EAAA,EAAQC,QAAQ,4BAChB,EAAKL,SAAS,CACZgT,aAAa,IA7BZ,UA+BG,EAAKnC,UA/BR,2DAkCLzQ,EAAA,EAAQW,MAAM,KAAMX,SAlCf,kE,0DAuCX8S,QAAU,WACR,EAAKlT,SAAS,CACZuF,KAAM,c,EAGVsN,U,uCAAY,WAAOrN,EAAQ7C,GAAf,SAAAxD,EAAA,6DAERqG,EAAOsN,UADG,GAARnQ,EACiB,IAEA,IAJX,kBAQIzE,IAAOqK,cAAc,CAC/BnH,MAAOgC,GACPlD,KAAM,CAACsF,KAVD,UAYe,IAZf,OAYAtF,KAAKmB,MAZL,uBAaNjB,EAAA,EAAQC,QAAQ,4BAbV,SAcA,EAAKwQ,UAdL,mH,0DAkBZsC,cAAgB,WAEd,OADW,EAAKvU,MAAM2G,MAEpB,IAAK,WACH,OAAO,EAAK6N,iBACd,IAAK,UACH,OAAO,EAAKC,gBACd,IAAK,YACH,OAAO,EAAKC,oB,EAGlBF,eAAiB,WACf,IAAIlT,EAAO,EAAKtB,MAAMsB,KADD,EAEE,EAAKtB,MAAtB+R,EAFe,EAEfA,KAAMnL,EAFS,EAETA,OACJvD,EAAsB,EAAK5C,MAAMD,KAAjC6C,kBAER,OACE,yBAAKC,UAAU,cACb,uBAAQS,KAAK,UAAUT,UAAU,iBAAiBa,QAAS,EAAKwQ,OAAhE,kCAGA,uBAAMpR,SAAUwO,GACd,wBACEzL,IAAI,IACJhD,UAAU,mBACVqP,QAASA,GAAQ,CACfhH,OAAQ,SAAA/E,GACN,EAAK+E,OAAO/E,IAEdqN,UAAW,SAACrN,EAAQ7C,GAClB,EAAKkQ,UAAUrN,EAAQ7C,IAEzBzC,KAAMA,IAERyR,OAAQ,CAAEC,EAAG,IAAMC,EAAG,uBACtB3F,WAAYhM,IAEd,uBACEiE,MAAM,iCACNyM,QAAS,EAAKhS,MAAMgS,QACpBhK,MAAO,IACP4M,KAAM,EAAKC,SACXC,SAAU,EAAK5C,aACf6C,gBAAgB,EAChBC,OAAQ,CACN,uBAAQ1O,IAAI,OAAOnC,QAAS,EAAK+N,cAAjC,gBAGA,uBACE5L,IAAI,SACJvC,KAAK,UACLI,QAAS,WACP,EAAKkQ,KAAK,KAJd,gBASA,uBAAQ/N,IAAI,SAASvC,KAAK,UAAUI,QAAS,EAAKmQ,SAAlD,kBAKF,uCAAUjI,GAAV,CAA0B/I,UAAU,oBAElC,sBAAMI,KAAN,CACEJ,UAAU,uBACV0J,MAAO,mDAEN3J,EAAkB,QAAS,CAC1BM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,iCACTuM,YAAY,KALjB1K,CAQE,8BAEL,sBAAMK,KAAN,CACEJ,UAAU,uBACV0J,MAAO,+DAEN3J,EAAkB,UAAW,CAC5BM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,6CACTuM,YAAY,KALjB1K,CAQE,kBAAC,KAAD,CAAUC,UAAU,sCAI7B,uBACEiC,MAAM,2BACNyM,QAAS,EAAKhS,MAAMoU,YACpBpM,MAAO,IACP4M,KAAM,EAAKC,SACXC,SAAU,EAAK5C,aACf6C,gBAAgB,EAChBC,OAAQ,CACN,uBAAQ1O,IAAI,OAAOnC,QAAS,EAAK+N,cAAjC,gBAGA,uBACE5L,IAAI,SACJvC,KAAK,UACLI,QAAS,WACP,EAAKkQ,KAAK,KAJd,kBAWF,uCAAUhI,GAAV,CAA0B/I,UAAU,oBAElC,sBAAMI,KAAN,CACEJ,UAAU,uBACV0J,MAAO,mDAEN3J,EAAkB,QAAS,CAC1BM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,iCACTuM,YAAY,IAGhBC,aAAcpH,EAAOrB,OARtBlC,CASE,8BAEL,sBAAMK,KAAN,CACEJ,UAAU,uBACV0J,MAAO,+DAEN3J,EAAkB,UAAW,CAC5BM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,6CACTuM,YAAY,IAGhBC,aAAcpH,EAAOnB,SARtBpC,CASE,kBAAC,KAAD,CAAUC,UAAU,yC,EAQrClD,kB,sBAAoB,sBAAAG,EAAA,sEACZ,EAAK0R,UADO,2C,EAGpBA,Q,sBAAU,4BAAA1R,EAAA,6DAER,EAAKa,SAAS,CACZ2Q,MAAM,IAHA,kBAMMzS,IAAOyF,SAAS,CAC1BvC,MAAOgC,KAPH,OASiB,KAHvBnD,EANM,QASEC,KAAKa,OACX,EAAKf,SAAS,CACZE,KAAMD,EAAIC,KAAKA,OAXb,gDAeNE,EAAA,EAAQW,MAAM,KAAMX,SAfd,QAiBR,EAAKJ,SAAS,CACZ2Q,MAAM,IAlBA,yD,EAqBV4C,MAAQ,WACN,EAAKvT,SAAS,CACZ4Q,SAAS,K,EAGbhL,OAAS,WACP,EAAK5F,SAAS,CACZuF,KAAM,c,EAGVgF,OAAS,SAAA/E,GACP,EAAKxF,SAAS,CACZgT,aAAa,EACbxN,Y,wEAGM,IAAD,EACwBvE,KAAKrC,MAD7B,EACCsB,KADD,EACOsF,OADP,EACeD,KAEtB,OAAOtE,KAAKkS,oB,GA1RSrB,IAAM7O,WC5GhB8P,GDyYA,IAAK7P,QAAL,CAAc6P,I,qkBE1X7B,IAAM/F,GAAkB,eCfT6G,I,IDgBPnD,S,2MAGN9R,MAAQ,CACNsB,KAAM,CAAC,IACPsF,OAAQ,GACRD,KAAM,WACNoL,MAAM,EACNC,SAAS,G,EAEX5R,kB,sBAAoB,sBAAAG,EAAA,sEACZ,EAAK0R,UADO,2C,EAGpBA,Q,sBAAU,4BAAA1R,EAAA,6DACR,EAAKa,SAAS,CACZ2Q,MAAM,IAFA,kBAMMzS,IAAOyF,SAAS,CAC1BvC,MAAO4L,KAPH,OASiB,KAHvB/M,EANM,QASEC,KAAKa,OACX,EAAKf,SAAS,CACZE,KAAMD,EAAIC,KAAKA,OAXb,wDAeR,EAAKF,SAAS,CACZ2Q,MAAM,IAhBA,yD,EAmBVrG,QAAU,SAAA9E,GACR,EAAKxF,SAAS,CACZuF,KAAM,YACNC,Y,EAGJI,OAAS,WACP,EAAK5F,SAAS,CACZuF,KAAM,c,EAGVuO,e,uCAAiB,WAAMnR,GAAN,eAAAxD,EAAA,6DACfjB,IAAO6V,aAIL7T,EADW,IAATyC,EACK,CAAC,MAED,EAAK/D,MAAM4G,OAFX,CAGHwO,OAAQ,OAIL,CAAC,MAED,EAAKpV,MAAM4G,OAFX,CAGHwO,OAAQ,OAfC,kBAoBD9V,IAAOqK,cAAc,CAC/BnH,MAAO4L,GACP9M,SAtBW,cAwBU,IAxBV,OAwBLA,KAAKmB,OACXjB,EAAA,EAAQC,QAAQ,4BAElB,EAAKL,SAAS,CACZuF,KAAM,aA5BK,UA8BP,EAAKsL,UA9BE,0DAgCbzQ,EAAA,EAAQW,MAAM,KAAMX,SAhCP,0D,8HAmCP,IAAD,SACuCa,KAAKrC,MAA3CsB,EADD,EACCA,KAAMsF,EADP,EACOA,OAAQD,EADf,EACeA,KAAMoL,EADrB,EACqBA,KAiBtBvK,GAlBC,EAC2BwK,QAkBhC,uCAXqB,CACrB1F,SAAU,CACRC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,MAId,CAA0BlJ,UAAU,qBACxB,cAATqD,EACC,uBACEI,KAAM,WACNhD,KAAK,UACLI,QAAS9B,KAAK2E,OACd1D,UAAU,mBAJZ,gBAQE,KACJ,yBAAKA,UAAU,oBACZsD,EAAOwO,OAAS,KACf,kBAAC,IAAMzI,SAAP,KACG,IACD,uBACErJ,UAAU,kBACVS,KAAK,UACLI,QAAS,WACP,EAAK+Q,eAAe,KAJxB,kBAqBN,qGACA,oEACA,sBAAMxR,KAAN,CAAWsJ,MAAO,yDAChB,8BAAOpG,EAAOmD,SAEhB,sBAAMrG,KAAN,CAAWsJ,MAAO,+DAChB,8BAAOpG,EAAOoD,WAEhB,sBAAMtG,KAAN,CAAWsJ,MAAO,mDAChB,8BAAOpG,EAAOuD,OAEhB,sBAAMzG,KAAN,CAAWsJ,MAAO,+DAChB,8BAAOpG,EAAOwE,cAEhB,sBAAM1H,KAAN,CAAWsJ,MAAO,6CAChB,8BAAOpG,EAAO0E,QAEhB,sBAAM5H,KAAN,CAAWsJ,MAAO,8EAChB,8BAAOpG,EAAO+I,YADhB,WAEE,8BAAO/I,EAAOgJ,aAFhB,WAGE,8BAAOhJ,EAAOiJ,aAHhB,YAKA,sBAAMnM,KAAN,CAAWsJ,MAAO,6FAChB,uBAAUgE,MAAV,CACEH,QA7EQ,CACd,CAAE7D,MAAO,iCAAS8D,MAAO,kCACzB,CAAE9D,MAAO,iCAAS8D,MAAO,kCACzB,CAAE9D,MAAO,iCAAS8D,MAAO,kCACzB,CAAE9D,MAAO,2BAAQ8D,MAAO,6BA0ElBG,aAAcrK,EAAO2C,UACrB2H,SAAU7O,KAAK8O,oBAGnB,gFAEA,sBAAMzN,KAAN,CAAWsJ,MAAO,iEAChB,8BAAOpG,EAAOkJ,kBAEhB,sBAAMpM,KAAN,CAAWsJ,MAAO,iEAChB,8BAAOpG,EAAOoJ,kBAEhB,sBAAMtM,KAAN,CAAWsJ,MAAO,+DAChB,yBACEpF,IAAKhB,EAAOsJ,YACZkB,IAAI,SACJpN,MAAO,CAAEgE,MAAO,QAASH,OAAQ,cAKnC8K,EAAU,CACd,CACEpN,MAAO,eACPqN,UAAW,SACXtM,IAAK,SACL0B,MAAO,IAET,CACEzC,MAAO,qBACPqN,UAAW,SACXtM,IAAK,SACL0B,MAAO,KAET,CACEzC,MAAO,2BACPqN,UAAW,YACXtM,IAAK,YACL0B,MAAO,KAET,CACEzC,MAAO,2BACPqN,UAAW,WACXtM,IAAK,WACL0B,MAAO,KAET,CACEzC,MAAO,2BACPqN,UAAW,YACXtM,IAAK,YACL0B,MAAO,KAET,CACEzC,MAAO,2BACPqN,UAAW,gBACXtM,IAAK,gBACL0B,MAAO,IACP6K,OAAQ,SAAAvR,GACN,OACE,uBACA2C,MACW,uBAAT3C,EAAiB,OAAkB,uBAATA,EAAiB,WAAa,SAGvDA,KAyBT,CACEiE,MAAO,eACPe,IAAK,SACL0B,MAAO,IACP6K,OAAQ,SAACC,EAAMlM,GAAP,OACN,8BACE,uBACEzC,QAAS,WACP,EAAKuH,QAAQ9E,KAFjB,iCAWR,OACE,yBAAKtD,UAAU,eACH,aAATqD,EACC,uBAAMpD,SAAUwO,GACd,wBACEzL,IAAI,IACJhD,UAAU,oBACVqP,QAASA,EACTrF,WAAYhM,EACZyR,OAAQ,CAAEC,EAAG,IAAMC,EAAG,0BAI1BzL,O,GAnRgB0L,IAAM7O,Y,qkBEdhC,IAAMkE,GAAiB,eACjBC,GAAY,eAEVsJ,G,IAAAA,SAEFuD,G,2MACJrV,MAAQ,CACNsB,KAAM,CAAC,IACPqF,KAAM,WACNoL,MAAM,EACNnL,OAAQ,GACRoL,SAAS,G,EAEX5R,kB,sBAAoB,sBAAAG,EAAA,6DAClBjB,IAAO6V,aADW,SAEZ,EAAKlD,UAFO,2C,EAUpBvG,QAAU,SAAA9E,GACR,EAAKxF,SAAS,CACZuF,KAAM,YACNC,Y,EAGJI,OAAS,WACP,EAAK5F,SAAS,CACZuF,KAAM,c,EAGVuL,aAAe,WACb,EAAK9Q,SAAS,CACZ4Q,SAAS,K,EAGbG,UAAY,WACV,EAAK/Q,SAAS,CACZ4Q,SAAS,K,EAGbsD,gB,uCAAkB,WAAMvR,GAAN,eAAAxD,EAAA,6DAIde,EADW,IAATyC,EACK,CAAC,MAED,EAAK/D,MAAM4G,OAFX,CAGHwO,OAAQ,OAIL,CAAC,MAED,EAAKpV,MAAM4G,OAFX,CAGHwO,OAAQ,OAdE,kBAmBF9V,IAAOqK,cAAc,CAC/BnH,MAAO+F,GACPjH,SArBY,cAuBS,IAvBT,OAuBNA,KAAKmB,OACXjB,EAAA,EAAQC,QAAQ,4BAElB,EAAKL,SAAS,CACZuF,KAAM,aA3BM,SA6BR,EAAKsL,UA7BG,yDA+BdzQ,EAAA,EAAQW,MAAM,KAAMX,SA/BN,0D,wDAkClB6Q,c,uCAAgB,WAAM/R,GAAN,eAAAC,EAAA,sDACNqG,EAAW,EAAK5G,MAAhB4G,OACR,EAAKnG,MAAMD,KAAKS,wBAAhB,uCAAwC,WAAOC,EAAKC,GAAZ,eAAAZ,EAAA,0DAClCW,EADkC,wDAKlCI,EAAO,CACT,CACEgH,QAASnH,EAAOmH,QAChBgK,UAAW1L,EAAO2E,SARgB,kBAYxBjM,IAAOiD,WAAW,CAC5BC,MAAOgG,GACPlH,SAdkC,UAgBb,IAhBa,OAgB5BA,KAAKmB,MAhBuB,wBAiBlCjB,EAAA,EAAQC,QAAQ,4BAChB,EAAKuF,SAlB6B,UAmB5B,EAAKiL,UAnBuB,0DAsBpCzQ,EAAA,EAAQW,MAAM,KAAMX,SAtBgB,QAwBtC,EAAKJ,SAAS,CACZ4Q,SAAS,IAzB2B,0DAAxC,oCAAA3P,KAAA,gBAFc,2C,wDA+BhB4P,Q,sBAAU,4BAAA1R,EAAA,6DACR,EAAKa,SAAS,CACZ2Q,MAAM,IAFA,kBAMMzS,IAAO+J,YAAY,CAC7B7G,MAAO+F,GACPe,SAAUd,KARN,OAUiB,KAJvBnH,EANM,QAUEC,KAAKmB,OACX,EAAKrB,SAAS,CACZE,KAAMD,EAAIC,KAAKA,OAZb,wDAgBR,EAAKF,SAAS,CACZ2Q,MAAM,IAjBA,yD,sFA1FR1P,KAAKjB,SAAW,SAACpB,EAAOoD,O,+BA+GhB,IAAD,SACuCf,KAAKrC,MAA3CsB,EADD,EACCA,KAAMyQ,EADP,EACOA,KAAMpL,EADb,EACaA,KAAMC,EADnB,EACmBA,OAAQoL,EAD3B,EAC2BA,QAC1B3O,EAAsBhB,KAAK5B,MAAMD,KAAjC6C,kBACFgJ,EAAiB,CACrBC,SAAU,CACRC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,MAeVmG,EAAU,CACd,CACEpN,MAAO,eACPqN,UAAW,SACXtM,IAAK,SACL0B,MAAO,IAET,CACEzC,MAAO,2BACPqN,UAAW,OACXtM,IAAK,OACL0B,MAAO,KAET,CACEzC,MAAO,2BACPqN,UAAW,YACXtM,IAAK,YACL0B,MAAO,KAET,CACEzC,MAAO,2BACPqN,UAAW,WACXtM,IAAK,WACL0B,MAAO,KAET,CACEzC,MAAO,qBACPqN,UAAW,SACXtM,IAAK,SACL0B,MAAO,KAET,CACEzC,MAAO,qBACPqN,UAAW,aACXtM,IAAK,aACL0B,MAAO,KAET,CACEzC,MAAO,eACPqN,UAAW,oBACXtM,IAAK,oBACL0B,MAAO,KAET,CACEzC,MAAO,2BACPqN,UAAW,SACXtM,IAAK,SACL0B,MAAO,IACP6K,OAAQ,SAAAvR,GACN,OACE,uBACA2C,MACW,uBAAT3C,EAAiB,OAAkB,uBAATA,EAAiB,WAAa,SAKvDA,KAKT,CACEiE,MAAO,eACPe,IAAK,SACLuM,OAAQ,SAACC,EAAMlM,GAAP,OACN,8BACE,uBACEzC,QAAS,WACP,EAAKuH,QAAQ9E,KAFjB,+BASJoB,MAAO,MAGLR,EACJ,uCACM6E,EADN,CAGE/I,UAAU,4BAEA,cAATqD,EACC,uBACEI,KAAM,WACNhD,KAAK,UACLI,QAAS9B,KAAK2E,OACd1D,UAAU,mBAJZ,gBAQE,KACFsD,EAAOwO,OA6BL,KA5BF,yBAAK9R,UAAU,oBACb,uBACEA,UAAU,kBACVS,KAAK,UACLI,QAAS,WACP,EAAKmR,gBAAgB,KAJzB,gBAmBA,uBACEhS,UAAU,kBACVS,KAAK,UACLI,QAAS9B,KAAK8P,WAHhB,mBASJ,yBAAK7O,UAAU,mCACb,yBAAKA,UAAU,wCACb,mFACA,wDACA,sBAAMI,KAAN,CAAWsJ,MAAO,+DAChB,8BAAOpG,EAAOmD,SAEhB,sBAAMrG,KAAN,CAAWsJ,MAAO,qEAChB,8BAAOpG,EAAOoD,WAEhB,sBAAMtG,KAAN,CAAWsJ,MAAO,yDAChB,8BAAOpG,EAAOuD,OAEhB,sBAAMzG,KAAN,CAAWsJ,MAAO,+DAChB,8BAAOpG,EAAOwE,cAEhB,sBAAM1H,KAAN,CAAWsJ,MAAO,mDAChB,8BAAOpG,EAAO0E,QAEhB,sBAAM5H,KAAN,CAAWsJ,MAAO,+DAChB,8BAAOpG,EAAO0E,QAEhB,sBAAM5H,KAAN,CAAWsJ,MAAO,6CAChB,8BAAOpG,EAAO0E,QAEhB,sBAAM5H,KAAN,CAAWsJ,MAAO,uFAChB,8BAAOpG,EAAO0E,QAEhB,sBAAM5H,KAAN,CAAWsJ,MAAO,uFAChB,8BAAOpG,EAAO0E,QAchB,wDAEA,sBAAM5H,KAAN,CAAWsJ,MAAO,qEAChB,8BAAOpG,EAAO2D,cAEhB,sBAAM7G,KAAN,CAAWsJ,MAAO,+DAChB,8BAAOpG,EAAO4D,YAEhB,sBAAM9G,KAAN,CACEsJ,MACE,+JAGF,8BAAOpG,EAAO6D,cAEhB,sBAAM/G,KAAN,CACEsJ,MACE,+JAGF,8BAAOpG,EAAO+D,YAEhB,sBAAMjH,KAAN,CACEsJ,MACE,6OAKF,8BAAOpG,EAAO8D,mBAEhB,sBAAMhH,KAAN,CACEsJ,MACE,6LAKF,8BAAOpG,EAAOgE,gBAEhB,sBAAMlH,KAAN,CACEsJ,MACE,+JAGF,8BAAOpG,EAAO+D,YAEhB,sBAAMjH,KAAN,CACEsJ,MAAO,mJAEP,8BAAOpG,EAAOiE,cAEhB,sBAAMnH,KAAN,CAAWsJ,MAAO,2HAChB,8BAAOpG,EAAOkE,aAEhB,sBAAMpH,KAAN,CACEsJ,MAAO,mJAEP,8BAAOpG,EAAOiE,cAEhB,sBAAMnH,KAAN,CACEsJ,MACE,yVAKF,8BAAOpG,EAAOmE,eAEhB,sBAAMrH,KAAN,CAAWsJ,MAAO,+GAChB,8BAAOpG,EAAOoE,WAEhB,sBAAMtH,KAAN,CAAWsJ,MAAO,2EAChB,8BAAOpG,EAAOqE,OAEhB,sBAAMvH,KAAN,CAAWsJ,MAAO,qEAChB,8BAAOpG,EAAOsE,YAEhB,sBAAMxH,KAAN,CAAWsJ,MAAO,+DAChB,8BAAOpG,EAAOuE,iBAGjBvE,EAAO,cACN,yBAAKtD,UAAU,oCACb,kFACCsD,EAAO,eACNA,EAAO,cAAgBV,KAAI,SAAAC,GACzB,OACE,kBAAC,EAAD,CAAYG,IAAKH,EAAKoF,OAAQjK,KAAM6E,QAI1C,MACC,IACP,uBACEZ,MAAM,eACNyM,QAASA,EACThK,MAAO,IACP4M,KAAMvS,KAAKwS,SACXC,SAAUzS,KAAK6P,aACf6C,gBAAgB,EAChBC,OAAQ,CACN,uBAAQ1O,IAAI,OAAOnC,QAAS9B,KAAK6P,cAAjC,gBAGA,uBACE9N,SAAS,SACTL,KAAK,UACLI,QAAS,WACP,EAAKkO,kBAJT,kBAWF,uCAAUhG,EAAV,CAA0B/I,UAAU,oBAEjCD,EAAkB,UAAW,CAC5BM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,iCACTuM,YAAY,KALjB1K,CASC,kBAAC,GAAD,CACAa,YAAY,iCACVZ,UAAU,sCAOtB,OACE,yBAAKA,UAAU,sBACH,aAATqD,EACC,uBAAMpD,SAAUwO,GACd,wBACEzL,IAAI,IACJhD,UAAU,2BACVqP,QAASA,EACTrF,WAAYhM,EACZyR,OAAQ,CAAEC,EAAG,IAAMC,EAAG,0BAI1BzL,O,GAnduB0L,IAAM7O,WCTxBgR,GDkeA,IAAK/Q,QAAL,CAAc+Q,IEldvBlC,I,OAAS,gBACTR,GAAU,SAAAlS,GAAU,IAChB2S,EAAqB3S,EAArB2S,OAAQmC,EAAa9U,EAAb8U,SAChB,MAAO,CACL,CACEhQ,MAAO,qBACPqN,UAAW,WACXtM,IAAK,WACL0B,MAAO,KAET,CACEzC,MAAO,eACPqN,UAAW,SACXtM,IAAK,SACL0B,MAAO,KAET,CACEzC,MAAO,qBACPqN,UAAW,eACXtM,IAAK,eACL0B,MAAO,KAET,CACEzC,MAAO,2BACPqN,UAAW,aACXtM,IAAK,aACL0B,MAAO,KAET,CACEzC,MAAO,eACPe,IAAK,SACL0B,MAAO,IACP6K,OAAQ,SAACC,EAAMlM,GAAP,OACN,8BACE,uBACEzC,QAAS,WACPiP,EAAOxM,KAFX,gBAOA,wBAAS7C,KAAK,aACd,uBACEwB,MAAM,6CACNmI,UAAW,WACT6H,EAAS3O,IAEX+G,OAAO,MACPC,WAAW,MAEX,iDAONS,GAAa,SAACC,EAAM3O,GACxB,OAAO,IAAI4O,SAAQ,SAACC,EAASC,GAC3B,IAAIC,EAAK,IAAIC,SACbD,EAAGE,OAAO,OAAQN,EAAMA,EAAKO,MAC7B,IAAMC,EAAM,IAAIC,eAChBD,EAAIE,KAAK,OAAQrP,GACjBmP,EAAIG,OAAS,WACX,IAAM3N,EAAOM,KAAKuH,MAAM2F,EAAII,UAC5B,GAAmB,MAAfJ,EAAIjG,QAAkC,IAAfvH,EAAKa,OAA8B,MAAfb,EAAKa,MAIlDsM,EAAOnN,OAJ2D,CAClE,IAAM6N,EAAS7N,EAAKA,KACpBkN,EAAQW,KAKZL,EAAIM,KAAKV,OAGP8G,G,2MACJxV,MAAQ,CACN+R,MAAM,EACNzQ,KAAM,GACNsF,OAAQ,GACRoL,SAAS,EACTxC,QAAS,I,EAEXpP,kB,sBAAoB,sBAAAG,EAAA,sEACZ,EAAK0R,UADO,2C,EAIpBA,Q,sBAAU,4BAAA1R,EAAA,6DAER,EAAKa,SAAS,CACZ2Q,MAAM,IAHA,kBAMMzS,IAAOyF,SAAS,CAC1BvC,MAAO2Q,KAPH,OASgB,IAHtB9R,EANM,QASEC,KAAKa,OACX,EAAKf,SAAS,CACZE,KAAMD,EAAIC,KAAKA,OAXb,gDAeNE,EAAA,EAAQW,MAAM,KAAMX,SAfd,QAiBR,EAAKJ,SAAS,CACZ2Q,MAAM,IAlBA,yD,EAsBVtO,aAAe,SAAAnD,GACb,EAAKG,MAAMD,KAAKS,yBAAwB,SAACC,EAAKC,GACvCD,GACH,EAAKsC,SAASrC,O,EAIpBoU,S,uCAAW,WAAM3O,GAAN,SAAArG,EAAA,+EAGKjB,IAAOmW,cAAc,CAC/BjT,MAAO2Q,GACP7R,KAAM,CAACsF,KALF,OAOe,GAPf,OAOCtF,KAAKmB,OACXjB,EAAA,EAAQC,QAAQ,4BAElB,EAAKL,SAAS,CACZ4Q,SAAS,IAEX,EAAKC,UAbE,gDAePzQ,EAAA,EAAQW,MAAM,KAAMX,SAfb,yD,wDAmBX4R,OAAS,SAAAzT,GACP,IAAKA,EACH,OAAO,IAAM2T,QAAQ,CACnB/N,MAAO,qDAIX,IADA,IAAMgO,EAAO5T,EAAI6J,MAAM,UACdgK,EAAI,EAAGC,EAAMF,EAAK3N,OAAQ4N,EAAIC,EAAKD,IAC1CrH,OAAO6C,KAAKuE,EAAKC,K,EAIrBlE,iB,uCAAmB,WAAMC,GAAN,iBAAAhP,EAAA,6DACX+N,EAAOiB,EAASjB,KACH,UACN,GACPkB,EAJW,gFAIwEC,mBAFtE,WAFF,oBAMJA,mBAHA,KAHI,kBAQTpB,GAAWC,EAAMkB,GAASE,MAAK,SAAAF,GACnC,EAAKpO,SAAS,CACZoO,eAVW,gFAcRhO,EAAA,EAAQW,MAAM,KAAIX,UAdV,yD,wDAkBnBgC,S,uCAAW,WAAMrC,GAAN,eAAAZ,EAAA,4DAEC,GACVqJ,EAAM,CACJ8L,SAAUvU,EAAOuU,SACjBlG,QAAS,EAAKxP,MAAMwP,QACpBmG,OAAOxU,EAAOwU,QANP,kBASKrW,IAAOiD,WAAW,CAC5BC,MAAO2Q,GACP7R,KAAM,CAACsI,KAXF,OAae,GAbf,OAaCtI,KAAKmB,OACXjB,EAAA,EAAQC,QAAQ,4BAElB,EAAKL,SAAS,CACZ4Q,SAAS,IAEX,EAAKC,UAnBE,kDAqBPzQ,EAAA,EAAQW,MAAM,KAAMX,SArBb,0D,wDAwBXmT,MAAQ,WACN,EAAKvT,SAAS,CACZ4Q,SAAS,K,EAGbE,aAAe,WACb,EAAK9Q,SAAS,CACZ4Q,SAAS,K,EAGb7B,UAAY,SAACC,EAAKhN,GAChB,IAAMiN,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,kBAAMnN,EAASiN,EAAOG,WACtDH,EAAOI,cAAcL,I,EAEvBM,aAAe,SAAAxN,GACbF,QAAQC,IAAI,OAAQC,GACK,cAArBA,EAAKoL,KAAKzF,QAGW,SAArB3F,EAAKoL,KAAKzF,QAEZ,EAAKsH,UAAUjN,EAAKoL,KAAKqC,eAAe,SAAAhM,GAAQ,OAC9C,EAAKvD,SAAS,CACZuD,iB,wEAKE,IAAD,SACCtB,EAAsBhB,KAAK5B,MAAMD,KAAjC6C,kBADD,EAEiChB,KAAKrC,MAArC+R,EAFD,EAECA,KAAczQ,GAFf,EAEOsF,OAFP,EAEetF,MAAMkO,EAFrB,EAEqBA,QAwB1B,6BACE,uBAAMzL,KAAM1B,KAAKrC,MAAM6G,QAAU,UAAY,SAC7C,yBAAKvD,UAAU,mBAAf,WAIJ,OACE,yBAAKA,UAAU,cACb,uBAAQS,KAAK,UAAUT,UAAU,iBAAiBa,QAAS9B,KAAKsS,OAAhE,kCAGA,uBAAMpR,SAAUwO,GACd,wBACEzL,IAAI,IACJhD,UAAU,mBACVqP,QAASA,GAAQ,CACfS,OAAQ,SAAAxM,GACN,EAAKwM,OAAOxM,EAAO4I,UAErB+F,SAAU,SAAA3O,GACR,EAAK2O,SAAS3O,IAEhBtF,KAAMA,IAERyR,OAAQ,CAAEC,EAAG,IAAMC,EAAG,uBACtB3F,WAAYhM,IAEd,0BACEiE,MAAM,2BACNyM,QAAS3P,KAAKrC,MAAMgS,QACpBhK,MAAO,IACP4M,KAAMvS,KAAKwS,SACXC,SAAUzS,KAAK6P,aACf6C,gBAAgB,GANlB,4DAQU,CACN,uBAAQzO,IAAI,OAAOnC,QAAS9B,KAAK6P,cAAjC,gBAGA,uBAAQ5L,IAAI,SAASvC,KAAK,UAAUI,QAAS9B,KAAKoB,cAAlD,kBAZJ,GAiBE,uCAnEe,CACrB6I,SAAU,CACRC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,MA4DR,CAA0BlJ,UAAU,oBAClC,sBAAMI,KAAN,CACEJ,UAAU,uBACV0J,MAAO,+DAEN3J,EAAkB,WAAY,CAC7BM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,uCACTuM,YAAY,KALjB1K,CAQE,8BAEJ,sBAAMK,KAAN,CACCJ,UAAU,uBACV0J,MAAO,mDAEN3J,EAAkB,SAAU,CAC3BM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,iCACTuM,YAAY,KALjB1K,CAQE,8BAEL,sBAAMK,KAAN,CACEJ,UAAU,uBACV0J,MAAO,mDAEN3J,EAAkB,OAAQ,CACzBM,MAAO,CACL,CACEC,UAAU,EACVpC,QAAS,uCACTuM,YAAY,KALjB1K,CASC,6BACE,wBACEwL,KAAK,OACL2C,gBAAgB,EAChBC,cAAepP,KAAKiN,iBACpBoC,SAAUrP,KAAKsP,iBACfT,SAAU7O,KAAKqO,cAEf,2BACE,uBAAM3M,KAAK,WADb,kBAIF,uBAAOC,MAAO,CAAE6P,QAAS,QAAU/C,MAAOtB,MAG9C,6BACE,uBAAG3B,KAAM2B,GAAUA,a,GA/QZnL,aA0RV,OAAKC,QAAL,CAAckR,IC9WrB9B,G,IAAAA,QCPOkC,G,iLDWX,OACE,uBACE9P,iBAAiB,IACjB8N,YAAa,CACX/L,OAAQ,OACRgM,QAAS,OACTC,WAAY,SACZC,YAAa,SAGf,kBAAC,GAAD,CAASC,IAAI,uCAAS1N,IAAI,KACxB,kBAAC,GAAD,OAEF,kBAAC,GAAD,CAAS0N,IAAI,uCAAS1N,IAAI,KACxB,kBAAC,GAAD,OAEF,kBAAC,GAAD,CAAS0N,IAAI,uCAAS1N,IAAI,KACxB,kBAAC,GAAD,OAEF,kBAAC,GAAD,CAAS0N,IAAI,2BAAO1N,IAAI,KACtB,kBAAC,GAAD,Y,GAtBkBjC,aEetBvE,I,IADE4T,QACa,gBACfmC,G,YASJ,WAAYpV,GAAQ,IAAD,8BACjB,4CAAMA,KATRT,MAAQ,CACN0E,WAAW,EACXC,SAAU,GACVC,SAAU,GACVkR,YAAa,EACb9D,SAAS,EACT/I,WAAY,IAEK,EAGnB8M,gBAAkB,WAChB,EAAK3U,SAAS,CACZsD,WAAY,EAAK1E,MAAM0E,aALR,EAQnBsR,cARmB,uCAQH,WAAMpR,GAAN,eAAArE,EAAA,+EAGAjB,IAAOyF,SAAS,CAC1BvC,MAAO1C,GACPmW,SAAS,iBAAD,OAAmBrR,EAASsR,SAASC,iBALnC,OAOW,KAJvB9U,EAHY,QAOJC,KAAKa,QACXT,aAAaC,QAAQ,aAAaC,KAAKC,UAAUR,EAAIC,KAAKA,KAAK,KAC/D,EAAKF,SAAS,CACZ6H,WAAY5H,EAAIC,KAAKA,KAAK,MAVlB,gDAcZE,EAAA,EAAQW,MAAM,KAAMX,SAdR,yDARG,wDAyBnBpB,kBAzBmB,sBAyBC,8BAAAG,EAAA,6DACZqE,EAAWhD,KAAKuH,MAAMzH,aAAa0H,QAAQ,cAC3C0M,EAAclU,KAAKuH,MAAMzH,aAAa0H,QAAQ,iBAElD,EAAKhI,SAAS,CACZwD,WACAkR,gBAGF,EAAK1U,SAAS,CACZwD,aAVc,SAaZ,EAAKoR,cAAcpR,GAbP,2CAzBD,EAwCnBuL,UAAY,SAACC,EAAKhN,GAChB,IAAMiN,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,kBAAMnN,EAASiN,EAAOG,WACtDH,EAAOI,cAAcL,IA3CJ,EA6CnBM,aAAe,SAAAxN,GACY,cAArBA,EAAKoL,KAAKzF,OAIW,SAArB3F,EAAKoL,KAAKzF,QAEZ,EAAKsH,UAAUjN,EAAKoL,KAAKqC,eAAe,SAAAhM,GAAQ,OAC9C,EAAKvD,SAAS,CACZuD,WACAkC,SAAS,OARb,EAAKzF,SAAS,CAAEyF,SAAS,KA/CV,EA6DnBuP,WA7DmB,sBA6DN,sBAAA7V,EAAA,sDAgBX,EAAKa,SAAS,CACZ4Q,SAAS,IAjBA,2CA7DM,EAiFnBqE,OAAS,WAAO,IAEVhV,EADIb,EAAS,EAAKC,MAAdD,KAER,EAAKC,MAAMD,KAAKS,wBAAhB,uCAAwC,WAAOC,EAAKC,GAAZ,eAAAZ,EAAA,0DAClCW,EADkC,wDAIlCI,EAAO,CACT,CACEgV,iBAAkB9V,EAAKI,cAAc,cACrCoJ,SAAUxJ,EAAKI,cAAc,YAC7BmJ,OAAQvJ,EAAKI,cAAc,UAC3BuJ,KAAM3J,EAAKI,cAAc,QACzB2K,OAAQ,EAAKvL,MAAMiJ,WAAWsC,SAVI,kBAcxBjM,IAAOqK,cAAc,CAC/BnH,MAAO1C,GACPwB,SAhBkC,OAkBb,KAJvBD,EAdoC,QAkB5BC,KAAKmB,QACXjB,EAAA,EAAQC,QAAQ,4BAChB,EAAKL,SAAS,CACd6H,WAAY5H,EAAIC,KAAKA,KAAK,MArBQ,kDAyBpCE,EAAA,EAAQW,MAAM,KAAMX,SAzBgB,QA2BtC,EAAKJ,SAAS,CACZ4Q,SAAS,IA5B2B,0DAAxC,oCAAA3P,KAAA,iBApFiB,EAoHnB6P,aAAe,WACb,EAAK9Q,SAAS,CACZ4Q,SAAS,KAtHM,EA0HnBuE,OAAS,WACPvT,QAAQC,IAAI,SAAU,EAAKxC,OAC3BiB,aAAa8U,WAAW,YACxB9U,aAAa8U,WAAW,eACxB,EAAK/V,MAAMqB,QAAQ2U,QAAQ,CACzBvU,SAAU,OA/HK,EAmInBwU,aAAe,SAAA7H,GACA,kBAATA,GACFnN,aAAaC,QAAQ,cAAe,GACpC,EAAKP,SAAS,CACZ0U,YAAa,MAGfpU,aAAaC,QAAQ,cAAe,GACpC,EAAKP,SAAS,CACZ0U,YAAa,KAGjB,EAAKrV,MAAMqB,QAAQG,KAAK,CACtBC,SAAS,IAAD,OAAM2M,MAhJC,E,sEAmJT,IAAD,OACCxL,EAAsBhB,KAAK5B,MAAMD,KAAjC6C,kBACA4F,EAAe5G,KAAKrC,MAApBiJ,WAgBFxD,GAdJ,6BACE,yBAAKnC,UAAU,mBAAf,mCAcF,kBAAC,IAAMqJ,SAAP,KACE,yBACE3I,MAAO,CACL2S,OAAQ,UACR9C,QAAS,OACT+C,cAAe,WAGjB,uBACE7S,KAAK,UACLgD,KAAK,OACLlD,KAAK,QACLM,QAAS9B,KAAK+T,YAJhB,4BAQA,uBACErS,KAAK,UACLgD,KAAK,SACLlD,KAAK,QACLM,QAAS9B,KAAKkU,OACdvS,MAAO,CAAEiE,UAAW,SALtB,+BAnCC,EA+CqC5F,KAAKrC,MAA/B4E,GA/CX,EA+CCD,SA/CD,EA+CWC,UAAUkR,EA/CrB,EA+CqBA,YAC5B,OACE,yBAAKxS,UAAU,QACb,uBACEiC,MAAM,uCACNyM,QAAS3P,KAAKrC,MAAMgS,QACpBhK,MAAO,IACP4M,KAAMvS,KAAKwS,SACXC,SAAUzS,KAAK6P,aACf6C,gBAAgB,EAChBC,OAAQ,CACN,uBAAQ1O,IAAI,OAAOnC,QAAS9B,KAAK6P,cAAjC,gBAGA,uBACE5L,IAAI,SACJvC,KAAK,UACLI,QAAS,WACP,EAAKkS,WAJT,kBAWF,uCAhEiB,CACrB/J,SAAU,CACRC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,MAyDV,CAA0BhJ,SAAUnB,KAAKoB,aAAcH,UAAU,eAC/D,sBAAMI,KAAN,CAAWsJ,MAAM,gBACd3J,EAAkB,SAAU,CAC3BM,MAAO,CAAC,CAAEC,UAAU,EAAMpC,QAAS,gDACnCwM,aAAc/E,EAAWc,QAF1B1G,CAIC,uBACES,OACE,uBAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAEpCC,YAAY,mBAIlB,sBAAMR,KAAN,CAAWsJ,MAAM,gBACd3J,EAAkB,WAAY,CAC7BM,MAAO,CAAC,CAAEC,UAAU,EAAMpC,QAAS,4DACnCwM,aAAc/E,EAAWe,UAF1B3G,CAIC,uBACES,OACE,uBAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAEpCC,YAAY,mBAIlB,sBAAMR,KAAN,CAAWsJ,MAAM,gBACd3J,EAAkB,OAAQ,CACzBM,MAAO,CAAC,CAAEC,UAAU,EAAMpC,QAAS,gDACnCwM,aAAc/E,EAAWkB,MAF1B9G,CAIC,uBACES,OACE,uBAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAEpCC,YAAY,mBAIlB,sBAAMR,KAAN,CAAWsJ,MAAM,kCACd3J,EAAkB,aAAc,CAC/BM,MAAO,CAAC,CAAEC,UAAU,EAAMpC,QAAS,kEACnCwM,aAAc/E,EAAWqN,kBAF1BjT,CAIC,uBACES,OACE,uBAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAEpCC,YAAY,uCAMtB,yBAAKZ,UAAU,aACb,uBACEuT,aAAc,CAAC,GAAD,OAAIf,IAClBgB,gBAAiB,CAAC,QAClBC,KAAK,SACLC,MAAM,OACNhT,MAAO,CAAE6D,OAAQ,SACjBoP,gBAAiB5U,KAAKrC,MAAM0E,WAE5B,yBAAKpB,UAAU,kBACb,yBAAKA,UAAU,qBAAqBsE,IAAKsP,OAE3C,sBAAMxT,KAAN,CACE4C,IAAI,IACJnC,QAAS,WACP,EAAKuS,aAAa,UAGpB,uBAAM3S,KAAK,cACX,8DAEF,sBAAML,KAAN,CACE4C,IAAI,IACJnC,QAAS,WACP,EAAKuS,aAAa,mBAGpB,uBAAM3S,KAAK,YACX,yEAIN,yBAAKT,UAAU,cACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,uBACb,kBAAC,IAAD,CAAO6T,KAAK,QAAQC,UAAWzD,KAC/B,kBAAC,IAAD,CAAOwD,KAAK,iBAAiBC,UAAWxB,MAG1C,yBAAKtS,UAAU,uBAeb,uBAASmC,QAASA,EAAS4R,UAAU,UACnC,6BACE,uBAAMtT,KAAK,OAAOC,MAAO,CAAEsT,SAAU,WAEvC,6BAAM1S,EAAS2S,SAIrB,yBAAKjU,UAAU,sBACb,qC,GA1VOe,aCzBJwR,GD2XA,IAAKvR,QAAL,CAAcuR,IEvXvB2B,I,kNACJxX,MAAQ,CACNC,UAAU,EACVC,OAAQ,GACRC,UAAU,G,EAGZC,kBAAoB,a,EACpBqX,QAAU,WACR,EAAKhX,MAAMqB,QAAQG,KAAK,CACtBC,SAAU,Y,EAIdQ,UAAY,WACV,IAAIxC,EAAS,GACb,EAAKkB,SAAS,CACZnB,UAAU,IAEZ,IAAI0C,EAAYC,aAAY,WACtB1C,EAAS,GACXA,IACA,EAAKkB,SAAS,CACZlB,aAGF,EAAKkB,SAAS,CACZnB,UAAU,IAEZ4C,cAAcF,MAEf,M,EAELG,W,sBAAa,4BAAAvC,EAAA,2DACHC,EAAS,EAAKC,MAAdD,MAECI,cAAc,SAHZ,wBAIT,EAAK8B,YAJI,kBAMKpD,IAAOwD,WAAW,CAC5BC,UAAWvC,EAAKI,cAAc,WAPzB,8DAUPoC,QAAQC,IAAR,MAVO,gCAaTzB,EAAA,EAAQ0B,KAAK,4EAbJ,yD,EAgBbwU,S,sBAAW,8BAAAnX,EAAA,sDACTjB,IAAO6V,aACC3U,EAAS,EAAKC,MAAdD,KAER,EAAKC,MAAMD,KAAKS,wBAAhB,uCAAwC,WAAOC,EAAKC,GAAZ,iBAAAZ,EAAA,0DAClCW,EADkC,wDAIlCyW,EAAe,CACjBC,UAAWpX,EAAKI,cAAc,SAC9BiX,OAAQrX,EAAKI,cAAc,cAE3BkX,UAAWtX,EAAKI,cAAc,SAE9BmX,SAAUvX,EAAKI,cAAc,UAE7BoX,WAAY,cAIV1V,EAAa,CACf8I,YAAa5K,EAAKI,cAAc,SAChC0V,iBAAkB9V,EAAKI,cAAc,cACrCoJ,SAAUxJ,EAAKI,cAAc,YAC7BmJ,OAAQvJ,EAAKI,cAAc,UAC3B0K,MAAM9K,EAAKI,cAAc,SACzBuJ,KAAM3J,EAAKI,cAAc,SAE3B,EAAKQ,SAAS,CACZjB,UAAU,IAzB0B,kBA6BxBb,IAAOoY,SAASC,GA7BQ,OA8Bd,IADtBtW,EA7BoC,QA8B5BC,KAAKa,OACXX,EAAA,EAAQC,QAAQ,4BAChB,EAAKhB,MAAMqB,QAAQG,KAAK,CACtBC,SAAU,SACVlC,MAAO,CAAEsC,iBAGXd,EAAA,EAAQW,MAAMd,EAAIC,KAAKE,SArCW,kDAwCpCwB,QAAQC,IAAI,MAAZ,MACAzB,EAAA,EAAQW,MAAM,KAAMX,SAzCgB,QA2CtC,EAAKJ,SAAS,CACZjB,UAAU,IA5C0B,0DAAxC,oCAAAkC,KAAA,gBAJS,2C,wEAoDD,IAAD,EACgCA,KAAKrC,MAApCC,EADD,EACCA,SAAUC,EADX,EACWA,OAAQC,EADnB,EACmBA,SAClBkD,EAAsBhB,KAAK5B,MAAMD,KAAjC6C,kBACR,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,oBACb,uBAAMC,SAAUpD,GACd,uBAAMqD,SAAUnB,KAAKoB,aAAcH,UAAU,uBAC3C,4CACA,sBAAMI,KAAN,KACGL,EAAkB,SAAU,CAC3BM,MAAO,CAAC,CAAEC,UAAU,EAAMpC,QAAS,iDADpC6B,CAGC,uBACES,OACE,uBAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAEpCC,YAAY,mBAIlB,sBAAMR,KAAN,KACGL,EAAkB,WAAY,CAC7BM,MAAO,CAAC,CAAEC,UAAU,EAAMpC,QAAS,6DADpC6B,CAGC,uBACES,OACE,uBAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAEpCC,YAAY,mBAIlB,sBAAMR,KAAN,KACGL,EAAkB,OAAQ,CACzBM,MAAO,CAAC,CAAEC,UAAU,EAAMpC,QAAS,iDADpC6B,CAGC,uBACES,OACE,uBAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAEpCC,YAAY,mBAIlB,sBAAMR,KAAN,KACGL,EAAkB,aAAc,CAC/BM,MAAO,CAAC,CAAEC,UAAU,EAAMpC,QAAS,mEADpC6B,CAGC,uBACES,OACE,uBAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAEpCC,YAAY,qCAIlB,sBAAMR,KAAN,KACGL,EAAkB,QAAS,CAC1BM,MAAO,CACL,CACEI,KAAM,QACNH,UAAU,EACVpC,QAAS,iDALd6B,CASC,uBACES,OACE,uBAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAEpCC,YAAY,mBAIlB,sBAAMR,KAAN,KACGL,EAAkB,QAAS,CAC1BM,MAAO,CAAC,CAAEC,UAAU,EAAMpC,QAAS,uDADpC6B,CAGC,uBACES,OACE,uBAAMC,KAAK,QAAQC,MAAO,CAAEC,MAAO,qBAErCC,YAAY,yBAKlB,sBAAMR,KAAN,CAAWJ,UAAU,oBAClBD,EAAkB,QAAS,CAC1BM,MAAO,CAAC,CAAEC,UAAU,EAAMpC,QAAS,uDADpC6B,CAGC,uBACEC,UAAU,yBACVQ,OACE,uBAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAEpCC,YAAY,0BAIjBjE,EACC,uBAAQ+D,MAAO,CAAEiU,WAAY,QAAUlU,KAAK,UAAU9D,UAAQ,GAC3DC,GAGH,uBACE8D,MAAO,CAAEiU,WAAY,QACrBlU,KAAK,UACLI,QAAS9B,KAAKS,YAHhB,kCAQF,uBACEiB,KAAK,UACLK,SAAS,SACTd,UAAU,oBACVa,QAAS9B,KAAKqV,SACd7T,KAAK,SALP,gBASA,yBAAKP,UAAU,uBACb,uBAAGa,QAAS9B,KAAKoV,SAAjB,yB,GAjOOpT,cCJRmT,GD+OA,IAAKlT,QAAL,CAAckT,IEvNdU,OAhBf,WACE,OACE,yBAAK5U,UAAU,OAEb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6U,OAAK,EAAChB,KAAK,IAAIC,UAAWrX,IACjC,kBAAC,IAAD,CAAQoX,KAAK,SAASC,UAAWrX,IACjC,kBAAC,IAAD,CAAQoX,KAAK,YAAYC,UAAWI,KACpC,kBAAC,IAAD,CAAQL,KAAK,QAAQC,UAAWvB,KAChC,kBAAC,IAAD,CAAQsB,KAAK,iBAAiBC,UAAWvB,QCN7BuC,QACW,cAA7BjM,OAAOpK,SAASsW,UAEe,UAA7BlM,OAAOpK,SAASsW,UAEhBlM,OAAOpK,SAASsW,SAASC,MACvB,2DCZNC,IAAS1F,OAAO,kBAAC,GAAD,MAAS/G,SAASC,eAAe,SD2H3C,kBAAmByM,WACrBA,UAAUC,cAAcC,MAAMhJ,MAAK,SAAAiJ,GACjCA,EAAaC,kB","file":"static/js/main.73575710.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.409d3d40.png\";","module.exports = __webpack_public_path__ + \"static/media/applyProject1.96855abe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/applyProject2.fad3ab87.jpg\";","module.exports = __webpack_public_path__ + \"static/media/applyDataBase.04e0b2a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import http from \"lz-request/lib/http\";\n// 设置默认的基地址\nhttp.setDefaultBaseURL(\"http://ivf.realsun.me:9001\");\n\n// 设置默认的请求头\nhttp.setDefaultHeaders({\n  \"Content-Type\": \"application/json\"\n});\n\n// 创建定制的获取提醒数量的 api，方法名为 'getReminderNum'\nhttp.createApi(\"getReminderNum\", {\n  method: \"get\", // 使用 get 方法\n  url: \"/api/Resource/RetrieveReminderNum\" // 请求地址\n});\n\n//默认options\nhttp.setDefaultOptions({\n  withCredentials: true\n});\n\n// http.setRequestInterceptors(\n//   function(config) {\n//     // 请求头加上 token\n//     let token;\n//     if ((token = localStorage.getItem(\"token\"))) {\n//       config.headers.token = token;\n//     }\n//     return config;\n//   },\n//   function(error) {\n//     return error;\n//   }\n// );\n\n// 响应拦截\n// http.setResponseInterceptors(\n//   response => {\n//     const res = response.data;\n//     if (\n//       (res &&\n//         (res.error === 0 ||\n//           res.error === \"0\" ||\n//           res.Error === 0 ||\n//           res.Error === \"0\" ||\n//           res.OpResult === \"Y\")) ||\n//       res === \"ok\"\n//     ) {\n//       return response;\n//     } else {\n//       throw new Error(res.ErrMsg || res.message || res.ErrorMsg);\n//     }\n//   },\n//   error => {\n//     if (error.response.status === 401) {\n//       // window.location.href = \"/login\";\n//     }\n//     return error;\n//   }\n// );\n\n/**\n * 通过手机号、openid、unionid 来获取验证码\n * 参数：{ telephone, unionid, openid }\n * 1. telephone：手机号\n * 2. unionid：unionid\n * 3. openid：openid\n */\nhttp.createApi(\"getVerCode\", {\n  method: \"get\",\n  // baseURL: 'https://finisar.realsun.me/',\n  url: \"api/SMS/SMS_SendValidCode\"\n});\n\n/**\n * 注册\n * 参数：{ telephone, unionid, openid, validCode, personid, method }\n * 1. telephone：手机号\n * 2. unionid：unionid\n * 3. openid: openid\n * 4. personid：身份证\n * 5. method：method\n * openid,telephone,unionid,validCode,workNum\n */\nhttp.createApi(\"register\", {\n  method: \"get\",\n  // baseURL: 'https://finisar.realsun.me/',\n  url: \"api/Account/Register\"\n});\n\n/**\n *登录\n */\nhttp.createApi(\"login\", {\n  method: \"post\",\n  url: \"/api/Account/Login\"\n});\n\n/**\n *获取表格数据 |新接口\n */\nhttp.createApi(\"getTableNew\", {\n  method: \"get\",\n  url: \"/api/200/table/Retrieve\"\n});\n\n/**\n *上传图片\n */\nhttp.createApi(\"putOneImageObject\", {\n  method: \"post\",\n  url: \"/api/AliyunOss/PutOneImageObject\"\n});\n\nexport default http;\n","import React, { Component } from \"react\";\nimport \"./Login.less\";\nimport http from \"../../../utils/api\";\nimport { Form, message, Icon, Input, Button, Spin } from \"antd\";\nconst doctorInfoId = \"622204211916\";\nclass Login extends Component {\n  state = {\n    disabled: false,\n    counts: 60,\n    showSpin: false\n  };\n\n  componentDidMount = () => {};\n\n  login = async e => {\n    const { form } = this.props;\n    const loginData = {\n      mobileno: form.getFieldValue(\"phone\"), // 手机号\n      validCode: form.getFieldValue(\"valid\"), // 验证码\n      loginMethod: \"mobile\",\n      useCookie: true\n    };\n    e.preventDefault();\n    let res;\n    this.props.form.validateFieldsAndScroll(async (err, values) => {\n      if (err) {\n        return;\n      }\n      this.setState({\n        showSpin: true\n      });\n      try {\n        res = await http().login(loginData);\n        if (res.data.OpResult == \"Y\") {\n          message.success(\"登录成功\");\n          localStorage.setItem(\"userInfo\", JSON.stringify(res.data));\n          this.props.history.location.state && (await this.saveDoctorData());\n          this.setState({\n            showSpin: false\n          });\n          this.props.history.push({\n            pathname: \"/home\"\n          });\n        } else {\n          message.error(res.data.ErrorMsg);\n        }\n      } catch (error) {\n        message.error(error.message);\n      }\n    });\n  };\n\n  componentWillUnmount() {\n    // 卸载异步操作设置状态\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n  saveDoctorData = async () => {\n    let doctorData = this.props.history.location.state.doctorData;\n    let res;\n    try {\n      res = await http().addRecords({\n        resid: doctorInfoId,\n        data: [doctorData]\n      });\n      if (res.data.Error === 0) {\n        // message.success(\"添加成功\");\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  countDown = () => {\n    let counts = 60;\n    this.setState({\n      disabled: true\n    });\n    let countdown = setInterval(() => {\n      if (counts > 0) {\n        counts--;\n        this.setState({\n          counts\n        });\n      } else {\n        this.setState({\n          disabled: false\n        });\n        clearInterval(countdown);\n      }\n    }, 1000);\n  };\n  getVerCode = async () => {\n    const { form } = this.props;\n    let res;\n    if (form.getFieldValue(\"phone\")) {\n      this.countDown();\n      try {\n        res = await http().getVerCode({\n          telephone: form.getFieldValue(\"phone\")\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      message.info(\"请先输入手机号获取验证码\");\n    }\n  };\n  onRegister = () => {\n    this.props.history.push({\n      pathname: \"/register\"\n    });\n  };\n  render() {\n    const { disabled, counts, showSpin } = this.state;\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div className=\"page\">\n        <div className=\"login-contain\">\n          <Spin spinning={showSpin}>\n            <Form onSubmit={this.handleSubmit} className=\"login-form-userName\">\n              <h1>登录</h1>\n              <Form.Item>\n                {getFieldDecorator(\"phone\", {\n                  rules: [{ required: true, message: \"请输入你的手机号!\" }]\n                })(\n                  <Input\n                    size=\"large\"\n                    prefix={\n                      <Icon type=\"phone\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"手机号\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item className=\"login-form-valid\">\n                {getFieldDecorator(\"valid\", {\n                  rules: [{ required: true, message: \"请输入你的验证码!\" }]\n                })(\n                  <Input\n                    size=\"large\"\n                    className=\"login-form-valid-input\"\n                    prefix={\n                      <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"验证码 \"\n                  />\n                )}\n              </Form.Item>\n              {disabled ? (\n                <Button\n                  className=\"login-form-valid-countdown\"\n                  size=\"large\"\n                  type=\"primary\"\n                  disabled\n                >\n                  {counts}\n                </Button>\n              ) : (\n                <Button\n                  className=\"login-form-valid-button\"\n                  size=\"large\"\n                  type=\"primary\"\n                  onClick={this.getVerCode}\n                >\n                  获取验证码\n                </Button>\n              )}\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n                onClick={this.login}\n                size=\"large\"\n              >\n                登录\n              </Button>\n              <div className=\"login-form-register\">\n                <a onClick={this.onRegister}>注册</a>\n              </div>\n            </Form>\n          </Spin>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(Login);\n","import Login from './Login';\nexport default Login;","import React, { Component } from \"react\";\nimport \"./NoticeList.less\";\nimport { Collapse, Icon, Alert, Empty, Button, Spin } from \"antd\";\nimport http from \"../../../utils/api\";\nconst { Panel } = Collapse;\nconst noticeId = \"620317621824\";\n\nclass NoticeList extends Component {\n  state = {\n    collapsed: false,\n    imageUrl: \"\",\n    userInfo: {},\n    currentNotice: [],\n    historyNotice: [],\n    showSpin:false\n  };\n  componentDidMount = async () => {\n    let res;\n    this.setState({\n      showSpin:true\n    })\n    try {\n      res = await http().getTable({\n        resid: noticeId\n      });\n      const [current, ...history] = res.data.data;\n      this.setState({\n        currentNotice: current,\n        historyNotice: history\n      });\n    } catch (error) {}\n    this.setState({\n      showSpin:false\n    })\n  };\n  render() {\n    const customPanelStyle = {\n      background: \"#f7f7f7\",\n      borderRadius: 4,\n      marginBottom: 24,\n      border: 0,\n      overflow: \"hidden\"\n    };\n    const { currentNotice, historyNotice,showSpin } = this.state;\n    return (\n      <div className=\"noticeList\">\n        <Spin spinning={showSpin}>\n        <h2>最新通知</h2>\n        <Alert\n          message={currentNotice.title}\n          description={<div><span>{currentNotice.content}</span><span className='noticeList-time'>{currentNotice.publishTime}</span></div>}\n          type=\"info\"\n          showIcon\n          // closeText=\"Close\"\n        />\n        <div className=\"noticeList-line\"> </div>\n        <h3>历史通知</h3>\n        {historyNotice.length > 0 ? (\n          <Collapse\n            bordered={false}\n            className='noticeList-Collapse'\n            defaultActiveKey={[\"0\"]}\n            expandIcon={({ isActive }) => (\n              <Icon type=\"caret-right\" rotate={isActive ? 90 : 0} />\n            )}\n          >\n            {historyNotice.map((item,index) => {\n              return (\n                <Panel header={<div><span>{item.title}</span><span className='noticeList-time'>{item.publishTime}</span></div>} key={index} style={customPanelStyle}>\n                  <p>{item.content}</p>\n                </Panel>\n              );\n            })}\n          </Collapse>\n        ) : (\n          <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n        )}\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default NoticeList;\n","import NoticeList from './NoticeList';\nexport default NoticeList;","import React, { Component } from \"react\";\nimport \"./ApplyDataBase.less\";\nimport {\n  Collapse,\n  Icon,\n  Input,\n  Upload,\n  Button,\n  Form,\n  Checkbox,\n  List,\n  Skeleton,\n  Avatar,\n  message,\n  Popconfirm,\n  Spin\n} from \"antd\";\n\nclass ApplyDataBase extends Component {\n  state = {\n    imageUrl: \"\",\n    applyList: [],\n    page: \"listPage\",\n    record: {},\n    loading: false\n  };\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount = async () => {\n  };\n  render() {\n    const prop = this.props;\n    const {  loading  } = this.state;\n   \n\n    return (\n      <div className=\"applyDataBase\">\n        <div className=\"applyDataBase-btns\">\n          <Button\n            icon={\n              prop.page === \"applyPage\" ||\n              prop.page === \"checkPage\" ||\n              prop.page === \"schedulePage\"\n                ? \"rollback\"\n                : \"plus\"\n            }\n            type=\"primary\"\n            onClick={\n              prop.page === \"applyPage\" ||\n              prop.page === \"checkPage\" ||\n              prop.page === \"schedulePage\"\n                ? this.props.onBack\n                : this.props.onApply\n            }\n            className=\"applyDataBase-btn\"\n          >\n            {prop.page === \"applyPage\" ||\n            prop.page === \"checkPage\" ||\n            prop.page === \"schedulePage\"\n              ? \"返回\"\n              : prop.addText || \"申请\"}\n          </Button>\n          <a\n            className=\"applyDataBase-photoBtn\"\n            type=\"link\"\n            onClick={\n              prop.page === \"showImagePage\"\n                ? this.props.onBack\n                : this.props.showImage\n            }\n          >\n            {prop.isShowImage\n              ? \"\"\n              : prop.page === \"showImagePage\"\n              ? \"返回\"\n              : prop.page === \"listPage\"\n              ? \"申请流程图\"\n              : \"\"}\n          </a>\n        </div>\n        <Spin spinning={loading}>\n          <div className=\"applyDataBase-content\">\n            {(() => {\n              switch (prop.page) {\n                case \"listPage\":\n                  return prop.pages.listPage;\n                case \"applyPage\":\n                  return prop.pages.applyPage;\n                case \"checkPage\":\n                  return prop.pages.checkPage;\n                case \"showImagePage\":\n                  return prop.pages.showImagePage;\n                case \"schedulePage\":\n                  return prop.pages.schedulePage;\n              }\n            })()}\n          </div>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(ApplyDataBase);\n","import ApplyDataBase from './ApplyDataBase';\nexport default ApplyDataBase;","import { ShowImage } from './ShowImage';\nexport default ShowImage;","import React, { Component } from \"react\";\nimport \"./ShowImage.less\";\nexport const ShowImage = props => {\n  return (\n    <div className=\"showImage\">\n      <img\n        src={props.image}\n        style={{ border: \"1px solid #ccc\", height: \"600px\" }}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Card, Icon, Skeleton, Avatar } from \"antd\";\nconst { Meta } = Card;\nconst CommitCard = (record) => {\n  return (\n    <div>\n      <Card style={{ width: 300, marginTop: 16 }}>\n        <Skeleton loading={record.data?false:true}  avatar active>\n          <Meta\n            avatar={<Icon type=\"user\"></Icon>}\n            title={<div>批注人：{record.data.person}</div>}\n            description={\n              <div>\n                <div>时间：{record.data.writeTime}</div>\n                <div>建议：{record.data.suggest}</div>\n              </div>\n            }\n          />\n        </Skeleton>\n      </Card>\n    </div>\n  );\n};\nexport default CommitCard;\n","import CommitCard from './CommitCard';\nexport default CommitCard;","import React, { Component } from \"react\";\nimport \"./ApplyProject.less\";\nimport ReactToPrint from \"react-to-print\";\nimport ApplyDataBase from \"../ApplyDataBase\";\nimport {\n  Collapse,\n  Icon,\n  Input,\n  Button,\n  Form,\n  Checkbox,\n  List,\n  Skeleton,\n  Avatar,\n  message,\n  Popconfirm,\n  Spin,\n  Card,\n  Steps,\n  Popover,\n  Tag,\n  Modal,\n  Alert\n} from \"antd\";\nimport http from \"../../../utils/api\";\nimport ShowImage from \"../ApplyDataBase/ShowImage\";\nimport CommitCard from \"./CommitCard\";\nimport applyProjectImage1 from \"../../../assets/images/applyProject1.jpg\";\nimport applyProjectImage2 from \"../../../assets/images/applyProject2.jpg\";\nimport TextArea from \"antd/lib/input/TextArea\";\nconst applyProjectId = \"620475440053\";\nconst suggestId = \"621432069832\";\nconst joinProjectId = \"622302753373\";\nconst { Meta } = Card;\nconst { Step } = Steps;\n\nconst customDot = (dot, { status, index }) => (\n  <Popover content={<span>{status}</span>}>{dot}</Popover>\n);\n\nclass ApplyProject extends Component {\n  state = {\n    imageUrl: \"\",\n    applyList: [],\n    page: \"listPage\",\n    record: {},\n    postilData: [],\n    loading: false,\n    isEdit: false,\n    doctorInfo: null\n  };\n  componentDidMount = async () => {\n    await this.getApplyData();\n    const doctorInfo = JSON.parse(localStorage.getItem(\"doctorInfo\"));\n    this.setState({\n      doctorInfo\n    });\n  };\n\n  //获取申请记录\n  getApplyData = async () => {\n    let res;\n    this.setState({\n      loading: true\n    });\n    try {\n      res = await http().getTableNew({\n        resid: applyProjectId,\n        subresid: `${suggestId},${joinProjectId}`\n      });\n      if (res.data.Error == 0) {\n        let data = [];\n        res.data &&\n          res.data.data &&\n          res.data.data.map(item => {\n            let studyType = item.studyType && item.studyType.split(\",\");\n            item.studyType = studyType;\n            data.push(item);\n          });\n        this.setState({\n          applyList: data\n        });\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n    this.setState({\n      loading: false\n    });\n  };\n\n  handleSubmit = (e, type) => {\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.onSubmit(values, type);\n      }\n    });\n  };\n  //提交列表中的一条记录\n  onSubmitRecord = async record => {\n    let res;\n    record.isSubmit = \"Y\";\n    try {\n      res = await http().modifyRecords({\n        resid: applyProjectId,\n        data: [record]\n      });\n      if (res.data.Error == 0) {\n        message.success(\"提交成功\");\n        await this.getApplyData();\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  //提交表单\n  onSubmit = async (values, type) => {\n    let res;\n    let obj = {};\n    let study = values.study && values.study.toString();\n    const { isEdit, record, doctorInfo } = this.state;\n    if (type === 1) {\n      obj = {\n        doctor: values.doctor,\n        hospital: values.hospital,\n        task: values.task,\n        doctorId: doctorInfo.doctorId,\n        // phoneNumber: values.phone,\n        post: values.post,\n        // email: values.email,\n        taskPrincipal: values.taskPrincipal,\n        studyType: values.studyType,\n        inlandUnit: values.inlandUnit,\n        foreignUnit: values.foreignUnit,\n        studyReason: values.studyReason,\n        studyArea: values.studyArea,\n        studyTarget: values.studyTarget,\n        studyDescription: values.studyDescription,\n        studyLast: values.studyLast,\n        studySelected: values.studySelected,\n        studyAssess: values.studyAssess,\n        studyCheck: values.studyCheck,\n        staticMethod: values.staticMethod,\n        standard: values.standard,\n        sure: values.sure,\n        committee: values.committee,\n        referenceData: values.referenceData\n      };\n    } else {\n      obj = {\n        doctor: values.doctor,\n        hospital: values.hospital,\n        task: values.task,\n        phoneNumber: values.phone,\n        post: values.post,\n        email: values.email,\n        taskPrincipal: values.taskPrincipal,\n        studyType: values.studyType,\n        inlandUnit: values.inlandUnit,\n        foreignUnit: values.foreignUnit,\n        studyReason: values.studyReason,\n        studyArea: values.studyArea,\n        studyTarget: values.studyTarget,\n        studyDescription: values.studyDescription,\n        studyLast: values.studyLast,\n        studySelected: values.studySelected,\n        studyAssess: values.studyAssess,\n        studyCheck: values.studyCheck,\n        staticMethod: values.staticMethod,\n        standard: values.standard,\n        sure: values.sure,\n        committee: values.committee,\n        referenceData: values.referenceData,\n        isSubmit: \"Y\"\n      };\n    }\n    if (isEdit === true) {\n      obj.REC_ID = record.REC_ID;\n      try {\n        res = await http().modifyRecords({\n          resid: applyProjectId,\n          data: [obj]\n        });\n        if (res.data.Error == 0) {\n          message.success(\"申请成功！\");\n        }\n        this.setState({\n          page: \"listPage\",\n          isEdit: false\n        });\n        await this.getApplyData();\n      } catch (error) {\n        message.error(error.message);\n      }\n    } else {\n      try {\n        res = await http().addRecords({\n          resid: applyProjectId,\n          data: [obj]\n        });\n        if (res.data.Error == 0) {\n          message.success(\"申请成功！\");\n        }\n        this.setState({\n          page: \"listPage\",\n          isEdit: false\n        });\n        await this.getApplyData();\n      } catch (error) {\n        message.error(error.message);\n      }\n    }\n  };\n  onApply = () => {\n    console.log(\"isEdit\", this.state.isEdit);\n    this.setState({\n      page: \"applyPage\"\n    });\n  };\n  onLookSchedule = record => {\n    const modal = Modal.success({\n      title: \"进度查询\",\n      width: 500,\n      content: (\n        <div style={{ marginTop: \"20px\" }}>\n          <div style={{ marginBottom: \"20px\" }}>课题名称：{record.task}</div>\n          <Steps\n            current={\n              record.status === \"通过\" || record.status === \"拒绝\" ? 2 : 1\n            }\n            progressDot={customDot}\n          >\n            <Step title=\"提交报告\" />\n            <Step title=\"审核\" />\n            <Step title=\"完成\" />\n          </Steps>\n          ,\n        </div>\n      )\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  onCheck = item => {\n    this.setState({\n      page: \"checkPage\",\n      record: item\n    });\n  };\n  onEdit = item => {\n    this.setState({\n      page: \"applyPage\",\n      record: item,\n      isEdit: true\n    });\n  };\n  showImage = () => {\n    this.setState({\n      page: \"showImagePage\"\n    });\n  };\n  // //打印\n  print = () => {\n    var printBox = document.getElementById(\"applyProjectForm\");\n    //拿到打印的区域的html内容\n    var newContent = printBox.innerHTML;\n    //将旧的页面储存起来，当打印完成后返给给页面。\n    var oldContent = document.body.innerHTML;\n    //赋值给body\n    document.body.innerHTML = newContent;\n    //执行window.print打印功能\n    window.print();\n    // 重新加载页面，以刷新数据。以防打印完之后，页面不能操作的问题\n    window.location.reload();\n    document.body.innerHTML = oldContent;\n    return false;\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const {\n      imageUrl,\n      applyList,\n      loading,\n      page,\n      record,\n      postilData,\n      isEdit\n    } = this.state;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const options = [\n      { label: \"单中心研究\", value: \"单中心研究\" },\n      { label: \"多中心研究\", value: \"多中心研究\" },\n      { label: \"第三方研究\", value: \"第三方研究\" },\n      { label: \"所有研究\", value: \"所有研究\" }\n    ];\n    const pages = {\n      showImagePage: (\n        <React.Fragment>\n          <ShowImage image={applyProjectImage1}></ShowImage>\n          <ShowImage image={applyProjectImage2}></ShowImage>\n        </React.Fragment>\n      ),\n      checkPage: (\n        <React.Fragment>\n          <Form\n            {...formItemLayout}\n            // onSubmit={this.handleSubmit}\n            className=\"applyProject-form\"\n            id=\"applyProjectForm\"\n          >\n            <div className=\"applyProject-form-contain\">\n              <div className=\"applyProject-form-contain-info\">\n                <h1 style={{ textAlign: \"center\" }}>CHASE-IBD专项课题申请表</h1>\n                <h3 style={{ textAlign: \"center\" }}>基本信息</h3>\n                <Form.Item label={<span>课题名称&nbsp;</span>}>\n                  <span>{record.task}</span>\n                </Form.Item>\n                <Form.Item label={<span>课题负责人&nbsp;</span>}>\n                  <span>{record.taskPrincipal}</span>\n                </Form.Item>\n                <Form.Item label={<span>申请人&nbsp;</span>}>\n                  <span>{record.doctor}</span>\n                </Form.Item>\n                <Form.Item label={<span>所属单位&nbsp;</span>}>\n                  <span>{record.hospital}</span>\n                </Form.Item>\n                <Form.Item label={<span>职称&nbsp;</span>}>\n                  <span>{record.post}</span>\n                </Form.Item>\n                <Form.Item label={<span>联系电话&nbsp;</span>}>\n                  <span>{record.phoneNumber}</span>\n                </Form.Item>\n                <Form.Item label={<span>E-mail&nbsp;</span>}>\n                  <span>{record.email}</span>\n                </Form.Item>\n                <Form.Item label={<span>拟定国内协作单位&nbsp;</span>}>\n                  <span>{record.inlandUnit}</span>\n                </Form.Item>\n                <Form.Item label={<span>拟定国际协作单位&nbsp;</span>}>\n                  <span>{record.foreignUnit}</span>\n                </Form.Item>\n                {/* <Form.Item label={<span>IBD治疗团队名单&nbsp;</span>}>\n            <span>{record.teamPeople}</span>&nbsp;&nbsp;\n            <span>{record.teamPeople2}</span>&nbsp;&nbsp;\n            <span>{record.teamPeople3}</span>&nbsp;&nbsp;\n          </Form.Item> */}\n                {/* <Form.Item label={<span>选择参与数据库研究&nbsp;</span>}>\n            <Checkbox.Group\n              options={options}\n              defaultValue={record.studyType}\n              onChange={this.onChangeCheckbox}\n            />\n          </Form.Item> */}\n                <h3 style={{ textAlign: \"center\" }}>研究内容</h3>\n                <Form.Item label={<span>研究的理由&nbsp;</span>}>\n                  <span>{record.studyReason}</span>\n                </Form.Item>\n                <Form.Item label={<span>研究区域&nbsp;</span>}>\n                  <span>{record.studyArea}</span>\n                </Form.Item>\n                <Form.Item\n                  label={\n                    <span>研究目标（主要目标，次要目标，附加目标）&nbsp;</span>\n                  }\n                >\n                  <span>{record.studyTarget}</span>\n                </Form.Item>\n                <Form.Item\n                  label={\n                    <span>研究终点（主要终点，次要终点，附加终点）&nbsp;</span>\n                  }\n                >\n                  <span>{record.studyLast}</span>\n                </Form.Item>\n                <Form.Item\n                  label={\n                    <span>\n                      研究设计与描述（研究描述，研究周期，研究设计，剂量和终点的合理性）&nbsp;\n                    </span>\n                  }\n                >\n                  <span>{record.studyDescription}</span>\n                </Form.Item>\n                <Form.Item\n                  label={\n                    <span>\n                      项目入选（入选标准，排除标准包括药物，治疗和饮食）&nbsp;\n                    </span>\n                  }\n                >\n                  <span>{record.studySelected}</span>\n                </Form.Item>\n                <Form.Item\n                  label={\n                    <span>研究终点（主要终点，次要终点，附加终点）&nbsp;</span>\n                  }\n                >\n                  <span>{record.studyLast}</span>\n                </Form.Item>\n                <Form.Item\n                  label={\n                    <span>评估（疗效评估，安全评估，其他评估）&nbsp;</span>\n                  }\n                >\n                  <span>{record.studyAssess}</span>\n                </Form.Item>\n                <Form.Item\n                  label={<span>实验室检查：检查具体指标参数&nbsp;</span>}\n                >\n                  <span>{record.studyCheck}</span>\n                </Form.Item>\n                <Form.Item\n                  label={\n                    <span>评估（疗效评估，安全评估，其他评估）&nbsp;</span>\n                  }\n                >\n                  <span>{record.studyAssess}</span>\n                </Form.Item>\n                <Form.Item\n                  label={\n                    <span>\n                      统计方法（统计分析计划，人口统计学和其他基线特征分析，疗效分析，药代动力学分析，药效学分析，安全分析）&nbsp;\n                    </span>\n                  }\n                >\n                  <span>{record.staticMethod}</span>\n                </Form.Item>\n                <Form.Item label={<span>中期分析和提前终止的标准&nbsp;</span>}>\n                  <span>{record.standard}</span>\n                </Form.Item>\n                <Form.Item label={<span>样本量的确定&nbsp;</span>}>\n                  <span>{record.sure}</span>\n                </Form.Item>\n                <Form.Item label={<span>伦理委员会&nbsp;</span>}>\n                  <span>{record.committee}</span>\n                </Form.Item>\n                <Form.Item label={<span>参考资料&nbsp;</span>}>\n                  <span>{record.referenceData}</span>\n                </Form.Item>\n              </div>\n              {record[\"621432069832\"] ? (\n                <div className=\"applyProject-form-contain-notice\">\n                  <span>申请加入人</span>\n                  {record[\"622302753373\"] &&\n                  record[\"622302753373\"].length > 0 ? (\n                    record[\"622302753373\"].map(item => {\n                      return (\n                        <div className=\"applyProject-form-contain-notice-alerts\">\n                          <Alert\n                            message={\n                              <div>\n                                <b>{item.joinPerson}申请加入</b>\n                                <b\n                                  style={{ position: \"absolute\", right: \"8px\" }}\n                                >\n                                  {item.applyTime}\n                                </b>\n                              </div>\n                            }\n                            type=\"info\"\n                            className=\"applyProject-form-contain-notice-alert\"\n                          />\n                        </div>\n                      );\n                    })\n                  ) : (\n                    <div\n                      className=\"applyProject-form-contain-notice-alerts\"\n                      style={{ textAlign: \"center\" }}\n                    >\n                      暂无人加入\n                    </div>\n                  )}\n                  <span>来自数委会的批注</span>\n                  {record[\"621432069832\"] &&\n                    record[\"621432069832\"].map(item => {\n                      return (\n                        <CommitCard key={item.REC_ID} data={item}></CommitCard>\n                      );\n                    })}\n                </div>\n              ) : null}\n            </div>\n          </Form>\n          <Button\n            icon=\"download\"\n            type=\"primary\"\n            className=\"applyProject-form-print\"\n            onClick={this.print}\n          >\n            打印\n          </Button>\n        </React.Fragment>\n      ),\n      listPage: (\n        <React.Fragment>\n          <List\n            className=\"applyProject-content-list\"\n            itemLayout=\"horizontal\"\n            dataSource={applyList}\n            renderItem={item => (\n              <List.Item\n                actions={[\n                  <a\n                    key=\"list-loadmore-edit\"\n                    onClick={() => {\n                      this.onCheck(item);\n                    }}\n                  >\n                    查看\n                  </a>,\n                  !item.joinPersonID ? (\n                    <a\n                      key=\"list-loadmore-edit\"\n                      onClick={() => {\n                        this.onEdit(item);\n                      }}\n                    >\n                      编辑\n                    </a>\n                  ) : null,\n                  item.isSubmit === \"Y\" ? (\n                    <a\n                      key=\"list-loadmore-edit\"\n                      onClick={() => {\n                        this.onLookSchedule(item);\n                      }}\n                    >\n                      进度查询\n                    </a>\n                  ) : (\n                    <Popconfirm\n                      title=\"你确定要提交吗\"\n                      onConfirm={() => {\n                        this.onSubmitRecord(item);\n                      }}\n                      okText=\"Yes\"\n                      cancelText=\"No\"\n                    >\n                      <a key=\"list-loadmore-edit\">提交</a>\n                    </Popconfirm>\n                  )\n                ]}\n              >\n                {/* <Skeleton avatar title={false} loading={item.doctor} active> */}\n                <List.Item.Meta\n                  // avatar={\n                  //   <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n                  // }\n                  title={\n                    <React.Fragment>\n                      <a className=\"applyProject-content-list-word\" href=\"#\">\n                        课题名称:{item.task}\n                      </a>\n                      <a className=\"applyProject-content-list-word\" href=\"#\">\n                        所属单位:{item.hospital}\n                      </a>\n                    </React.Fragment>\n                  }\n                  description={\n                    <React.Fragment>\n                      <Tag\n                        color={\n                          item.status === \"通过\"\n                            ? \"geekblue\"\n                            : item.status === \"拒绝\"\n                            ? \"red\"\n                            : \"green\"\n                        }\n                      >\n                        {item.status}\n                      </Tag>{\" \"}\n                    </React.Fragment>\n                  }\n                />\n\n                <div>申请日期：{item.REC_CRTTIME}</div>\n                {/* </Skeleton> */}\n              </List.Item>\n            )}\n          />\n        </React.Fragment>\n      ),\n      schedulePage: (\n        <div>\n          <h1 style={{ textAlign: \"center\" }}>{record.task}</h1>\n          <Steps\n            current={\n              record.status === \"通过\" || record.status === \"拒绝\" ? 2 : 1\n            }\n            progressDot={customDot}\n          >\n            <Step title=\"提交报告\" />\n            <Step title=\"审核\" />\n            <Step title=\"完成\" />\n          </Steps>\n          ,\n        </div>\n      ),\n      applyPage: (\n        <Form\n          {...formItemLayout}\n          // onSubmit={this.handleSubmit}\n          className=\"applyProject-form\"\n        >\n          <div className=\"applyProject-form-contain\">\n            <div className=\"applyProject-form-contain-info\">\n              <h1 style={{ textAlign: \"center\" }}>CHASE-IBD专项课题申请表</h1>\n              <h3 style={{ textAlign: \"center\" }}>基本信息</h3>\n\n              <Form.Item label={<span>\b课题名称&nbsp;</span>}>\n                {getFieldDecorator(\"task\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入\b课题名称\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.task : null\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label={<span>课题负责人&nbsp;</span>}>\n                {getFieldDecorator(\"taskPrincipal\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入\b课题负责人\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.taskPrincipal : null\n                })(<Input />)}\n              </Form.Item>\n              {/* <Form.Item label={<span>申请人&nbsp;</span>}>\n                {getFieldDecorator(\"doctor\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入申请人\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.doctor : null\n                })(<Input />)}\n              </Form.Item> */}\n              {/* <Form.Item label={<span>所属单位&nbsp;</span>}>\n                {getFieldDecorator(\"hospital\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入所属单位\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.hospital : null\n                })(<Input />)}\n              </Form.Item> */}\n              <Form.Item label={<span>职称&nbsp;</span>}>\n                {getFieldDecorator(\"post\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入您的职称！\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.post : null\n                })(<Input />)}\n              </Form.Item>\n              {/* <Form.Item label={<span>联系电话&nbsp;</span>}>\n                {getFieldDecorator(\"phone\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入您的联系电话!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.phoneNumber : null\n                })(<Input />)}\n              </Form.Item> */}\n              {/* <Form.Item label={<span>E-mail&nbsp;</span>}>\n                {getFieldDecorator(\"email\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入您的邮箱!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.email : null\n                })(<Input />)}\n              </Form.Item> */}\n              <Form.Item label={<span>拟定国内协作单位&nbsp;</span>}>\n                {getFieldDecorator(\"inlandUnit\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入拟定国内协作单位!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.inlandUnit : null\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label={<span>拟定国际协作单位&nbsp;</span>}>\n                {getFieldDecorator(\"foreignUnit\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入拟定国际协作单位!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.foreignUnit : null\n                })(<Input />)}\n              </Form.Item>\n              <h3 style={{ textAlign: \"center\" }}>研究内容</h3>\n              <Form.Item label={<span>研究的理由&nbsp;</span>}>\n                {getFieldDecorator(\"studyReason\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入研究的理由!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.studyReason : null\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item label={<span>研究区域&nbsp;</span>}>\n                {getFieldDecorator(\"studyArea\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入研究区域!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.studyArea : null\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>研究目标（主要目标，次要目标，附加目标）&nbsp;</span>\n                }\n              >\n                {getFieldDecorator(\"studyTarget\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入研究目标!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.studyTarget : null\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>研究终点（主要终点，次要终点，附加终点）&nbsp;</span>\n                }\n              >\n                {getFieldDecorator(\"studyLast\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入研究终点!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.studyLast : null\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    研究设计与描述（研究描述，研究周期，研究设计，剂量和终点的合理性）&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator(\"studyDescription\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入研究设计与描述!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.studyDescription : null\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    项目入选（入选标准，排除标准包括药物，治疗和饮食）&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator(\"studySelected\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入项目入选!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.studySelected : null\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item\n                label={<span>评估（疗效评估，安全评估，其他评估）&nbsp;</span>}\n              >\n                {getFieldDecorator(\"studyAssess\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入评估!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.studyAssess : null\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item\n                label={<span>实验室检查：检查具体指标参数&nbsp;</span>}\n              >\n                {getFieldDecorator(\"studyCheck\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入实验室检查!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.studyCheck : null\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    统计方法（统计分析计划，人口统计学和其他基线特征分析，疗效分析，药代动力学分析，药效学分析，安全分析）&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator(\"staticMethod\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入统计方法!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.staticMethod : null\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item label={<span>中期分析和提前终止的标准&nbsp;</span>}>\n                {getFieldDecorator(\"standard\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入中期分析和提前终止的标准!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.standard : null\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item label={<span>样本量的确定&nbsp;</span>}>\n                {getFieldDecorator(\"sure\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入样本量的确定!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.sure : null\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item label={<span>伦理委员会&nbsp;</span>}>\n                {getFieldDecorator(\"committee\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入伦理委员会!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.committee : null\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item label={<span>参考资料&nbsp;</span>}>\n                {getFieldDecorator(\"referenceData\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入参考资料!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.referenceData : null\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n            </div>\n          </div>\n          <Button\n            className=\"applyProject-form-save\"\n            htmlType=\"submit\"\n            onClick={() => {\n              this.handleSubmit(this, 1);\n            }}\n          >\n            保存\n          </Button>\n          <Button\n            type=\"primary\"\n            className=\"applyProject-form-submit\"\n            htmlType=\"submit\"\n            onClick={() => {\n              this.handleSubmit(this, 2);\n            }}\n          >\n            提交\n          </Button>\n        </Form>\n      )\n    };\n\n    return (\n      <React.Fragment>\n        {/* <ReactToPrint\n          trigger={() => (\n            <Button\n              icon=\"download\"\n              type=\"primary\"\n              className=\"applyDataBase-form-print\"\n            >\n              打印\n            </Button>\n          )}\n          content={() => this.componentRef}\n        /> */}\n        <Spin spinning={loading}> \n        <ApplyDataBase\n          pages={pages}\n          page={this.state.page}\n          onBack={this.onBack}\n          showImage={this.showImage}\n          onApply={this.onApply}\n          ref={el => (this.componentRef = el)}\n        ></ApplyDataBase></Spin>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Form.create()(ApplyProject);\n","import ApplyProject from './ApplyProject';\nexport default ApplyProject;","import React, { Component } from \"react\";\nimport \"./ActApply.less\";\nimport ApplyDataBase from \"../ApplyDataBase\";\nimport {\n  Collapse,\n  Icon,\n  Input,\n  Upload,\n  Button,\n  Form,\n  Checkbox,\n  List,\n  Skeleton,\n  Avatar,\n  message,\n  Popconfirm,\n  Spin,\n  Tag,\n  Modal,\n  Steps,\n  Popover\n} from \"antd\";\nimport http from \"../../../utils/api\";\nimport ShowImage from \"../ApplyDataBase/ShowImage\";\nimport ReactToPrint from \"react-to-print\";\nimport applyDataBaseImage from \"../../../assets/images/applyDataBase.jpg\";\nconst applyDataBaseId = \"620384838453\";\nconst { Step } = Steps;\n\nconst customDot = (dot, { status, index }) => (\n  <Popover content={<span>{status}</span>}>{dot}</Popover>\n);\n\nconst uploadFile = (file, url) => {\n  return new Promise((resolve, reject) => {\n    let fd = new FormData();\n    fd.append(\"file\", file, file.name);\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", url);\n    xhr.onload = () => {\n      const data = JSON.parse(xhr.response);\n      if (xhr.status === 200 && (data.error === 0 || data.error === \"0\")) {\n        const imgUrl = data.data;\n        resolve(imgUrl);\n      } else {\n        reject(data);\n      }\n    };\n    xhr.send(fd);\n  });\n};\nclass ActApply extends Component {\n  state = {\n    imageUrl: \"\",\n    applyList: [],\n    page: \"listPage\",\n    record: {},\n    loading: false,\n    isEdit: false\n  };\n  componentDidMount = async() => {\n   await this.getApplyData();\n  }\n\n  //获取申请记录\n  getApplyData = async () => {\n    let res;\n    this.setState({\n      loading: true\n    });\n    try {\n      res = await http().getTable({\n        resid: applyDataBaseId\n      });\n      let data = [];\n      res.data &&\n        res.data.data &&\n        res.data.data.map(item => {\n          let studyType = item.studyType && item.studyType.split(\",\");\n          item.studyType = studyType;\n          data.push(item);\n        });\n      if (res.data.error == 0) {\n        this.setState({\n          applyList: data\n        });\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n    this.setState({\n      loading: false\n    });\n  };\n\n  handleSubmit = (e, type) => {\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.onSubmit(values, type);\n      }\n    });\n  };\n  //提交列表中的一条记录\n  onSubmitRecord = async record => {\n    let res;\n    record.isSubmit = \"Y\";\n    try {\n      res = await http().modifyRecords({\n        resid: applyDataBaseId,\n        data: [record]\n      });\n      if (res.data.Error == 0) {\n        message.success(\"提交成功\");\n        await this.getApplyData();\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n\n  //上传文件\n  handleUploadFile = async fileInfo => {\n    const file = fileInfo.file;\n    const bucketname = \"realsun\";\n    const type = \"\";\n    const fileUrl = `http://ivf.realsun.me:9001/api/AliyunOss/PutOneImageObject?bucketname=${encodeURIComponent(\n      bucketname\n    )}&srctype=${encodeURIComponent(type)}`;\n    try {\n      await uploadFile(file, fileUrl).then(imageUrl => {\n        this.setState({\n          imageUrl\n        });\n      });\n    } catch (err) {\n      return message.error(err.message);\n    }\n  };\n  //提交表单\n  onSubmit = async (values, type) => {\n    let res;\n    let obj = {};\n    let study = values.study && values.study.toString();\n    const { isEdit, record } = this.state;\n    if (type === 1) {\n      obj = {\n        doctor: values.doctor,\n        hospital: values.hospital,\n        post: values.post,\n        phoneNumber: values.phone,\n        email: values.email,\n        teamPeople: values.teamPeople,\n        teamPeople2: values.teamPeople2,\n        teamPeople3: values.teamPeople3,\n        studyType: values.study,\n        CDPatientNumber: values.CDNumber,\n        UCPatientNumber: values.UCNumber,\n        doctorPhoto: this.state.imageUrl,\n        studyType: study\n      };\n    } else {\n      obj = {\n        doctor: values.doctor,\n        hospital: values.hospital,\n        post: values.post,\n        phoneNumber: values.phone,\n        email: values.email,\n        teamPeople: values.teamPeople,\n        teamPeople2: values.teamPeople2,\n        teamPeople3: values.teamPeople3,\n        studyType: values.study,\n        CDPatientNumber: values.CDNumber,\n        UCPatientNumber: values.UCNumber,\n        doctorPhoto: this.state.imageUrl,\n        studyType: study,\n        isSubmit: \"Y\"\n      };\n    }\n    if (isEdit) {\n      obj.REC_ID = record.REC_ID;\n      try {\n        res = await http().modifyRecords({\n          resid: applyDataBaseId,\n          data: [obj]\n        });\n        if (res.data.Error == 0) {\n          message.success(\"申请成功！\");\n        }\n        this.setState({\n          page: \"listPage\",\n          isEdit:false\n        });\n        this.getApplyData();\n      } catch (error) {\n        message.error(error.message);\n      }\n    } else {\n      try {\n        res = await http().addRecords({\n          resid: applyDataBaseId,\n          data: [obj]\n        });\n        if (res.data.Error == 0) {\n          message.success(\"申请成功！\");\n        }\n        this.setState({\n          page: \"listPage\",\n          isEdit:false\n        });\n        this.getApplyData();\n      } catch (error) {\n        message.error(error.message);\n      }\n    }\n  };\n  print = () => {\n    var printBox = document.getElementById(\"applyDataBaseForm\");\n    //拿到打印的区域的html内容\n    var newContent = printBox.innerHTML;\n    //将旧的页面储存起来，当打印完成后返给给页面。\n    var oldContent = document.body.innerHTML;\n    //赋值给body\n    document.body.innerHTML = newContent;\n    //执行window.print打印功能\n    window.print();\n    // 重新加载页面，以刷新数据。以防打印完之后，页面不能操作的问题\n    window.location.reload();\n    document.body.innerHTML = oldContent;\n    return false;\n  };\n  getBase64 = (img, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => callback(reader.result));\n    reader.readAsDataURL(img);\n  };\n  handleChange = info => {\n    console.log(\"info\", info);\n    if (info.file.status === \"uploading\") {\n      return;\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      this.getBase64(info.file.originFileObj, imageUrl =>\n        this.setState({\n          imageUrl\n        })\n      );\n    }\n  };\n\n  onApply = () => {\n    this.setState({\n      page: \"applyPage\"\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  onCheck = record => {\n    this.setState({\n      page: \"checkPage\",\n      record\n    });\n  };\n  onEdit = record => {\n    this.setState({\n      page: \"applyPage\",\n      record,\n      isEdit: true\n    });\n  };\n  showImage = () => {\n    this.setState({\n      page: \"showImagePage\"\n    });\n  };\n\n  //查看进度\n  onLookSchedule = record => {\n    const modal = Modal.success({\n      title: \"进度查询\",\n      width: 500,\n      content: (\n        <div style={{ marginTop: \"20px\" }}>\n          <Steps\n            current={\n              record.status === \"通过\" || record.status === \"拒绝\" ? 2 : 1\n            }\n            progressDot={customDot}\n          >\n            <Step title=\"提交报告\" />\n            <Step title=\"审核\" />\n            <Step title=\"完成\" />\n          </Steps>\n          ,\n        </div>\n      )\n    });\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { imageUrl, applyList, loading, page, record,isEdit } = this.state;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const uploadButton = (\n      <div>\n        <Icon type={this.state.loading ? \"loading\" : \"plus\"} />\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n    const options = [\n      { label: \"单中心研究\", value: \"单中心研究\" },\n      { label: \"多中心研究\", value: \"多中心研究\" },\n      { label: \"第三方研究\", value: \"第三方研究\" },\n      { label: \"所有研究\", value: \"所有研究\" }\n    ];\n    const pages = {\n      showImagePage: <ShowImage image={applyDataBaseImage}></ShowImage>,\n      checkPage: (\n        <React.Fragment>\n          <Form\n            {...formItemLayout}\n            // onSubmit={this.handleSubmit}\n            className=\"applyDataBase-form\"\n            id=\"applyDataBaseForm\"\n          >\n            <h1 style={{ textAlign: \"center\" }}>\n              参与CHASE-IBD数据库建设申请表\n            </h1>\n            <h3 style={{ textAlign: \"center\" }}>申请医疗单位</h3>\n            <Form.Item label={<span>申请人&nbsp;</span>}>\n              <span>{record.doctor}</span>\n            </Form.Item>\n            <Form.Item label={<span>所属单位&nbsp;</span>}>\n              <span>{record.hospital}</span>\n            </Form.Item>\n            <Form.Item label={<span>职称&nbsp;</span>}>\n              <span>{record.post}</span>\n            </Form.Item>\n            <Form.Item label={<span>联系电话&nbsp;</span>}>\n              <span>{record.phoneNumber}</span>\n            </Form.Item>\n            <Form.Item label={<span>E-mail&nbsp;</span>}>\n              <span>{record.email}</span>\n            </Form.Item>\n            <Form.Item label={<span>IBD治疗团队名单&nbsp;</span>}>\n              <span>{record.teamPeople}</span>&nbsp;&nbsp;\n              <span>{record.teamPeople2}</span>&nbsp;&nbsp;\n              <span>{record.teamPeople3}</span>&nbsp;&nbsp;\n            </Form.Item>\n            <Form.Item label={<span>选择参与数据库研究&nbsp;</span>}>\n              <Checkbox.Group\n                options={options}\n                defaultValue={record.studyType}\n                onChange={this.onChangeCheckbox}\n              />\n            </Form.Item>\n            <h3 style={{ textAlign: \"center\" }}>贵院目前患者数量</h3>\n\n            <Form.Item label={<span>CD患者数量&nbsp;</span>}>\n              <span>{record.CDPatientNumber}</span>\n            </Form.Item>\n            <Form.Item label={<span>UC患者数量&nbsp;</span>}>\n              <span>{record.UCPatientNumber}</span>\n            </Form.Item>\n            <Form.Item label={<span>医师执照&nbsp;</span>}>\n              <img\n                src={record.doctorPhoto}\n                alt=\"avatar\"\n                style={{ width: \"200px\", height: \"200px\" }}\n              />\n            </Form.Item>\n          </Form>\n\n          <Button\n            icon=\"download\"\n            type=\"primary\"\n            className=\"applyDataBase-form-print\"\n            onClick={this.print}\n          >\n            打印\n          </Button>\n        </React.Fragment>\n      ),\n      listPage: (\n        <List\n          className=\"applyDataBase-content-list\"\n          itemLayout=\"horizontal\"\n          dataSource={applyList}\n          renderItem={item => (\n            <List.Item\n              actions={[\n                <a\n                  key=\"list-loadmore-edit\"\n                  onClick={() => {\n                    this.onCheck(item);\n                  }}\n                >\n                  查看\n                </a>,\n                <a\n                  key=\"list-loadmore-edit\"\n                  onClick={() => {\n                    this.onEdit(item);\n                  }}\n                >\n                  编辑\n                </a>,\n                item.isSubmit === \"Y\" ? (\n                  <a\n                    key=\"list-loadmore-edit\"\n                    onClick={() => {\n                      this.onLookSchedule(item);\n                    }}\n                  >\n                    进度查询\n                  </a>\n                ) : (\n                  <Popconfirm\n                    title=\"你确定要提交吗\"\n                    onConfirm={() => {\n                      this.onSubmitRecord(item);\n                    }}\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                  >\n                    <a key=\"list-loadmore-edit\">提交</a>\n                  </Popconfirm>\n                )\n              ]}\n            >\n              {/* <Skeleton avatar title={false} loading={item.doctor} active> */}\n              <List.Item.Meta\n                // avatar={\n                //   <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n                // }\n                title={\n                  <React.Fragment>\n                    <a className=\"applyDataBase-content-list-word\" href=\"#\">\n                      申请人:{item.doctor}\n                    </a>\n                    <a className=\"applyDataBase-content-list-word\" href=\"#\">\n                      所属单位:{item.hospital}\n                    </a>\n                  </React.Fragment>\n                }\n                description={\n                  <Tag\n                    color={\n                      item.approveStatus === \"通过\"\n                        ? \"geekblue\"\n                        : item.approveStatus === \"拒绝\"\n                        ? \"red\"\n                        : \"green\"\n                    }\n                  >\n                    {item.approveStatus}\n                  </Tag>\n                }\n              />\n              <div>申请日期：{item.REC_CRTTIME}</div>\n              {/* </Skeleton> */}\n            </List.Item>\n          )}\n        />\n      ),\n      applyPage: (\n        <Form\n          {...formItemLayout}\n          // onSubmit={this.handleSubmit}\n          className=\"applyDataBase-form\"\n        >\n          <h1 style={{ textAlign: \"center\" }}>参与CHASE-IBD数据库建设申请表</h1>\n          <h3 style={{ textAlign: \"center\" }}>申请医疗单位</h3>\n          <Form.Item label={<span>申请人&nbsp;</span>}>\n            {getFieldDecorator(\"doctor\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入申请人\",\n                  whitespace: true\n                }\n              ],\n              initialValue: isEdit?record.doctor:null\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>所属单位&nbsp;</span>}>\n            {getFieldDecorator(\"hospital\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入所属单位\",\n                  whitespace: true\n                }\n              ],\n              initialValue: isEdit?record.hospital:null\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>职称&nbsp;</span>}>\n            {getFieldDecorator(\"post\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入您的职称！\",\n                  whitespace: true\n                }\n              ],\n              initialValue:isEdit? record.post:null\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>联系电话&nbsp;</span>}>\n            {getFieldDecorator(\"phone\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入您的联系电话!\",\n                  whitespace: true\n                }\n              ],\n              initialValue: isEdit?record.phoneNumber:null\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>E-mail&nbsp;</span>}>\n            {getFieldDecorator(\"email\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入您的邮箱!\",\n                  whitespace: true\n                }\n              ],\n              initialValue: isEdit?record.email:null\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>IBD治疗团队名单&nbsp;</span>}>\n            {getFieldDecorator(\"teamPeople\", {\n              initialValue: isEdit?record.teamPeople:null\n            })(<Input />)}\n            {getFieldDecorator(\"teamPeople2\", {\n              initialValue: isEdit?record.teamPeople2:null\n            })(<Input />)}\n            {getFieldDecorator(\"teamPeople3\", {\n              initialValue:isEdit? record.teamPeople3:null\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>选择参与数据库研究&nbsp;</span>}>\n            {getFieldDecorator(\"study\", {\n              rules: [],\n              valuePropName: \"checked\",\n              initialValue: isEdit?record.study:null\n            })(\n              <Checkbox.Group\n                options={options}\n                onChange={this.onChangeCheckbox}\n              />\n            )}\n          </Form.Item>\n          <h3 style={{ textAlign: \"center\" }}>贵院目前患者数量</h3>\n\n          <Form.Item label={<span>CD患者数量&nbsp;</span>}>\n            {getFieldDecorator(\"CDNumber\", {\n              // rules: [\n              //   {\n              //     required: true,\n              //     message: \"请输入贵院的CD患者数量!\",\n              //     whitespace: true\n              //   }\n              // ],\n              initialValue: isEdit?record.CDPatientNumber:null\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>UC患者数量&nbsp;</span>}>\n            {getFieldDecorator(\"UCNumber\", {\n              // rules: [\n              //   {\n              //     required: true,\n              //     message: \"请输入贵院的UC患者数量!\",\n              //     whitespace: true\n              //   }\n              // ],\n              initialValue: isEdit?record.UCPatientNumber:null\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>医师执照：&nbsp;</span>}>\n            {getFieldDecorator(\"doctorPhoto\", {\n              initialValue: isEdit?record.doctorPhoto:null\n            })(\n              <Upload\n                name=\"avatar\"\n                listType=\"picture-card\"\n                className=\"avatar-uploader\"\n                showUploadList={false}\n                customRequest={this.handleUploadFile}\n                // fileList={fileList}\n                onRemove={this.handleRemoveFile}\n                onChange={this.handleChange}\n              >\n                {imageUrl ? (\n                  <img src={imageUrl} alt=\"avatar\" style={{ width: \"100%\" }} />\n                ) : (\n                  uploadButton\n                )}\n              </Upload>\n            )}\n          </Form.Item>\n          <Button\n            className=\"applyDataBase-form-save\"\n            htmlType=\"submit\"\n            onClick={() => {\n              this.handleSubmit(this, 1);\n            }}\n          >\n            保存\n          </Button>\n          <Button\n            type=\"primary\"\n            className=\"applyDataBase-form-submit\"\n            htmlType=\"submit\"\n            onClick={() => {\n              this.handleSubmit(this, 2);\n            }}\n          >\n            提交\n          </Button>\n        </Form>\n      )\n    };\n\n    return (\n      <Spin spinning={loading}>\n      <ApplyDataBase\n        pages={pages}\n        page={this.state.page}\n        onBack={this.onBack}\n        showImage={this.showImage}\n        onApply={this.onApply}\n        ref={el => (this.componentRef = el)}\n      ></ApplyDataBase></Spin>\n    );\n  }\n}\n\nexport default Form.create()(ActApply);\n","import ActApply from './ActApply';\nexport default ActApply;","import React, { Component } from \"react\";\nimport {\n  Modal,\n  Tag,\n  Button,\n  Table,\n  message,\n  Spin,\n  Form,\n  Input,\n  Divider\n} from \"antd\";\nimport \"./ShowProject.less\";\nimport http from \"../../../utils/api\";\nimport CommitCard from \"../ApplyProject/CommitCard\";\nconst showProjectId = \"622207867138\";\nconst applyProjectId = \"620475440053\";\nconst suggestId = \"621432069832\";\nconst { TextArea } = Input;\n\nclass ShowProject extends React.Component {\n  state = {\n    data: [{}],\n    page: \"listPage\",\n    spin: false,\n    record: {},\n    visible: false\n  };\n  componentDidMount = async () => {\n    await this.getData();\n  };\n  componentWillUnmount() {\n    // 卸载异步操作设置状态\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n  onCheck = record => {\n    console.log(\"record\", record);\n    this.setState({\n      page: \"checkPage\",\n      record\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  handleCancel = () => {\n    this.setState({\n      visible: false\n    });\n  };\n  onSuggest = () => {\n    this.setState({\n      visible: true\n    });\n  };\n  onjoin = async record => {\n    const doctorInfo = JSON.parse(localStorage.getItem(\"doctorInfo\"));\n    record.joinPersonID = doctorInfo.doctorId;\n    let res;\n    try {\n      res = await http().addRecords({\n        resid: applyProjectId,\n        data: [record]\n      });\n      if (res.data.Error == 0) {\n        message.success(\"提交成功\");\n      }\n      await this.getData();\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  submitSuggest = async e => {\n    const { record } = this.state;\n    this.props.form.validateFieldsAndScroll(async (err, values) => {\n      if (err) {\n        return;\n      }\n      let res;\n      let data = [\n        {\n          suggest: values.suggest,\n          projectId: record.REC_ID\n        }\n      ];\n      try {\n        res = await http().addRecords({\n          resid: suggestId,\n          data\n        });\n        if (res.data.Error === 0) {\n          message.success(\"添加成功\");\n        }\n      } catch (error) {\n        message.error(error.message);\n      }\n      this.setState({\n        visible: false\n      });\n    });\n  };\n  getApplyData = async () => {\n    let res;\n    try {\n      res = await http().getTable({\n        resid: applyProjectId\n      });\n      if (res.data.error === 0) {\n        console.log(\"res.data.data\", res.data.data);\n        let data = [];\n        //筛选出 申请加入的记录。\n        res.data.data.map(item => {\n          if (item.joinPersonID) {\n            data.push(item.applyId);\n          }\n        });\n        return data;\n      }\n    } catch (error) {}\n  };\n  getData = async () => {\n    const doctorInfo = JSON.parse(localStorage.getItem(\"doctorInfo\"));\n    this.setState({\n      spin: true\n    });\n    let res;\n    try {\n      res = await http().getTable({\n        resid: showProjectId\n      });\n      if (res.data.error === 0) {\n        let applyData = await this.getApplyData();\n\n        console.log(\"applyData\", applyData);\n        let data = [];\n        res.data.data.map(item => {\n          console.log(\"item\", item);\n          //如果 没有申请加入记录或者 这条记录是自己创建的，就标记 isJoined为true\n          if (applyData.includes(item.applyId) || item.doctorId == doctorInfo.doctorId ) {\n            item.isJoined = true;\n            data.push(item);\n          } else {\n            data.push(item);\n          }\n        });\n        console.log(\"data\",data)\n        this.setState({\n          data\n        });\n      }\n    } catch (error) {}\n\n    this.setState({\n      spin: false\n    });\n  };\n\n  render() {\n    const { data, spin, page, record } = this.state;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const columns = [\n      {\n        title: \"序号\",\n        dataIndex: \"number\",\n        key: \"number\",\n        width: 80\n      },\n      {\n        title: \"申请时间\",\n        dataIndex: \"applyTime\",\n        key: \"applyTime\",\n        width: 150\n      },\n      {\n        title: \"课题名称\",\n        dataIndex: \"task\",\n        key: \"hospital\",\n        width: 150\n      },\n      {\n        title: \"申请人\",\n        dataIndex: \"doctor\",\n        key: \"doctor\",\n        width: 150\n      },\n      {\n        title: \"审批状态\",\n        dataIndex: \"status\",\n        key: \"status\",\n        width: 150,\n        render: data => {\n          return (\n            <Tag\n            color={\n              data === \"进行中\" ? \"blue\" : data === \"已完成\" ? \"geekblue\" : \"green\"\n            }\n            >\n              {data}\n            </Tag>\n          );\n        }\n      },\n      {\n        title: \"操作\",\n        dataIndex: \"action\",\n        key: \"action\",\n        width: 150,\n        render: (text, record) => {\n          return (\n            <span>\n              <a\n                onClick={() => {\n                  this.onCheck(record);\n                }}\n              >\n                查看\n              </a>\n              <Divider type=\"vertical\" />\n              {!record.isJoined ?\n              <a\n                onClick={() => {\n                  this.onjoin(record);\n                }}\n              >\n                申请加入\n              </a>:null}\n            </span>\n          );\n        }\n      }\n    ];\n    const checkPage = (\n      <React.Fragment>\n        {page === \"checkPage\" ? (\n          <Button\n            icon={\"rollback\"}\n            type=\"primary\"\n            onClick={this.onBack}\n            className=\"approveList-btn\"\n          >\n            返回\n          </Button>\n        ) : null}\n        <Form\n          {...formItemLayout}\n          className=\"showProject-form\"\n          id=\"applyProjectForm\"\n        >\n          <div className=\"applyProject-form-contain\">\n            <div className=\"applyProject-form-contain-info\">\n              <h1 style={{ textAlign: \"center\" }}>CHASE-IBD专项课题申请表</h1>\n              <h3 style={{ textAlign: \"center\" }}>基本信息</h3>\n              <Form.Item label={<span>课题名称&nbsp;</span>}>\n                <span>{record.task}</span>\n              </Form.Item>\n              <Form.Item label={<span>课题负责人&nbsp;</span>}>\n                <span>{record.taskPrincipal}</span>\n              </Form.Item>\n              <Form.Item label={<span>申请人&nbsp;</span>}>\n                <span>{record.doctor}</span>\n              </Form.Item>\n              <Form.Item label={<span>所属单位&nbsp;</span>}>\n                <span>{record.hospital}</span>\n              </Form.Item>\n              <Form.Item label={<span>职称&nbsp;</span>}>\n                <span>{record.post}</span>\n              </Form.Item>\n              <Form.Item label={<span>联系电话&nbsp;</span>}>\n                <span>{record.phoneNumber}</span>\n              </Form.Item>\n              <Form.Item label={<span>E-mail&nbsp;</span>}>\n                <span>{record.email}</span>\n              </Form.Item>\n              <Form.Item label={<span>拟定国内协作单位&nbsp;</span>}>\n                <span>{record.inlandUnit}</span>\n              </Form.Item>\n              <Form.Item label={<span>拟定国际协作单位&nbsp;</span>}>\n                <span>{record.foreignUnit}</span>\n              </Form.Item>\n              {/* <Form.Item label={<span>IBD治疗团队名单&nbsp;</span>}>\n          <span>{record.teamPeople}</span>&nbsp;&nbsp;\n          <span>{record.teamPeople2}</span>&nbsp;&nbsp;\n          <span>{record.teamPeople3}</span>&nbsp;&nbsp;\n        </Form.Item> */}\n              {/* <Form.Item label={<span>选择参与数据库研究&nbsp;</span>}>\n          <Checkbox.Group\n            options={options}\n            defaultValue={record.studyType}\n            onChange={this.onChangeCheckbox}\n          />\n        </Form.Item> */}\n              <h3 style={{ textAlign: \"center\" }}>研究内容</h3>\n              <Form.Item label={<span>研究的理由&nbsp;</span>}>\n                <span>{record.studyReason}</span>\n              </Form.Item>\n              <Form.Item label={<span>研究区域&nbsp;</span>}>\n                <span>{record.studyArea}</span>\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>研究目标（主要目标，次要目标，附加目标）&nbsp;</span>\n                }\n              >\n                <span>{record.studyTarget}</span>\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>研究终点（主要终点，次要终点，附加终点）&nbsp;</span>\n                }\n              >\n                <span>{record.studyLast}</span>\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    研究设计与描述（研究描述，研究周期，研究设计，剂量和终点的合理性）&nbsp;\n                  </span>\n                }\n              >\n                <span>{record.studyDescription}</span>\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    项目入选（入选标准，排除标准包括药物，治疗和饮食）&nbsp;\n                  </span>\n                }\n              >\n                <span>{record.studySelected}</span>\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>研究终点（主要终点，次要终点，附加终点）&nbsp;</span>\n                }\n              >\n                <span>{record.studyLast}</span>\n              </Form.Item>\n              <Form.Item\n                label={<span>评估（疗效评估，安全评估，其他评估）&nbsp;</span>}\n              >\n                <span>{record.studyAssess}</span>\n              </Form.Item>\n              <Form.Item\n                label={<span>实验室检查：检查具体指标参数&nbsp;</span>}\n              >\n                <span>{record.studyCheck}</span>\n              </Form.Item>\n              <Form.Item\n                label={<span>评估（疗效评估，安全评估，其他评估）&nbsp;</span>}\n              >\n                <span>{record.studyAssess}</span>\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    统计方法（统计分析计划，人口统计学和其他基线特征分析，疗效分析，药代动力学分析，药效学分析，安全分析）&nbsp;\n                  </span>\n                }\n              >\n                <span>{record.staticMethod}</span>\n              </Form.Item>\n              <Form.Item label={<span>中期分析和提前终止的标准&nbsp;</span>}>\n                <span>{record.standard}</span>\n              </Form.Item>\n              <Form.Item label={<span>样本量的确定&nbsp;</span>}>\n                <span>{record.sure}</span>\n              </Form.Item>\n              <Form.Item label={<span>伦理委员会&nbsp;</span>}>\n                <span>{record.committee}</span>\n              </Form.Item>\n              <Form.Item label={<span>参考资料&nbsp;</span>}>\n                <span>{record.referenceData}</span>\n              </Form.Item>\n            </div>\n            {record[\"621432069832\"] ? (\n              <div className=\"applyProject-form-contain-notice\">\n                <span>来自数委会的批注</span>\n                {record[\"621432069832\"] &&\n                  record[\"621432069832\"].map(item => {\n                    return (\n                      <CommitCard key={item.REC_ID} data={item}></CommitCard>\n                    );\n                  })}\n              </div>\n            ) : null}\n          </div>\n        </Form>\n      </React.Fragment>\n    );\n    return (\n      <div className=\"approveProjectList\">\n        {page === \"listPage\" ? (\n          <Spin spinning={spin}>\n            <Table\n              key=\"2\"\n              className=\"approveProjectList-table\"\n              columns={columns}\n              dataSource={data}\n              scroll={{ x: 1000, y: \"calc(100vh - 220px)\" }}\n            />\n          </Spin>\n        ) : (\n          checkPage\n        )}\n      </div>\n    );\n  }\n}\nexport default Form.create()(ShowProject);\n","import ShowProject from  './ShowProject';\nexport default ShowProject;","import React, { Component } from \"react\";\nimport \"./DownFile.less\";\nimport {\n  Collapse,\n  Icon,\n  Input,\n  Upload,\n  Button,\n  Form,\n  message,\n  Spin,\n  Modal,\n  Table\n} from \"antd\";\nimport http from \"../../../utils/api\";\n\nconst fileId = \"621892190597\";\nconst { TextArea } = Input;\nconst columns = props => {\n  const { onDown } = props;\n  return [\n    {\n      title: \"文件名\",\n      dataIndex: \"fileName\",\n      key: \"fileName\",\n      width: 250\n    },\n    {\n      title: \"备注\",\n      dataIndex: \"remark\",\n      key: \"remark\",\n      width: 400\n    },\n    {\n      title: \"上传者\",\n      dataIndex: \"uploadPerson\",\n      key: \"uploadPerson\",\n      width: 150\n    },\n    {\n      title: \"上传时间\",\n      dataIndex: \"uploadDate\",\n      key: \"uploadDate\",\n      width: 150\n    },\n    {\n      title: \"操作\",\n      key: \"action\",\n      width: 150,\n      render: (text, record) => (\n        <span>\n          <a\n            onClick={() => {\n              onDown(record);\n            }}\n          >\n            下载\n          </a>\n        </span>\n      )\n    }\n  ];\n};\nclass DownFile extends Component {\n  state = {\n    spin: false,\n    data: [],\n    record: {},\n    visible: false,\n    fileUrl: \"\"\n  };\n  componentDidMount() {\n    this.getData();\n  }\n\n  //获取文件表记录\n  getData = async () => {\n    let res;\n    this.setState({\n      loading: true\n    });\n    try {\n      res = await http().getTable({\n        resid: fileId\n      });\n      if (res.data.error == 0) {\n        this.setState({\n          data: res.data.data\n        });\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n    this.setState({\n      loading: false\n    });\n  };\n\n  //下载文件\n  onDown = url => {\n    if (!url) {\n      return Modal.warning({\n        title: \"您还未上传过资料\"\n      });\n    }\n    const urls = url.split(\";file;\");\n    for (let i = 0, len = urls.length; i < len; i++) {\n      window.open(urls[i]);\n    }\n  };\n  render() {\n    const { spin, data } = this.state;\n    return (\n      <div className=\"editNotice\">\n        <Spin spinning={spin}>\n          <Table\n            key=\"3\"\n            className=\"editNotice-table\"\n            columns={columns({\n              onDown: record => {\n                this.onDown(record.fileUrl);\n              },\n              data: data\n            })}\n            scroll={{ x: 1000, y: \"calc(100vh - 260px)\" }}\n            dataSource={data}\n          />\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(DownFile);\n","import DownFile from './DownFile';\nexport default DownFile;","import React, { Component } from \"react\";\nimport \"./MenuDataBase.less\";\nimport http from \"../../../utils/api\";\nimport { Form, message, Icon, Input, Button, Tabs } from \"antd\";\nimport NoticeList from \"../NoticeList\";\nimport ApplyDataBase from \"../ApplyDataBase\";\nimport ApplyProject from \"../ApplyProject\";\nimport ActApply from \"../ActApply\";\nimport ShowProject from \"../ShowProject\";\nimport DownFile from \"../DownFile\";\nconst { TabPane } = Tabs;\n\nclass MenuDataBase extends Component {\n  state = {\n  };\n\n  componentDidMount = () => {};\n\n  render() {\n    return (\n        <Tabs\n                defaultActiveKey=\"1\"\n                tabBarStyle={{\n                  height: \"70px\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  paddingLeft: \"50px\"\n                }}\n              >\n                <TabPane tab=\"通知\" key=\"1\">\n                 <NoticeList></NoticeList>\n                </TabPane>\n                <TabPane tab=\"申请加入数据库\" key=\"2\">\n                  <ActApply></ActApply>\n                </TabPane>\n                <TabPane tab=\"研究项目申请\" key=\"3\">\n                 <ApplyProject></ApplyProject>\n                </TabPane>\n                {/* <TabPane tab=\"申请流程说明\" key=\"4\">\n                  Content of Tab Pane 3\n                </TabPane> */}\n                <TabPane tab=\"项目公示\" key=\"4\">\n                  <ShowProject></ShowProject>\n                </TabPane>\n                <TabPane tab=\"文件下载\" key=\"5\">\n                  <DownFile></DownFile>\n                </TabPane>\n              </Tabs>\n    );\n  }\n}\n\nexport default MenuDataBase;\n","import React, { Component } from \"react\";\nimport {\n  List,\n  Tag,\n  Divider,\n  Table,\n  message,\n  Popconfirm,\n  Button,\n  Form,\n  Input,\n  Spin,\n  Modal\n} from \"antd\";\nimport \"./EditNotice.less\";\nimport ApplyDataBase from \"../ApplyDataBase\";\nimport http from \"../../../utils/api\";\nimport TextArea from \"antd/lib/input/TextArea\";\nconst noticeId = \"620317621824\";\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 }\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 }\n  }\n};\nconst columns = props => {\n  const { onEdit, onPublish, data } = props;\n  return [\n    {\n      title: \"序号\",\n      dataIndex: \"number\",\n      key: \"number\",\n      width: 80\n    },\n    {\n      title: \"标题\",\n      dataIndex: \"title\",\n      key: \"title\",\n      width: 250,\n      render: text => <a>{text}</a>\n    },\n    {\n      title: \"消息内容\",\n      dataIndex: \"content\",\n      key: \"content\",\n      width: 400\n    },\n    {\n      title: \"发布者\",\n      dataIndex: \"publishPerson\",\n      key: \"publishPerson\",\n      width: 150\n    },\n    {\n      title: \"发布时间\",\n      dataIndex: \"publishTime\",\n      key: \"publishTime\",\n      width: 150\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: data => (\n        <Tag color={data === \"已发布\" ? \"geekblue\" : \"green\"}>{data}</Tag>\n      ),\n      width: 150\n    },\n    {\n      title: \"操作\",\n      key: \"action\",\n      width: 150,\n      render: (text, record) => (\n        <span>\n          <a\n            onClick={() => {\n              onEdit(record);\n            }}\n          >\n            修改\n          </a>\n          <Divider type=\"vertical\" />\n          {record.isPublish === \"Y\" ? (\n            <a\n              onClick={() => {\n                onPublish(record, 1);\n              }}\n            >\n              取消发布\n            </a>\n          ) : (\n            <a\n              onClick={() => {\n                onPublish(record, 2);\n              }}\n            >\n              发布\n            </a>\n          )}\n        </span>\n      )\n    }\n  ];\n};\n\nclass EditNotice extends React.Component {\n  state = {\n    data: [],\n    record: {},\n    page: \"listPage\", //当前页面\n    spin: false, //是否显示加载\n    visible: false, //是否显示添加模态框\n    editVisible: false //是否显示查看模态框\n  };\n  handleCancel = () => {\n    this.setState({\n      visible: false,\n      editVisible: false\n    });\n  };\n  save = async (e, type) => {\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.onSubmit(values, type);\n      }\n    });\n  };\n  //保存数据，如果 传入type是1 ，表示添加。type是2 的话表示 修改。\n  onSubmit = async (values, type) => {\n    let res;\n    if (type === 1) {\n      let data = [values];\n      try {\n        res = await http().addRecords({\n          resid: noticeId,\n          data\n        });\n        if (res.data.Error === 0) {\n          message.success(\"添加成功\");\n          this.setState({\n            visible: false\n          });\n          await this.getData();\n        }\n      } catch (error) {\n        message.error(error.message);\n      }\n    } else {\n      let data = [{ ...values, REC_ID: this.state.record.REC_ID }];\n      try {\n        res = await http().modifyRecords({\n          resid: noticeId,\n          data\n        });\n        if (res.data.Error === 0) {\n          message.success(\"修改成功\");\n          this.setState({\n            editVisible: false\n          });\n          await this.getData();\n        }\n      } catch (error) {\n        message.error(error.message);\n      }\n    }\n  };\n\n  publish = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  onPublish = async (record, type) => {\n    if (type == 1) {\n      record.isPublish = \"N\";\n    } else {\n      record.isPublish = \"Y\";\n    }\n    let res;\n    try {\n      res = await http().modifyRecords({\n        resid: noticeId,\n        data: [record]\n      });\n      if (res.data.Error === 0) {\n        message.success(\"发布成功\");\n        await this.getData();\n      }\n    } catch (error) {}\n  };\n  renderContent = () => {\n    let page = this.state.page;\n    switch (page) {\n      case \"listPage\":\n        return this.renderListPage();\n      case \"addPage\":\n        return this.renderAddPage();\n      case \"checkPage\":\n        return this.renderCheckPage();\n    }\n  };\n  renderListPage = () => {\n    let data = this.state.data;\n    let { spin, record } = this.state;\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <div className=\"editNotice\">\n        <Button type=\"primary\" className=\"editNotice-add\" onClick={this.onAdd}>\n          添加新通知\n        </Button>\n        <Spin spinning={spin}>\n          <Table\n            key=\"3\"\n            className=\"editNotice-table\"\n            columns={columns({\n              onEdit: record => {\n                this.onEdit(record);\n              },\n              onPublish: (record, type) => {\n                this.onPublish(record, type);\n              },\n              data: data\n            })}\n            scroll={{ x: 1000, y: \"calc(100vh - 260px)\" }}\n            dataSource={data}\n          />\n          <Modal\n            title=\"添加新通知\"\n            visible={this.state.visible}\n            width={700}\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n            destroyOnClose={true}\n            footer={[\n              <Button key=\"back\" onClick={this.handleCancel}>\n                取消\n              </Button>,\n              <Button\n                key=\"submit\"\n                type=\"primary\"\n                onClick={() => {\n                  this.save(1);\n                }}\n              >\n                保存\n              </Button>,\n              <Button key=\"submit\" type=\"primary\" onClick={this.publish}>\n                发布\n              </Button>\n            ]}\n          >\n            <Form {...formItemLayout} className=\"editNotice-form\">\n              {/* <h1>消息编辑</h1> */}\n              <Form.Item\n                className=\"editNotice-form-item\"\n                label={<span>标题&nbsp;</span>}\n              >\n                {getFieldDecorator(\"title\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入标题\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                className=\"editNotice-form-item\"\n                label={<span>消息内容&nbsp;</span>}\n              >\n                {getFieldDecorator(\"content\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入消息内容\",\n                      whitespace: true\n                    }\n                  ]\n                })(<TextArea className=\"editNotice-form-item-textarea\" />)}\n              </Form.Item>\n            </Form>\n          </Modal>\n          <Modal\n            title=\"修改通知\"\n            visible={this.state.editVisible}\n            width={700}\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n            destroyOnClose={true}\n            footer={[\n              <Button key=\"back\" onClick={this.handleCancel}>\n                取消\n              </Button>,\n              <Button\n                key=\"submit\"\n                type=\"primary\"\n                onClick={() => {\n                  this.save(2);\n                }}\n              >\n                保存\n              </Button>\n            ]}\n          >\n            <Form {...formItemLayout} className=\"editNotice-form\">\n              {/* <h1>消息编辑</h1> */}\n              <Form.Item\n                className=\"editNotice-form-item\"\n                label={<span>标题&nbsp;</span>}\n              >\n                {getFieldDecorator(\"title\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入标题\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: record.title\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                className=\"editNotice-form-item\"\n                label={<span>消息内容&nbsp;</span>}\n              >\n                {getFieldDecorator(\"content\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入消息内容\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: record.content\n                })(<TextArea className=\"editNotice-form-item-textarea\" />)}\n              </Form.Item>\n            </Form>\n          </Modal>\n        </Spin>\n      </div>\n    );\n  };\n  componentDidMount = async () => {\n    await this.getData();\n  };\n  getData = async () => {\n    let res;\n    this.setState({\n      spin: true\n    });\n    try {\n      res = await http().getTable({\n        resid: noticeId\n      });\n      if (res.data.error === 0) {\n        this.setState({\n          data: res.data.data\n        });\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n    this.setState({\n      spin: false\n    });\n  };\n  onAdd = () => {\n    this.setState({\n      visible: true\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  onEdit = record => {\n    this.setState({\n      editVisible: true,\n      record\n    });\n  };\n  render() {\n    const { data, record, page } = this.state;\n\n    return this.renderContent();\n  }\n}\nexport default Form.create()(EditNotice);\n","import EditNotice from  './EditNotice';\nexport default EditNotice;","import React, { Component } from \"react\";\nimport {\n  List,\n  Tag,\n  Divider,\n  Table,\n  message,\n  Form,\n  Button,\n  Checkbox,\n  Spin,\n  Modal,\n  Input\n} from \"antd\";\nimport \"./ApproveList.less\";\nimport http from \"../../../utils/api\";\nconst applyDataBaseId = \"621790784304\"; //数据库申请表-审核\nconst { TextArea } = Input;\n\nclass ApproveList extends React.Component {\n  state = {\n    data: [{}],\n    record: {},\n    page: \"listPage\",\n    spin: false,\n    visible: false\n  };\n  componentDidMount = async () => {\n    await this.getData();\n  };\n  getData = async () => {\n    this.setState({\n      spin: true\n    });\n    let res;\n    try {\n      res = await http().getTable({\n        resid: applyDataBaseId\n      });\n      if (res.data.error === 0) {\n        this.setState({\n          data: res.data.data\n        });\n      }\n    } catch (error) {}\n    this.setState({\n      spin: false\n    });\n  };\n  onCheck = record => {\n    this.setState({\n      page: \"checkPage\",\n      record\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  onPassOrReject = async type => {\n    http().clearCache();\n    let res;\n    let data;\n    if (type === 1) {\n      data = [\n        {\n          ...this.state.record,\n          isPass: \"Y\"\n        }\n      ];\n    } else {\n      data = [\n        {\n          ...this.state.record,\n          isPass: \"N\"\n        }\n      ];\n    }\n    try {\n      res = await http().modifyRecords({\n        resid: applyDataBaseId,\n        data\n      });\n      if (res.data.Error === 0) {\n        message.success(\"操作成功\");\n      }\n      this.setState({\n        page: \"listPage\"\n      });\n      await this.getData();\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  render() {\n    const { data, record, page, spin, visible } = this.state;\n    const options = [\n      { label: \"单中心研究\", value: \"单中心研究\" },\n      { label: \"多中心研究\", value: \"多中心研究\" },\n      { label: \"第三方研究\", value: \"第三方研究\" },\n      { label: \"所有研究\", value: \"所有研究\" }\n    ];\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const checkPage = (\n      <Form {...formItemLayout} className=\"approveList-form\">\n        {page === \"checkPage\" ? (\n          <Button\n            icon={\"rollback\"}\n            type=\"primary\"\n            onClick={this.onBack}\n            className=\"approveList-btn\"\n          >\n            返回\n          </Button>\n        ) : null}\n        <div className=\"approveList-btns\">\n          {record.isPass ? null : (\n            <React.Fragment>\n              {\" \"}\n              <Button\n                className=\"approveList-btn\"\n                type=\"primary\"\n                onClick={() => {\n                  this.onPassOrReject(1);\n                }}\n              >\n                同意\n              </Button>\n              {/* <Button\n                className=\"approveList-btn\"\n                type=\"danger\"\n                onClick={() => {\n                  this.onPassOrReject(2);\n                }}\n              >\n                拒绝\n              </Button> */}\n            </React.Fragment>\n          )}\n        </div>\n        <h1>参与CHASE-IBD数据库建设申请表</h1>\n        <h3>申请医疗单位</h3>\n        <Form.Item label={<span>申请人&nbsp;</span>}>\n          <span>{record.doctor}</span>\n        </Form.Item>\n        <Form.Item label={<span>所属单位&nbsp;</span>}>\n          <span>{record.hospital}</span>\n        </Form.Item>\n        <Form.Item label={<span>职称&nbsp;</span>}>\n          <span>{record.post}</span>\n        </Form.Item>\n        <Form.Item label={<span>联系电话&nbsp;</span>}>\n          <span>{record.phoneNumber}</span>\n        </Form.Item>\n        <Form.Item label={<span>E-mail&nbsp;</span>}>\n          <span>{record.email}</span>\n        </Form.Item>\n        <Form.Item label={<span>IBD治疗团队名单&nbsp;</span>}>\n          <span>{record.teamPeople}</span>&nbsp;&nbsp;\n          <span>{record.teamPeople2}</span>&nbsp;&nbsp;\n          <span>{record.teamPeople3}</span>&nbsp;&nbsp;\n        </Form.Item>\n        <Form.Item label={<span>选择参与数据库研究&nbsp;</span>}>\n          <Checkbox.Group\n            options={options}\n            defaultValue={record.studyType}\n            onChange={this.onChangeCheckbox}\n          />\n        </Form.Item>\n        <h3>贵院目前患者数量</h3>\n\n        <Form.Item label={<span>CD患者数量&nbsp;</span>}>\n          <span>{record.CDPatientNumber}</span>\n        </Form.Item>\n        <Form.Item label={<span>UC患者数量&nbsp;</span>}>\n          <span>{record.UCPatientNumber}</span>\n        </Form.Item>\n        <Form.Item label={<span>医师执照&nbsp;</span>}>\n          <img\n            src={record.doctorPhoto}\n            alt=\"avatar\"\n            style={{ width: \"200px\", height: \"200px\" }}\n          />\n        </Form.Item>\n      </Form>\n    );\n    const columns = [\n      {\n        title: \"序号\",\n        dataIndex: \"number\",\n        key: \"number\",\n        width: 80\n      },\n      {\n        title: \"申请人\",\n        dataIndex: \"doctor\",\n        key: \"doctor\",\n        width: 150\n      },\n      {\n        title: \"申请时间\",\n        dataIndex: \"applyDate\",\n        key: \"applyDate\",\n        width: 150\n      },\n      {\n        title: \"所属单位\",\n        dataIndex: \"hospital\",\n        key: \"hospital\",\n        width: 150\n      },\n      {\n        title: \"研究类型\",\n        dataIndex: \"studyType\",\n        key: \"studyType\",\n        width: 150\n      },\n      {\n        title: \"审批状态\",\n        dataIndex: \"approveStatus\",\n        key: \"approveStatus\",\n        width: 150,\n        render: data => {\n          return (\n            <Tag\n            color={\n              data === \"进行中\" ? \"blue\" : data === \"已完成\" ? \"geekblue\" : \"green\"\n            }\n            >\n              {data}\n            </Tag>\n          );\n        }\n      },\n      // {\n      //   title: 'Tags',\n      //   key: 'tags',\n      //   dataIndex: 'tags',\n      //   render: tags => (\n      //     <span>\n      //       {tags.map(tag => {\n      //         let color = tag.length > 5 ? 'geekblue' : 'green';\n      //         if (tag === 'loser') {\n      //           color = 'volcano';\n      //         }\n      //         return (\n      //           <Tag color={color} key={tag}>\n      //             {tag.toUpperCase()}\n      //           </Tag>\n      //         );\n      //       })}\n      //     </span>\n      //   ),\n      // },\n      {\n        title: \"操作\",\n        key: \"action\",\n        width: 150,\n        render: (text, record) => (\n          <span>\n            <a\n              onClick={() => {\n                this.onCheck(record);\n              }}\n            >\n              查看/建议\n            </a>\n          </span>\n        )\n      }\n    ];\n    return (\n      <div className=\"approveList\">\n        {page === \"listPage\" ? (\n          <Spin spinning={spin}>\n            <Table\n              key=\"1\"\n              className=\"approveList-table\"\n              columns={columns}\n              dataSource={data}\n              scroll={{ x: 1000, y: \"calc(100vh - 220px)\" }}\n            />\n          </Spin>\n        ) : (\n          checkPage\n        )}\n      </div>\n    );\n  }\n}\nexport default ApproveList;\n","import ApproveList from  './ApproveList';\nexport default ApproveList;","import React, { Component } from \"react\";\nimport { Modal, Tag, Button, Table, message, Spin, Form, Input } from \"antd\";\nimport \"./ApproveProjectList.less\";\nimport http from \"../../../utils/api\";\nimport CommitCard from \"../ApplyProject/CommitCard\";\nconst applyProjectId = \"621790809693\"; //研究项目申请表-审核\nconst suggestId = \"621432069832\";\n\nconst { TextArea } = Input;\n\nclass ApproveProjectList extends React.Component {\n  state = {\n    data: [{}],\n    page: \"listPage\",\n    spin: false,\n    record: {},\n    visible: false\n  };\n  componentDidMount = async () => {\n    http().clearCache();\n    await this.getData();\n  };\n  componentWillUnmount() {\n    // 卸载异步操作设置状态\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n  onCheck = record => {\n    this.setState({\n      page: \"checkPage\",\n      record\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  handleCancel = () => {\n    this.setState({\n      visible: false\n    });\n  };\n  onSuggest = () => {\n    this.setState({\n      visible: true\n    });\n  };\n  onAgreeOrReject = async type => {\n    let res;\n    let data;\n    if (type === 1) {\n      data = [\n        {\n          ...this.state.record,\n          isPass: \"Y\"\n        }\n      ];\n    } else {\n      data = [\n        {\n          ...this.state.record,\n          isPass: \"N\"\n        }\n      ];\n    }\n    try {\n      res = await http().modifyRecords({\n        resid: applyProjectId,\n        data\n      });\n      if (res.data.Error === 0) {\n        message.success(\"操作成功\");\n      }\n      this.setState({\n        page: \"listPage\"\n      });\n      await this.getData();\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  submitSuggest = async e => {\n    const { record } = this.state;\n    this.props.form.validateFieldsAndScroll(async (err, values) => {\n      if (err) {\n        return;\n      }\n      let res;\n      let data = [\n        {\n          suggest: values.suggest,\n          projectId: record.REC_ID\n        }\n      ];\n      try {\n        res = await http().addRecords({\n          resid: suggestId,\n          data\n        });\n        if (res.data.Error === 0) {\n          message.success(\"添加成功\");\n          this.onBack();\n          await this.getData();\n        }\n      } catch (error) {\n        message.error(error.message);\n      }\n      this.setState({\n        visible: false\n      });\n    });\n  };\n  getData = async () => {\n    this.setState({\n      spin: true\n    });\n    let res;\n    try {\n      res = await http().getTableNew({\n        resid: applyProjectId,\n        subresid: suggestId\n      });\n      if (res.data.Error === 0) {\n        this.setState({\n          data: res.data.data\n        });\n      }\n    } catch (error) {}\n    this.setState({\n      spin: false\n    });\n  };\n\n  render() {\n    const { data, spin, page, record, visible } = this.state;\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const columns = [\n      {\n        title: \"序号\",\n        dataIndex: \"number\",\n        key: \"number\",\n        width: 80\n      },\n      {\n        title: \"课题名称\",\n        dataIndex: \"task\",\n        key: \"task\",\n        width: 150\n      },\n      {\n        title: \"申请时间\",\n        dataIndex: \"applyTime\",\n        key: \"applyTime\",\n        width: 150\n      },\n      {\n        title: \"所属单位\",\n        dataIndex: \"hospital\",\n        key: \"hospital\",\n        width: 150\n      },\n      {\n        title: \"发起人\",\n        dataIndex: \"doctor\",\n        key: \"doctor\",\n        width: 150\n      },\n      {\n        title: \"申请者\",\n        dataIndex: \"joinPerson\",\n        key: \"joinPerson\",\n        width: 150\n      },\n      {\n        title: \"状态\",\n        dataIndex: \"applyPersonStatus\",\n        key: \"applyPersonStatus\",\n        width: 150\n      },\n      {\n        title: \"审批状态\",\n        dataIndex: \"status\",\n        key: \"status\",\n        width: 150,\n        render: data => {\n          return (\n            <Tag\n            color={\n              data === \"进行中\" ? \"blue\" : data === \"已完成\" ? \"geekblue\" : \"green\"\n            }\n                \n              \n            >\n              {data}\n            </Tag>\n          );\n        }\n      },\n      {\n        title: \"操作\",\n        key: \"action\",\n        render: (text, record) => (\n          <span>\n            <a\n              onClick={() => {\n                this.onCheck(record);\n              }}\n            >\n              查看/建议\n            </a>\n          </span>\n        ),\n        width: 150\n      }\n    ];\n    const checkPage = (\n      <Form\n        {...formItemLayout}\n        // onSubmit={this.handleSubmit}\n        className=\"approveProjectList-form\"\n      >\n        {page === \"checkPage\" ? (\n          <Button\n            icon={\"rollback\"}\n            type=\"primary\"\n            onClick={this.onBack}\n            className=\"approveList-btn\"\n          >\n            返回\n          </Button>\n        ) : null}\n        {!record.isPass ? (\n          <div className=\"approveList-btns\">\n            <Button\n              className=\"approveList-btn\"\n              type=\"primary\"\n              onClick={() => {\n                this.onAgreeOrReject(1);\n              }}\n            >\n              同意\n            </Button>\n\n            {/* <Button\n              className=\"approveList-btn\"\n              type=\"danger\"\n              onClick={() => {\n                this.onAgreeOrReject(2);\n              }}\n            >\n              拒绝\n            </Button> */}\n            <Button\n              className=\"approveList-btn\"\n              type=\"primary\"\n              onClick={this.onSuggest}\n            >\n              \b建议\n            </Button>\n          </div>\n        ) : null}\n        <div className=\"approveProjectList-form-contain\">\n          <div className=\"approveProjectList-form-contain-info\">\n            <h1>CHASE-IBD专项课题申请表</h1>\n            <h3>基本信息</h3>\n            <Form.Item label={<span>课题名称&nbsp;</span>}>\n              <span>{record.doctor}</span>\n            </Form.Item>\n            <Form.Item label={<span>课题负责人&nbsp;</span>}>\n              <span>{record.hospital}</span>\n            </Form.Item>\n            <Form.Item label={<span>申请人&nbsp;</span>}>\n              <span>{record.post}</span>\n            </Form.Item>\n            <Form.Item label={<span>所属单位&nbsp;</span>}>\n              <span>{record.phoneNumber}</span>\n            </Form.Item>\n            <Form.Item label={<span>职称&nbsp;</span>}>\n              <span>{record.email}</span>\n            </Form.Item>\n            <Form.Item label={<span>联系电话&nbsp;</span>}>\n              <span>{record.email}</span>\n            </Form.Item>\n            <Form.Item label={<span>E-mail&nbsp;</span>}>\n              <span>{record.email}</span>\n            </Form.Item>\n            <Form.Item label={<span>拟定国内协作单位&nbsp;</span>}>\n              <span>{record.email}</span>\n            </Form.Item>\n            <Form.Item label={<span>拟定国际协作单位&nbsp;</span>}>\n              <span>{record.email}</span>\n            </Form.Item>\n            {/* <Form.Item label={<span>IBD治疗团队名单&nbsp;</span>}>\n          <span>{record.teamPeople}</span>&nbsp;&nbsp;\n          <span>{record.teamPeople2}</span>&nbsp;&nbsp;\n          <span>{record.teamPeople3}</span>&nbsp;&nbsp;\n        </Form.Item> */}\n            {/* <Form.Item label={<span>选择参与数据库研究&nbsp;</span>}>\n          <Checkbox.Group\n            options={options}\n            defaultValue={record.studyType}\n            onChange={this.onChangeCheckbox}\n          />\n        </Form.Item> */}\n            <h3>研究内容</h3>\n\n            <Form.Item label={<span>研究的理由&nbsp;</span>}>\n              <span>{record.studyReason}</span>\n            </Form.Item>\n            <Form.Item label={<span>研究区域&nbsp;</span>}>\n              <span>{record.studyArea}</span>\n            </Form.Item>\n            <Form.Item\n              label={\n                <span>研究目标（主要目标，次要目标，附加目标）&nbsp;</span>\n              }\n            >\n              <span>{record.studyTarget}</span>\n            </Form.Item>\n            <Form.Item\n              label={\n                <span>研究终点（主要终点，次要终点，附加终点）&nbsp;</span>\n              }\n            >\n              <span>{record.studyLast}</span>\n            </Form.Item>\n            <Form.Item\n              label={\n                <span>\n                  研究设计与描述（研究描述，研究周期，研究设计，剂量和终点的合理性）&nbsp;\n                </span>\n              }\n            >\n              <span>{record.studyDescription}</span>\n            </Form.Item>\n            <Form.Item\n              label={\n                <span>\n                  项目入选（入选标准，排除标准包括药物，治疗和饮食）&nbsp;\n                </span>\n              }\n            >\n              <span>{record.studySelected}</span>\n            </Form.Item>\n            <Form.Item\n              label={\n                <span>研究终点（主要终点，次要终点，附加终点）&nbsp;</span>\n              }\n            >\n              <span>{record.studyLast}</span>\n            </Form.Item>\n            <Form.Item\n              label={<span>评估（疗效评估，安全评估，其他评估）&nbsp;</span>}\n            >\n              <span>{record.studyAssess}</span>\n            </Form.Item>\n            <Form.Item label={<span>实验室检查：检查具体指标参数&nbsp;</span>}>\n              <span>{record.studyCheck}</span>\n            </Form.Item>\n            <Form.Item\n              label={<span>评估（疗效评估，安全评估，其他评估）&nbsp;</span>}\n            >\n              <span>{record.studyAssess}</span>\n            </Form.Item>\n            <Form.Item\n              label={\n                <span>\n                  统计方法（统计分析计划，人口统计学和其他基线特征分析，疗效分析，药代动力学分析，药效学分析，安全分析）&nbsp;\n                </span>\n              }\n            >\n              <span>{record.staticMethod}</span>\n            </Form.Item>\n            <Form.Item label={<span>中期分析和提前终止的标准&nbsp;</span>}>\n              <span>{record.standard}</span>\n            </Form.Item>\n            <Form.Item label={<span>样本量的确定&nbsp;</span>}>\n              <span>{record.sure}</span>\n            </Form.Item>\n            <Form.Item label={<span>伦理委员会&nbsp;</span>}>\n              <span>{record.committee}</span>\n            </Form.Item>\n            <Form.Item label={<span>参考资料&nbsp;</span>}>\n              <span>{record.referenceData}</span>\n            </Form.Item>\n          </div>\n          {record[\"621432069832\"] ? (\n            <div className=\"applyProject-form-contain-notice\">\n              <span>来自数委会的批注</span>\n              {record[\"621432069832\"] &&\n                record[\"621432069832\"].map(item => {\n                  return (\n                    <CommitCard key={item.REC_ID} data={item}></CommitCard>\n                  );\n                })}\n            </div>\n          ) : null}\n        </div>{\" \"}\n        <Modal\n          title=\"建议\"\n          visible={visible}\n          width={500}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          destroyOnClose={true}\n          footer={[\n            <Button key=\"back\" onClick={this.handleCancel}>\n              取消\n            </Button>,\n            <Button\n              htmlType=\"submit\"\n              type=\"primary\"\n              onClick={() => {\n                this.submitSuggest();\n              }}\n            >\n              提交\n            </Button>\n          ]}\n        >\n          <Form {...formItemLayout} className=\"editNotice-form\">\n            {/* <h1>消息编辑</h1> */}\n            {getFieldDecorator(\"suggest\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入建议\",\n                  whitespace: true\n                }\n              ]\n            })(\n              <TextArea\n              placeholder=\"请输入建议\"\n                className=\"editNotice-form-item-textarea\"\n              />\n            )}\n          </Form>\n        </Modal>\n      </Form>\n    );\n    return (\n      <div className=\"approveProjectList\">\n        {page === \"listPage\" ? (\n          <Spin spinning={spin}>\n            <Table\n              key=\"2\"\n              className=\"approveProjectList-table\"\n              columns={columns}\n              dataSource={data}\n              scroll={{ x: 1000, y: \"calc(100vh - 220px)\" }}\n            />\n          </Spin>\n        ) : (\n          checkPage\n        )}\n      </div>\n    );\n  }\n}\nexport default Form.create()(ApproveProjectList);\n","import ApproveProjectList from  './ApproveProjectList';\nexport default ApproveProjectList;","import React, { Component } from \"react\";\nimport \"./UploadFile.less\";\nimport {\n  Icon,\n  Input,\n  Upload,\n  Button,\n  Form,\n  message,\n  Spin,\n  Modal,\n  Table,\n  Divider,\n  Popconfirm\n} from \"antd\";\nimport http from \"../../../utils/api\";\n\nconst fileId = \"621892190597\";\nconst columns = props => {\n  const { onDown, onDelete } = props;\n  return [\n    {\n      title: \"文件名\",\n      dataIndex: \"fileName\",\n      key: \"fileName\",\n      width: 250\n    },\n    {\n      title: \"备注\",\n      dataIndex: \"remark\",\n      key: \"remark\",\n      width: 400\n    },\n    {\n      title: \"上传者\",\n      dataIndex: \"uploadPerson\",\n      key: \"uploadPerson\",\n      width: 150\n    },\n    {\n      title: \"上传时间\",\n      dataIndex: \"uploadDate\",\n      key: \"uploadDate\",\n      width: 150\n    },\n    {\n      title: \"操作\",\n      key: \"action\",\n      width: 150,\n      render: (text, record) => (\n        <span>\n          <a\n            onClick={() => {\n              onDown(record);\n            }}\n          >\n            下载\n          </a>\n          <Divider type=\"vertical\" />\n          <Popconfirm\n            title=\"你确定要提交吗\"\n            onConfirm={() => {\n              onDelete(record);\n            }}\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <a>删除</a>\n          </Popconfirm>\n        </span>\n      )\n    }\n  ];\n};\nconst uploadFile = (file, url) => {\n  return new Promise((resolve, reject) => {\n    let fd = new FormData();\n    fd.append(\"file\", file, file.name);\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", url);\n    xhr.onload = () => {\n      const data = JSON.parse(xhr.response);\n      if (xhr.status === 200 && (data.error === 0 || data.error === \"0\")) {\n        const imgUrl = data.data;\n        resolve(imgUrl);\n      } else {\n        reject(data);\n      }\n    };\n    xhr.send(fd);\n  });\n};\nclass UploadFile extends Component {\n  state = {\n    spin: false,\n    data: [],\n    record: {},\n    visible: false,\n    fileUrl: \"\"\n  };\n  componentDidMount = async () => {\n    await this.getData();\n  };\n  //获取文件表记录\n  getData = async () => {\n    let res;\n    this.setState({\n      spin: true\n    });\n    try {\n      res = await http().getTable({\n        resid: fileId\n      });\n      if (res.data.error == 0) {\n        this.setState({\n          data: res.data.data\n        });\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n    this.setState({\n      spin: false\n    });\n  };\n\n  handleSubmit = e => {\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.onSubmit(values);\n      }\n    });\n  };\n  onDelete = async record => {\n    let res;\n    try {\n      res = await http().removeRecords({\n        resid: fileId,\n        data: [record]\n      });\n      if (res.data.Error == 0) {\n        message.success(\"操作成功\");\n      }\n      this.setState({\n        visible: false\n      });\n      this.getData();\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  //下载文件\n  onDown = url => {\n    if (!url) {\n      return Modal.warning({\n        title: \"您还未上传过资料\"\n      });\n    }\n    const urls = url.split(\";file;\");\n    for (let i = 0, len = urls.length; i < len; i++) {\n      window.open(urls[i]);\n    }\n  };\n  //上传文件\n  handleUploadFile = async fileInfo => {\n    const file = fileInfo.file;\n    const bucketname = \"realsun\";\n    const type = \"\";\n    const fileUrl = `http://ivf.realsun.me:9001/api/AliyunOss/PutOneImageObject?bucketname=${encodeURIComponent(\n      bucketname\n    )}&srctype=${encodeURIComponent(type)}`;\n    try {\n      await uploadFile(file, fileUrl).then(fileUrl => {\n        this.setState({\n          fileUrl\n        });\n      });\n    } catch (err) {\n      return message.error(err.message);\n    }\n  };\n  //提交表单\n  onSubmit = async values => {\n    let res;\n    let obj = {};\n    obj = {\n      fileName: values.fileName,\n      fileUrl: this.state.fileUrl,\n      remark:values.remark\n    };\n    try {\n      res = await http().addRecords({\n        resid: fileId,\n        data: [obj]\n      });\n      if (res.data.Error == 0) {\n        message.success(\"操作成功\");\n      }\n      this.setState({\n        visible: false\n      });\n      this.getData();\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  onAdd = () => {\n    this.setState({\n      visible: true\n    });\n  };\n  handleCancel = () => {\n    this.setState({\n      visible: false\n    });\n  };\n  getBase64 = (img, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => callback(reader.result));\n    reader.readAsDataURL(img);\n  };\n  handleChange = info => {\n    console.log(\"info\", info);\n    if (info.file.status === \"uploading\") {\n      return;\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      this.getBase64(info.file.originFileObj, imageUrl =>\n        this.setState({\n          imageUrl\n        })\n      );\n    }\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { spin, record, data, fileUrl } = this.state;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const uploadButton = (\n      <div>\n        <Icon type={this.state.loading ? \"loading\" : \"plus\"} />\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n\n    return (\n      <div className=\"editNotice\">\n        <Button type=\"primary\" className=\"editNotice-add\" onClick={this.onAdd}>\n          上传新资料\n        </Button>\n        <Spin spinning={spin}>\n          <Table\n            key=\"3\"\n            className=\"editNotice-table\"\n            columns={columns({\n              onDown: record => {\n                this.onDown(record.fileUrl);\n              },\n              onDelete: record => {\n                this.onDelete(record);\n              },\n              data: data\n            })}\n            scroll={{ x: 1000, y: \"calc(100vh - 260px)\" }}\n            dataSource={data}\n          />\n          <Modal\n            title=\"上传文件\"\n            visible={this.state.visible}\n            width={700}\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n            destroyOnClose={true}\n            destroyOnClose\n            footer={[\n              <Button key=\"back\" onClick={this.handleCancel}>\n                取消\n              </Button>,\n              <Button key=\"submit\" type=\"primary\" onClick={this.handleSubmit}>\n                提交\n              </Button>\n            ]}\n          >\n            <Form {...formItemLayout} className=\"editNotice-form\">\n              <Form.Item\n                className=\"editNotice-form-item\"\n                label={<span>资料名称&nbsp;</span>}\n              >\n                {getFieldDecorator(\"fileName\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入申请人\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>  \n               <Form.Item\n                className=\"editNotice-form-item\"\n                label={<span>备注&nbsp;</span>}\n              >\n                {getFieldDecorator(\"remark\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入备注\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                className=\"editNotice-form-item\"\n                label={<span>资料&nbsp;</span>}\n              >\n                {getFieldDecorator(\"file\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入申请人\",\n                      whitespace: true\n                    }\n                  ]\n                })(\n                  <div>\n                    <Upload\n                      name=\"file\"\n                      showUploadList={false}\n                      customRequest={this.handleUploadFile}\n                      onRemove={this.handleRemoveFile}\n                      onChange={this.handleChange}\n                    >\n                      <Button>\n                        <Icon type=\"upload\" /> 上传\n                      </Button>\n                    </Upload>\n                    <Input style={{ display: \"none\" }} value={fileUrl} />\n                  </div>\n                )}\n                <div>\n                  <a href={fileUrl}>{fileUrl}</a>\n                </div>\n              </Form.Item>\n            </Form>\n          </Modal>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(UploadFile);\n","import React, { Component } from \"react\";\nimport \"./MenuCommittee.less\";\nimport http from \"../../../utils/api\";\nimport { Tabs } from \"antd\";\nimport EditNotice from \"../EditNotice\";\nimport ApproveList from \"../ApproveList\";\nimport ApproveProjectList from \"../ApproveProjectList\";\nimport UploadFile from \"../UploadFile/UploadFile\";\nconst { TabPane } = Tabs;\n\nclass MenuCommittee extends Component {\n  render() {\n    return (\n      <Tabs\n        defaultActiveKey=\"1\"\n        tabBarStyle={{\n          height: \"70px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          paddingLeft: \"50px\"\n        }}\n      >\n        <TabPane tab=\"申请加入审批\" key=\"1\">\n          <ApproveList></ApproveList>\n        </TabPane>\n        <TabPane tab=\"项目研究审核\" key=\"2\">\n          <ApproveProjectList></ApproveProjectList>\n        </TabPane>\n        <TabPane tab=\"编辑发布通知\" key=\"3\">\n          <EditNotice></EditNotice>\n        </TabPane>\n        <TabPane tab=\"上传资料\" key=\"4\">\n          <UploadFile></UploadFile>\n        </TabPane>\n      </Tabs>\n    );\n  }\n}\n\nexport default MenuCommittee;\n","import MenuCommittee from './MenuCommittee';\nexport default MenuCommittee;","import React, { Component } from \"react\";\nimport \"./Home.less\";\nimport {\n  Menu,\n  Icon,\n  Button,\n  Tabs,\n  Upload,\n  Popover,\n  Alert,\n  Form,\n  Modal,\n  Input,\n  message\n} from \"antd\";\nimport logo from \"../../../assets/images/logo.png\";\nimport NoticeList from \"../NoticeList\";\nimport ApplyDataBase from \"../ApplyDataBase\";\nimport ApplyProject from \"../ApplyProject\";\nimport ActApply from \"../ActApply\";\nimport MenuDataBase from \"../MenuDataBase/MenuDataBase\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport MenuCommittee from \"../MenuCommittee\";\nimport http from \"../../../utils/api\";\nconst { TabPane } = Tabs;\nconst doctorInfoId = \"622204211916\";\nclass Home extends Component {\n  state = {\n    collapsed: false,\n    imageUrl: \"\",\n    userInfo: {},\n    currentItem: 1,\n    visible: false,\n    doctorInfo: {}\n  };\n  constructor(props) {\n    super(props);\n  }\n  toggleCollapsed = () => {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  };\n  getDoctorInfo = async(userInfo) => {\n    let res;\n    try {\n      res = await http().getTable({\n        resid: doctorInfoId,\n        cmswhere: `phoneNumber = ${userInfo.UserInfo.EMP_HANDPHONE}`\n      });\n      if (res.data.error === 0) {\n        localStorage.setItem(\"doctorInfo\",JSON.stringify(res.data.data[0]))\n        this.setState({\n          doctorInfo: res.data.data[0]\n        });\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n  }\n  componentDidMount = async () => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    const currentItem = JSON.parse(localStorage.getItem(\"currentItem\"));\n    if (currentItem) {\n      this.setState({\n        userInfo,\n        currentItem\n      });\n    } else {\n      this.setState({\n        userInfo\n      });\n    }\n    await this.getDoctorInfo(userInfo);\n  };\n  getBase64 = (img, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => callback(reader.result));\n    reader.readAsDataURL(img);\n  };\n  handleChange = info => {\n    if (info.file.status === \"uploading\") {\n      this.setState({ loading: true });\n      return;\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      this.getBase64(info.file.originFileObj, imageUrl =>\n        this.setState({\n          imageUrl,\n          loading: false\n        })\n      );\n    }\n  };\n  //修改个人信息\n  onEditInfo = async () => {\n    // const phoneNumber = this.state.userInfo.UserInfo.EMP_HANDPHONE;\n    // let res;\n    // try {\n    //   res = await http().getTable({\n    //     resid: doctorInfoId,\n    //     cmswhere: `phoneNumber = ${phoneNumber}`\n    //   });\n    //   if (res.data.error === 0) {\n    //     this.setState({\n    //       doctorInfo: res.data.data[0]\n    //     });\n    //   }\n    // } catch (error) {\n    //   message.error(error.message);\n    // }\n    this.setState({\n      visible: true\n    });\n  };\n  onSave = () => {\n    const { form } = this.props;\n    let res;\n    this.props.form.validateFieldsAndScroll(async (err, values) => {\n      if (err) {\n        return;\n      }\n      let data = [\n        {\n          occupationNumber: form.getFieldValue(\"postNumber\"), //执业证号码\n          hospital: form.getFieldValue(\"hospital\"), // 医院\n          doctor: form.getFieldValue(\"doctor\"),\n          post: form.getFieldValue(\"post\"),\n          REC_ID: this.state.doctorInfo.REC_ID\n        }\n      ];\n      try {\n        res = await http().modifyRecords({\n          resid: doctorInfoId,\n          data\n        });\n        if (res.data.Error === 0) {\n          message.success(\"修改成功\");\n          this.setState({\n          doctorInfo: res.data.data[0]\n          })\n        }\n      } catch (error) {\n        message.error(error.message);\n      }\n      this.setState({\n        visible: false\n      });\n    });\n  };\n  handleCancel = () => {\n    this.setState({\n      visible: false\n    });\n  };\n  //退出\n  logout = () => {\n    console.log(\"logout\", this.props);\n    localStorage.removeItem(\"userInfo\");\n    localStorage.removeItem(\"currentItem\");\n    this.props.history.replace({\n      pathname: \"/\"\n    });\n  };\n  //切换路由\n  onMenuDetail = name => {\n    if (name === \"menuCommittee\") {\n      localStorage.setItem(\"currentItem\", 2);\n      this.setState({\n        currentItem: 2\n      });\n    } else {\n      localStorage.setItem(\"currentItem\", 1);\n      this.setState({\n        currentItem: 1\n      });\n    }\n    this.props.history.push({\n      pathname: `/${name}`\n    });\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { doctorInfo } = this.state;\n    const uploadButton = (\n      <div>\n        <div className=\"ant-upload-text\">请上传照片</div>\n      </div>\n    );\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const content = (\n      <React.Fragment>\n        <div\n          style={{\n            margin: \"10px 0 \",\n            display: \"flex\",\n            flexDirection: \"column\"\n          }}\n        >\n          <Button\n            type=\"primary\"\n            icon=\"edit\"\n            size=\"small\"\n            onClick={this.onEditInfo}\n          >\n            修改信息\n          </Button>\n          <Button\n            type=\"primary\"\n            icon=\"logout\"\n            size=\"small\"\n            onClick={this.logout}\n            style={{ marginTop: \"10px\" }}\n          >\n            退出登录\n          </Button>\n        </div>\n      </React.Fragment>\n    );\n    const { imageUrl, userInfo, currentItem } = this.state;\n    return (\n      <div className=\"home\">\n        <Modal\n          title=\"修改个人信息\"\n          visible={this.state.visible}\n          width={600}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          destroyOnClose={true}\n          footer={[\n            <Button key=\"back\" onClick={this.handleCancel}>\n              取消\n            </Button>,\n            <Button\n              key=\"submit\"\n              type=\"primary\"\n              onClick={() => {\n                this.onSave();\n              }}\n            >\n              保存\n            </Button>\n          ]}\n        >\n          <Form {...formItemLayout} onSubmit={this.handleSubmit} className=\"home-modal\">\n            <Form.Item label=\"姓名\">\n              {getFieldDecorator(\"doctor\", {\n                rules: [{ required: true, message: \"请输入您的姓名!\" }],\n                initialValue: doctorInfo.doctor\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"姓名\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item label=\"医院\">\n              {getFieldDecorator(\"hospital\", {\n                rules: [{ required: true, message: \"请输入您所在的医院!\" }],\n                initialValue: doctorInfo.hospital\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"医院\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item label='职称'>\n              {getFieldDecorator(\"post\", {\n                rules: [{ required: true, message: \"请输入您的职称!\" }],\n                initialValue: doctorInfo.post\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"职称\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item label='执业证号码'>\n              {getFieldDecorator(\"postNumber\", {\n                rules: [{ required: true, message: \"请输入您的执业证号码!\" }],\n                initialValue: doctorInfo.occupationNumber\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"执业证号码\"\n                />\n              )}\n            </Form.Item>\n          </Form>\n        </Modal>\n        <div className=\"home-left\">\n          <Menu\n            selectedKeys={[`${currentItem}`]}\n            defaultOpenKeys={[\"sub1\"]}\n            mode=\"inline\"\n            theme=\"dark\"\n            style={{ height: \"100vh\" }}\n            inlineCollapsed={this.state.collapsed}\n          >\n            <div className=\"home-left-logo\">\n              <img className=\"home-left-logo-img\" src={logo}></img>\n            </div>\n            <Menu.Item\n              key=\"1\"\n              onClick={() => {\n                this.onMenuDetail(\"home\");\n              }}\n            >\n              <Icon type=\"pie-chart\" />\n              <span>CHASE-IBD数据库</span>\n            </Menu.Item>\n            <Menu.Item\n              key=\"2\"\n              onClick={() => {\n                this.onMenuDetail(\"menuCommittee\");\n              }}\n            >\n              <Icon type=\"desktop\" />\n              <span>数据库委员会</span>\n            </Menu.Item>\n          </Menu>\n        </div>\n        <div className=\"home-right\">\n          <div className=\"home-right-top\">\n            <div className=\"home-right-top-tabs\">\n              <Route path=\"/home\" component={MenuDataBase}></Route>\n              <Route path=\"/menuCommittee\" component={MenuCommittee}></Route>\n            </div>\n\n            <div className=\"home-right-top-user\">\n              {/* <Upload\n                name=\"avatar\"\n                listType=\"picture-card\"\n                className=\"avatar-uploader\"\n                showUploadList={false}\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                onChange={this.handleChange}\n              >\n                {imageUrl ? (\n                  <img src={imageUrl} alt=\"avatar\" style={{ width: \"100%\" }} />\n                ) : (\n                  uploadButton\n                )}\n              </Upload> */}\n              <Popover content={content} placement=\"bottom\">\n                <div>\n                  <Icon type=\"user\" style={{ fontSize: \"20px\" }} />\n                </div>\n                <div>{userInfo.Data}</div>\n              </Popover>\n            </div>\n          </div>\n          <div className=\"home-right-content\">\n            <div></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(Home);\n","import Home from './Home';\nexport default Home;","import React, { Component } from \"react\";\nimport \"./Register.less\";\nimport { Form, message, Icon, Input, Button, Checkbox, Spin } from \"antd\";\nimport http from \"../../../utils/api\";\n\nclass Register extends Component {\n  state = {\n    disabled: false,\n    counts: 60,\n    showSpin: false\n  };\n\n  componentDidMount = () => {};\n  onLogin = () => {\n    this.props.history.push({\n      pathname: \"/login\"\n    });\n  };\n\n  countDown = () => {\n    let counts = 60;\n    this.setState({\n      disabled: true\n    });\n    let countdown = setInterval(() => {\n      if (counts > 0) {\n        counts--;\n        this.setState({\n          counts\n        });\n      } else {\n        this.setState({\n          disabled: false\n        });\n        clearInterval(countdown);\n      }\n    }, 1000);\n  };\n  getVerCode = async () => {\n    const { form } = this.props;\n    let res;\n    if (form.getFieldValue(\"phone\")) {\n      this.countDown();\n      try {\n        res = await http().getVerCode({\n          telephone: form.getFieldValue(\"phone\")\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      message.info(\"请先输入手机号获取验证码\");\n    }\n  };\n  register = async () => {\n    http().clearCache();\n    const { form } = this.props;\n    let res;\n    this.props.form.validateFieldsAndScroll(async (err, values) => {\n      if (err) {\n        return;\n      }\n      let registerData = {\n        Handphone: form.getFieldValue(\"phone\"), // 手机号\n        userid: form.getFieldValue(\"postNumber\"), //执业证号码\n        // occuptionNumber: form.getFieldValue(\"postNumber\"), //执业证号码\n        validcode: form.getFieldValue(\"valid\"), // 验证码\n        // hospital: form.getFieldValue(\"hospital\"), // 医院\n        nickname: form.getFieldValue(\"doctor\"),\n        // office:form.office,\n        validresid: 616852937051\n        // unionid: this.unionid,\n        // openid: this.openid\n      };\n      let doctorData = {\n        phoneNumber: form.getFieldValue(\"phone\"), // 手机号\n        occupationNumber: form.getFieldValue(\"postNumber\"), //执业证号码\n        hospital: form.getFieldValue(\"hospital\"), // 医院\n        doctor: form.getFieldValue(\"doctor\"),\n        email:form.getFieldValue(\"email\"),\n        post: form.getFieldValue(\"post\") //职称\n      };\n      this.setState({\n        showSpin: true\n      });\n\n      try {\n        res = await http().register(registerData);\n        if (res.data.error == 0) {\n          message.success(\"注册成功\");\n          this.props.history.push({\n            pathname: \"/login\",\n            state: { doctorData }\n          });\n        } else {\n          message.error(res.data.message);\n        }\n      } catch (error) {\n        console.log(\"res\", error);\n        message.error(error.message);\n      }\n      this.setState({\n        showSpin: false\n      });\n    });\n  };\n  render() {\n    const { disabled, counts, showSpin } = this.state;\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div className=\"page\">\n        <div className=\"register-contain\">\n          <Spin spinning={showSpin}>\n            <Form onSubmit={this.handleSubmit} className=\"login-form-userName\">\n              <h1>注册</h1>\n              <Form.Item>\n                {getFieldDecorator(\"doctor\", {\n                  rules: [{ required: true, message: \"请输入您的姓名!\" }]\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"姓名\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"hospital\", {\n                  rules: [{ required: true, message: \"请输入您所在的医院!\" }]\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"医院\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"post\", {\n                  rules: [{ required: true, message: \"请输入您的职称!\" }]\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"职称\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"postNumber\", {\n                  rules: [{ required: true, message: \"请输入您的执业证号码!\" }]\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"执业证号码\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"email\", {\n                  rules: [\n                    {\n                      type: \"email\",\n                      required: true,\n                      message: \"请输入您的邮箱!\"\n                    }\n                  ]\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"邮箱\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"phone\", {\n                  rules: [{ required: true, message: \"请输入您的手机号!\" }]\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"phone\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"手机号\"\n                  />\n                )}\n              </Form.Item>\n\n              <Form.Item className=\"login-form-valid\">\n                {getFieldDecorator(\"valid\", {\n                  rules: [{ required: true, message: \"请输入你的验证码!\" }]\n                })(\n                  <Input\n                    className=\"login-form-valid-input\"\n                    prefix={\n                      <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"验证码 \"\n                  />\n                )}\n              </Form.Item>\n              {disabled ? (\n                <Button style={{ marginLeft: \"10px\" }} type=\"primary\" disabled>\n                  {counts}\n                </Button>\n              ) : (\n                <Button\n                  style={{ marginLeft: \"10px\" }}\n                  type=\"primary\"\n                  onClick={this.getVerCode}\n                >\n                  获取验证码\n                </Button>\n              )}\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n                onClick={this.register}\n                size=\"large\"\n              >\n                注册\n              </Button>\n              <div className=\"login-form-register\">\n                <a onClick={this.onLogin}>登录</a>\n              </div>\n            </Form>\n          </Spin>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(Register);\n","import Register from './Register';\nexport default Register;","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Button } from \"antd\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from './components/busniess/Login'\nimport Home from './components/busniess/Home'\nimport Register from './components/busniess/Register'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Home></Home> */}\n      <Router>\n        <Route exact path='/' component={Login}></Route>\n        <Route  path='/login' component={Login}></Route>\n        <Route  path='/register' component={Register}></Route>\n        <Route  path='/home' component={Home}></Route>\n        <Route  path='/menuCommittee' component={Home}></Route>\n        \n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}