{"version":3,"sources":["assets/images/logo.png","assets/images/applyProject1.jpg","assets/images/applyProject2.jpg","assets/images/applyDataBase.jpg","logo.svg","utils/api.js","components/busniess/Login/Login.js","components/busniess/Login/index.js","components/busniess/NoticeList/NoticeList.js","components/busniess/NoticeList/index.js","components/busniess/ApplyDataBase/ApplyDataBase.js","components/busniess/ApplyDataBase/index.js","components/busniess/ApplyDataBase/ShowImage/index.js","components/busniess/ApplyDataBase/ShowImage/ShowImage.js","components/busniess/ApplyProject/CommitCard/CommitCard.js","components/busniess/ApplyProject/CommitCard/index.js","components/busniess/ApplyProject/ApplyProject.js","components/busniess/ApplyProject/index.js","components/busniess/ActApply/ActApply.js","components/busniess/ActApply/index.js","components/busniess/ShowProject/ShowProject.js","components/busniess/ShowProject/index.js","components/busniess/DownFile/DownFile.js","components/busniess/DownFile/index.js","components/busniess/MenuDataBase/MenuDataBase.js","components/busniess/EditNotice/EditNotice.js","components/busniess/EditNotice/index.js","components/busniess/ApproveList/ApproveList.js","components/busniess/ApproveList/index.js","components/busniess/ApproveProjectList/ApproveProjectList.js","components/busniess/ApproveProjectList/index.js","components/busniess/UploadFile/UploadFile.js","components/busniess/MenuCommittee/MenuCommittee.js","components/busniess/MenuCommittee/index.js","components/busniess/Home/Home.js","components/busniess/Home/index.js","components/busniess/Register/Register.js","components/busniess/Register/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","http","setDefaultBaseURL","setDefaultHeaders","createApi","method","url","setDefaultOptions","withCredentials","doctorInfoId","Login","state","disabled","counts","showSpin","componentDidMount","login","e","a","form","props","loginData","mobileno","getFieldValue","validCode","loginMethod","useCookie","preventDefault","validateFieldsAndScroll","err","values","setState","res","data","OpResult","message","success","localStorage","setItem","JSON","stringify","history","location","saveDoctorData","push","pathname","error","ErrorMsg","this","doctorData","addRecords","resid","Error","countDown","countdown","setInterval","clearInterval","getVerCode","telephone","info","onRegister","callback","getFieldDecorator","className","spinning","onSubmit","handleSubmit","Item","rules","required","size","prefix","type","style","color","placeholder","onClick","htmlType","Component","create","Panel","noticeId","NoticeList","collapsed","imageUrl","userInfo","currentNotice","historyNotice","getTable","current","customPanelStyle","background","borderRadius","marginBottom","border","overflow","isSynch","title","description","content","publishTime","showIcon","image","PRESENTED_IMAGE_SIMPLE","length","bordered","defaultActiveKey","expandIcon","isActive","rotate","map","item","index","header","key","ApplyDataBase","applyList","page","record","loading","prop","icon","onBack","onApply","addText","showImage","isShowImage","pages","listPage","applyPage","checkPage","showImagePage","schedulePage","ShowImage","src","height","Meta","CommitCard","width","marginTop","avatar","active","name","suggest","writeTime","applyProjectId","suggestId","joinProjectId","Step","customDot","dot","status","ApplyProject","postilData","isEdit","doctorInfo","visible","getApplyData","parse","getItem","componentWillReceiveProps","nextProps","isUpdate","getTableNew","subresid","studyType","split","onSubmitRecord","isSubmit","modifyRecords","obj","study","toString","doctor","hospital","task","doctorId","post","taskPrincipal","inlandUnit","foreignUnit","studyReason","studyArea","studyTarget","studyDescription","studyLast","studySelected","studyAssess","studyCheck","staticMethod","standard","sure","committee","referenceData","phoneNumber","phone","email","REC_ID","onLookSchedule","progressDot","onCheck","onEdit","print","newContent","document","getElementById","innerHTML","oldContent","body","window","reload","formItemLayout","labelCol","wrapperCol","Fragment","applyProjectImage1","applyProjectImage2","id","textAlign","label","joinPerson","position","right","applyTime","itemLayout","dataSource","renderItem","actions","onConfirm","okText","cancelText","joinPersonID","href","REC_CRTTIME","whitespace","initialValue","ref","el","componentRef","applyDataBaseId","uploadFile","file","Promise","resolve","reject","fd","FormData","append","xhr","XMLHttpRequest","open","onload","response","imgUrl","send","ActApply","number","handleUploadFile","fileInfo","fileUrl","encodeURIComponent","then","teamPeople","teamPeople2","teamPeople3","CDPatientNumber","CDNumber","UCPatientNumber","UCNumber","doctorPhoto","getBase64","img","reader","FileReader","addEventListener","result","readAsDataURL","handleChange","originFileObj","xs","span","sm","uploadButton","options","value","applyDataBaseImage","Group","defaultValue","onChange","onChangeCheckbox","alt","approveStatus","valuePropName","listType","showUploadList","customRequest","onRemove","handleRemoveFile","showProjectId","ShowProject","TextArea","spin","getData","handleCancel","onSuggest","onjoin","onUpdate","submitSuggest","projectId","applyId","applyData","includes","isJoined","columns","dataIndex","render","text","scroll","x","y","React","fileId","onDown","DownFile","warning","urls","i","len","TabPane","MenuDataBase","tabBarStyle","display","alignItems","paddingLeft","tab","onPublish","isPublish","EditNotice","editVisible","save","publish","renderContent","renderListPage","renderAddPage","renderCheckPage","onAdd","onOk","handleOk","onCancel","destroyOnClose","footer","ApproveList","onPassOrReject","isPass","ApproveProjectList","currentSuggest","UserInfo","EMP_HANDPHONE","onAgreeOrReject","onDelete","UploadFile","removeRecords","fileName","remark","MenuCommittee","managerInfoId","Home","currentItem","isManager","managerInfo","toggleCollapsed","getManagerInfo","getDoctorInfo","cmswhere","onEditInfo","onSave","occupationNumber","emial","logout","removeItem","replace","onMenuDetail","margin","flexDirection","selectedKeys","defaultOpenKeys","mode","theme","inlineCollapsed","logo","path","component","placement","fontSize","Register","onLogin","register","registerData","Handphone","userid","validcode","nickname","validresid","marginLeft","App","exact","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.466e4e92.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.409d3d40.png\";","module.exports = __webpack_public_path__ + \"static/media/applyProject1.96855abe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/applyProject2.fad3ab87.jpg\";","module.exports = __webpack_public_path__ + \"static/media/applyDataBase.04e0b2a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import http from \"lz-request/lib/http\";\n// 设置默认的基地址\nhttp.setDefaultBaseURL(\"http://ivf.realsun.me:9001\");\n\n// 设置默认的请求头\nhttp.setDefaultHeaders({\n  \"Content-Type\": \"application/json\"\n});\n\n// 创建定制的获取提醒数量的 api，方法名为 'getReminderNum'\nhttp.createApi(\"getReminderNum\", {\n  method: \"get\", // 使用 get 方法\n  url: \"/api/Resource/RetrieveReminderNum\" // 请求地址\n});\n\n//默认options\nhttp.setDefaultOptions({\n  withCredentials: true\n});\n\n// http.setRequestInterceptors(\n//   function(config) {\n//     // 请求头加上 token\n//     let token;\n//     if ((token = localStorage.getItem(\"token\"))) {\n//       config.headers.token = token;\n//     }\n//     return config;\n//   },\n//   function(error) {\n//     return error;\n//   }\n// );\n\n// 响应拦截\n// http.setResponseInterceptors(\n//   response => {\n//     const res = response.data;\n//     if (\n//       (res &&\n//         (res.error === 0 ||\n//           res.error === \"0\" ||\n//           res.Error === 0 ||\n//           res.Error === \"0\" ||\n//           res.OpResult === \"Y\")) ||\n//       res === \"ok\"\n//     ) {\n//       return response;\n//     } else {\n//       throw new Error(res.ErrMsg || res.message || res.ErrorMsg);\n//     }\n//   },\n//   error => {\n//     if (error.response.status === 401) {\n//       // window.location.href = \"/login\";\n//     }\n//     return error;\n//   }\n// );\n\n/**\n * 通过手机号、openid、unionid 来获取验证码\n * 参数：{ telephone, unionid, openid }\n * 1. telephone：手机号\n * 2. unionid：unionid\n * 3. openid：openid\n */\nhttp.createApi(\"getVerCode\", {\n  method: \"get\",\n  // baseURL: 'https://finisar.realsun.me/',\n  url: \"api/SMS/SMS_SendValidCode\"\n});\n\n/**\n * 注册\n * 参数：{ telephone, unionid, openid, validCode, personid, method }\n * 1. telephone：手机号\n * 2. unionid：unionid\n * 3. openid: openid\n * 4. personid：身份证\n * 5. method：method\n * openid,telephone,unionid,validCode,workNum\n */\nhttp.createApi(\"register\", {\n  method: \"get\",\n  // baseURL: 'https://finisar.realsun.me/',\n  url: \"api/Account/Register\"\n});\n\n/**\n *登录\n */\nhttp.createApi(\"login\", {\n  method: \"post\",\n  url: \"/api/Account/Login\"\n});\n\n/**\n *获取表格数据 |新接口\n */\nhttp.createApi(\"getTableNew\", {\n  method: \"get\",\n  url: \"/api/200/table/Retrieve\"\n});\n\n/**\n *上传图片\n */\nhttp.createApi(\"putOneImageObject\", {\n  method: \"post\",\n  url: \"/api/AliyunOss/PutFileImageObject\"\n});\n\nexport default http;\n","import React, { Component } from \"react\";\nimport \"./Login.less\";\nimport http from \"../../../utils/api\";\nimport { Form, message, Icon, Input, Button, Spin } from \"antd\";\nconst doctorInfoId = \"622204211916\";\nclass Login extends Component {\n  state = {\n    disabled: false,\n    counts: 60,\n    showSpin: false\n  };\n\n  componentDidMount = () => {};\n\n  login = async e => {\n    const { form } = this.props;\n    const loginData = {\n      mobileno: form.getFieldValue(\"phone\"), // 手机号\n      validCode: form.getFieldValue(\"valid\"), // 验证码\n      loginMethod: \"mobile\",\n      useCookie: true\n    };\n    e.preventDefault();\n    let res;\n    this.props.form.validateFieldsAndScroll(async (err, values) => {\n      if (err) {\n        return;\n      }\n      this.setState({\n        showSpin: true\n      });\n      try {\n        res = await http().login(loginData);\n        if (res.data.OpResult == \"Y\") {\n          message.success(\"登录成功\");\n          localStorage.setItem(\"userInfo\", JSON.stringify(res.data));\n          this.props.history.location.state && (await this.saveDoctorData());\n          this.setState({\n            showSpin: false\n          });\n          this.props.history.push({\n            pathname: \"/home\"\n          });\n        } else {\n          message.error(res.data.ErrorMsg);\n        }\n      } catch (error) {\n        message.error(error.message);\n      }\n    });\n  };\n\n  componentWillUnmount() {\n    // 卸载异步操作设置状态\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n  saveDoctorData = async () => {\n    let doctorData = this.props.history.location.state.doctorData;\n    let res;\n    try {\n      res = await http().addRecords({\n        resid: doctorInfoId,\n        data: [doctorData]\n      });\n      if (res.data.Error === 0) {\n        // message.success(\"添加成功\");\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  countDown = () => {\n    let counts = 60;\n    this.setState({\n      disabled: true\n    });\n    let countdown = setInterval(() => {\n      if (counts > 0) {\n        counts--;\n        this.setState({\n          counts\n        });\n      } else {\n        this.setState({\n          disabled: false\n        });\n        clearInterval(countdown);\n      }\n    }, 1000);\n  };\n  getVerCode = async () => {\n    const { form } = this.props;\n    let res;\n    if (form.getFieldValue(\"phone\")) {\n      this.countDown();\n      try {\n        res = await http().getVerCode({\n          telephone: form.getFieldValue(\"phone\")\n        });\n      } catch (error) {\n      }\n    } else {\n      message.info(\"请先输入手机号获取验证码\");\n    }\n  };\n  onRegister = () => {\n    this.props.history.push({\n      pathname: \"/register\"\n    });\n  };\n  render() {\n    const { disabled, counts, showSpin } = this.state;\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div className=\"page\">\n        <div className=\"login-contain\">\n          <Spin spinning={showSpin}>\n            <Form onSubmit={this.handleSubmit} className=\"login-form-userName\">\n              <h1>登录</h1>\n              <Form.Item>\n                {getFieldDecorator(\"phone\", {\n                  rules: [{ required: true, message: \"请输入你的手机号!\" }]\n                })(\n                  <Input\n                    size=\"large\"\n                    prefix={\n                      <Icon type=\"phone\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"手机号\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item className=\"login-form-valid\">\n                {getFieldDecorator(\"valid\", {\n                  rules: [{ required: true, message: \"请输入你的验证码!\" }]\n                })(\n                  <Input\n                    size=\"large\"\n                    className=\"login-form-valid-input\"\n                    prefix={\n                      <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"验证码 \"\n                  />\n                )}\n              </Form.Item>\n              {disabled ? (\n                <Button\n                  className=\"login-form-valid-countdown\"\n                  size=\"large\"\n                  type=\"primary\"\n                  disabled\n                >\n                  {counts}\n                </Button>\n              ) : (\n                <Button\n                  className=\"login-form-valid-button\"\n                  size=\"large\"\n                  type=\"primary\"\n                  onClick={this.getVerCode}\n                >\n                  获取验证码\n                </Button>\n              )}\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n                onClick={this.login}\n                size=\"large\"\n              >\n                登录\n              </Button>\n              <div className=\"login-form-register\">\n                <a onClick={this.onRegister}>注册</a>\n              </div>\n            </Form>\n          </Spin>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(Login);\n","import Login from './Login';\nexport default Login;","import React, { Component } from \"react\";\nimport \"./NoticeList.less\";\nimport { Collapse, Icon, Alert, Empty, Button, Spin } from \"antd\";\nimport http from \"../../../utils/api\";\nconst { Panel } = Collapse;\nconst noticeId = \"620317621824\";\n\nclass NoticeList extends Component {\n  state = {\n    collapsed: false,\n    imageUrl: \"\",\n    userInfo: {},\n    currentNotice: {},\n    historyNotice: [],\n    showSpin: false\n  };\n  componentDidMount = async () => {\n    let res;\n    // this.setState({\n    //   showSpin: true\n    // });\n    try {\n      res = await http().getTable({\n        resid: noticeId\n      });\n      const [current, ...history] = res.data.data;\n      this.setState({\n        currentNotice: current,\n        historyNotice: history\n      });\n    } catch (error) {}\n    // this.setState({\n    //   showSpin: false\n    // });\n  };\n  render() {\n    const customPanelStyle = {\n      background: \"#f7f7f7\",\n      borderRadius: 4,\n      marginBottom: 24,\n      border: 0,\n      overflow: \"hidden\"\n    };\n    const { currentNotice, historyNotice, showSpin } = this.state;\n    return (\n      <div className=\"noticeList\">\n        <Spin spinning={showSpin}>\n          <h2>最新通知</h2>\n          {currentNotice ? (\n            currentNotice.isSynch !== 'Y'?\n            <Alert\n              message={currentNotice && currentNotice.title}\n              description={\n                <div>\n                  <span>{currentNotice && currentNotice.content}</span>\n                  <span className=\"noticeList-time\">\n                    {currentNotice && currentNotice.publishTime}\n                  </span>\n                </div>\n              }\n              type=\"info\"\n              showIcon\n            />:\n            <Alert\n            message= { `您发起的项目（${currentNotice && currentNotice.title}） 有人申请加入`}\n            description={\n              <div>\n                <span> {`加入人：${currentNotice && currentNotice.content}`}</span>\n                <span className=\"noticeList-time\">\n                  {currentNotice && currentNotice.publishTime}\n                </span>\n              </div>\n            }\n            type=\"info\"\n            showIcon\n          />\n          ) : (\n            <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n          )}\n          <div className=\"noticeList-line\"> </div>\n          <h3>历史通知</h3>\n          {historyNotice.length > 0 ? (\n            <Collapse\n              bordered={false}\n              className=\"noticeList-Collapse\"\n              defaultActiveKey={[\"0\"]}\n              expandIcon={({ isActive }) => (\n                <Icon type=\"caret-right\" rotate={isActive ? 90 : 0} />\n              )}\n            >\n              {historyNotice.map((item, index) => {\n                return (\n                  <Panel\n                    header={\n                      <div>\n                        <span>{item.isSynch !== 'Y' ?item.title:`您发起的项目（${item.title}） 有人申请加入` }</span>\n                        <span className=\"noticeList-time\">\n                          {item.publishTime}\n                        </span>\n                      </div>\n                    }\n                    key={index}\n                    style={customPanelStyle}\n                  >\n                    <p>{item.isSynch !== 'Y'?item.content:`加入人：${item.content}`}</p>\n                  </Panel>\n                );\n              })}\n            </Collapse>\n          ) : (\n            <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n          )}\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default NoticeList;\n","import NoticeList from './NoticeList';\nexport default NoticeList;","import React, { Component } from \"react\";\nimport \"./ApplyDataBase.less\";\nimport {\n  Collapse,\n  Icon,\n  Input,\n  Upload,\n  Button,\n  Form,\n  Checkbox,\n  List,\n  Skeleton,\n  Avatar,\n  message,\n  Popconfirm,\n  Spin\n} from \"antd\";\n\nclass ApplyDataBase extends Component {\n  state = {\n    imageUrl: \"\",\n    applyList: [],\n    page: \"listPage\",\n    record: {},\n    loading: false\n  };\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount = async () => {\n  };\n  render() {\n    const prop = this.props;\n    const {  loading  } = this.state;\n   \n\n    return (\n      <div className=\"applyDataBase\">\n        <div className=\"applyDataBase-btns\">\n          <Button\n            icon={\n              prop.page === \"applyPage\" ||\n              prop.page === \"checkPage\" ||\n              prop.page === \"schedulePage\"\n                ? \"rollback\"\n                : \"plus\"\n            }\n            type=\"primary\"\n            onClick={\n              prop.page === \"applyPage\" ||\n              prop.page === \"checkPage\" ||\n              prop.page === \"schedulePage\"\n                ? this.props.onBack\n                : this.props.onApply\n            }\n            className=\"applyDataBase-btn\"\n          >\n            {prop.page === \"applyPage\" ||\n            prop.page === \"checkPage\" ||\n            prop.page === \"schedulePage\"\n              ? \"返回\"\n              : prop.addText || \"申请\"}\n          </Button>\n          <a\n            className=\"applyDataBase-photoBtn\"\n            type=\"link\"\n            onClick={\n              prop.page === \"showImagePage\"\n                ? this.props.onBack\n                : this.props.showImage\n            }\n          >\n            {prop.isShowImage\n              ? \"\"\n              : prop.page === \"showImagePage\"\n              ? \"返回\"\n              : prop.page === \"listPage\"\n              ? \"申请流程图\"\n              : \"\"}\n          </a>\n        </div>\n        <Spin spinning={loading}>\n          <div className=\"applyDataBase-content\">\n            {(() => {\n              switch (prop.page) {\n                case \"listPage\":\n                  return prop.pages.listPage;\n                case \"applyPage\":\n                  return prop.pages.applyPage;\n                case \"checkPage\":\n                  return prop.pages.checkPage;\n                case \"showImagePage\":\n                  return prop.pages.showImagePage;\n                case \"schedulePage\":\n                  return prop.pages.schedulePage;\n              }\n            })()}\n          </div>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(ApplyDataBase);\n","import ApplyDataBase from './ApplyDataBase';\nexport default ApplyDataBase;","import { ShowImage } from './ShowImage';\nexport default ShowImage;","import React, { Component } from \"react\";\nimport \"./ShowImage.less\";\nexport const ShowImage = props => {\n  return (\n    <div className=\"showImage\">\n      <img\n        src={props.image}\n        style={{ border: \"1px solid #ccc\", height: \"600px\" }}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Card, Icon, Skeleton, Avatar } from \"antd\";\nconst { Meta } = Card;\nconst CommitCard = (record) => {\n  return (\n    <div>\n      <Card style={{ width: 300, marginTop: 16 }}>\n        <Skeleton loading={record.data?false:true}  avatar active>\n          <Meta\n            avatar={<Icon type=\"user\"></Icon>}\n            title={<div>批注人：{record.data.name}</div>}\n            description={\n            record.data.suggest ? <div>\n                <div>时间：{record.data.writeTime}</div>\n                <div>建议：{record.data.suggest}</div>\n              </div>\n              :<div>暂无建议</div>\n            }\n          />\n        </Skeleton>\n      </Card>\n    </div>\n  );\n};\nexport default CommitCard;\n","import CommitCard from './CommitCard';\nexport default CommitCard;","import React, { Component } from \"react\";\nimport \"./ApplyProject.less\";\nimport ReactToPrint from \"react-to-print\";\nimport ApplyDataBase from \"../ApplyDataBase\";\nimport {\n  Collapse,\n  Icon,\n  Input,\n  Button,\n  Form,\n  Checkbox,\n  List,\n  Skeleton,\n  Avatar,\n  message,\n  Popconfirm,\n  Spin,\n  Card,\n  Steps,\n  Popover,\n  Tag,\n  Modal,\n  Alert\n} from \"antd\";\nimport http from \"../../../utils/api\";\nimport ShowImage from \"../ApplyDataBase/ShowImage\";\nimport CommitCard from \"./CommitCard\";\nimport applyProjectImage1 from \"../../../assets/images/applyProject1.jpg\";\nimport applyProjectImage2 from \"../../../assets/images/applyProject2.jpg\";\nimport TextArea from \"antd/lib/input/TextArea\";\nconst applyProjectId = \"620475440053\";\nconst suggestId = \"621432069832\";\nconst joinProjectId = \"622302753373\";\nconst { Meta } = Card;\nconst { Step } = Steps;\n\nconst customDot = (dot, { status, index }) => dot;\n\nclass ApplyProject extends Component {\n  state = {\n    imageUrl: \"\",\n    applyList: [],\n    page: \"listPage\",\n    record: {},\n    postilData: [],\n    loading: false,\n    isEdit: false,\n    doctorInfo: null,\n    visible: true\n  };\n  componentDidMount = async () => {\n    await this.getApplyData();\n    const doctorInfo = JSON.parse(localStorage.getItem(\"doctorInfo\"));\n    this.setState({\n      doctorInfo\n    });\n  };\n  componentWillReceiveProps = (nextProps) => {\n    if(nextProps.isUpdate !== this.props.isUpdate){\n     this.getApplyData();\n    }\n  }\n  \n  //获取申请记录\n  getApplyData = async () => {\n    let res;\n    this.setState({\n      loading: true\n    });\n    try {\n      res = await http().getTableNew({\n        resid: applyProjectId,\n        subresid: `${suggestId},${joinProjectId}`\n      });\n      if (res.data.Error == 0) {\n        let data = [];\n        res.data &&\n          res.data.data &&\n          res.data.data.map(item => {\n            let studyType = item.studyType && item.studyType.split(\",\");\n            item.studyType = studyType;\n            data.push(item);\n          });\n        this.setState({\n          applyList: data\n        });\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n    this.setState({\n      loading: false\n    });\n  };\n\n  handleSubmit = (e, type) => {\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.onSubmit(values, type);\n      }\n    });\n  };\n  //提交列表中的一条记录\n  onSubmitRecord = async record => {\n    let res;\n    record.isSubmit = \"Y\";\n    try {\n      res = await http().modifyRecords({\n        resid: applyProjectId,\n        data: [record]\n      });\n      if (res.data.Error == 0) {\n        message.success(\"提交成功\");\n        await this.getApplyData();\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  //提交表单\n  onSubmit = async (values, type) => {\n    let res;\n    let obj = {};\n    let study = values.study && values.study.toString();\n    const { isEdit, record, doctorInfo } = this.state;\n    // const doctorInfo = JSON.parse(localStorage.getItem(\"doctorInfo\"));\n    // record.joinPersonID = doctorInfo.doctorId;\n    if (type === 1) {\n      obj = {\n        doctor: values.doctor,\n        hospital: values.hospital,\n        task: values.task,\n        doctorId: doctorInfo.doctorId,\n        // phoneNumber: values.phone,\n        post: values.post,\n        // email: values.email,\n        taskPrincipal: values.taskPrincipal,\n        studyType: values.studyType,\n        inlandUnit: values.inlandUnit,\n        foreignUnit: values.foreignUnit,\n        studyReason: values.studyReason,\n        studyArea: values.studyArea,\n        studyTarget: values.studyTarget,\n        studyDescription: values.studyDescription,\n        studyLast: values.studyLast,\n        studySelected: values.studySelected,\n        studyAssess: values.studyAssess,\n        studyCheck: values.studyCheck,\n        staticMethod: values.staticMethod,\n        standard: values.standard,\n        sure: values.sure,\n        committee: values.committee,\n        referenceData: values.referenceData\n      };\n    } else {\n      obj = {\n        doctor: values.doctor,\n        hospital: values.hospital,\n        task: values.task,\n        doctorId: doctorInfo.doctorId,\n        phoneNumber: values.phone,\n        post: values.post,\n        email: values.email,\n        taskPrincipal: values.taskPrincipal,\n        studyType: values.studyType,\n        inlandUnit: values.inlandUnit,\n        foreignUnit: values.foreignUnit,\n        studyReason: values.studyReason,\n        studyArea: values.studyArea,\n        studyTarget: values.studyTarget,\n        studyDescription: values.studyDescription,\n        studyLast: values.studyLast,\n        studySelected: values.studySelected,\n        studyAssess: values.studyAssess,\n        studyCheck: values.studyCheck,\n        staticMethod: values.staticMethod,\n        standard: values.standard,\n        sure: values.sure,\n        committee: values.committee,\n        referenceData: values.referenceData,\n        isSubmit: \"Y\"\n      };\n    }\n    if (isEdit === true) {\n      obj.REC_ID = record.REC_ID;\n      try {\n        res = await http().modifyRecords({\n          resid: applyProjectId,\n          data: [obj]\n        });\n        if (res.data.Error == 0) {\n          message.success(\"申请成功！\");\n        }\n        this.setState({\n          page: \"listPage\",\n          isEdit: false\n        });\n        await this.getApplyData();\n      } catch (error) {\n        message.error(error.message);\n      }\n    } else {\n      try {\n        res = await http().addRecords({\n          resid: applyProjectId,\n          data: [obj]\n        });\n        if (res.data.Error == 0) {\n          message.success(\"申请成功！\");\n        }\n        this.setState({\n          page: \"listPage\",\n          isEdit: false\n        });\n        await this.getApplyData();\n      } catch (error) {\n        message.error(error.message);\n      }\n    }\n  };\n  onApply = () => {\n    this.setState({\n      page: \"applyPage\"\n    });\n  };\n  onLookSchedule = record => {\n    const modal = Modal.success({\n      title: \"进度查询\",\n      width: 650,\n      content: (\n        <div style={{ marginTop: \"20px\" }}>\n          <div style={{ marginBottom: \"20px\" }}>课题名称：{record.task}</div>\n          <Steps\n            current={\n              record.status === \"已完成\"\n                ? 3\n                : record.status === \"进行中\"\n                ? 2\n                : record.status === \"草稿\"\n                ? 0\n                : 1\n            }\n            progressDot={customDot}\n          >\n            <Step title=\"提交报告\" />\n            <Step title=\"审核中\" />\n            <Step title=\"进行中\" />\n            <Step title=\"已完成\" />\n          </Steps>\n          ,\n        </div>\n      )\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  onCheck = item => {\n    this.setState({\n      page: \"checkPage\",\n      record: item\n    });\n  };\n  onEdit = item => {\n    this.setState({\n      page: \"applyPage\",\n      record: item,\n      isEdit: true\n    });\n  };\n  showImage = () => {\n    this.setState({\n      page: \"showImagePage\"\n    });\n  };\n  // //打印\n  print = () => {\n    this.setState({\n      visible: false\n    });\n    var printBox = document.getElementById(\"applyProjectForm\");\n    //拿到打印的区域的html内容\n    var newContent = printBox.innerHTML;\n    //将旧的页面储存起来，当打印完成后返给给页面。\n    var oldContent = document.body.innerHTML;\n    //赋值给body\n    document.body.innerHTML = newContent;\n    //执行window.print打印功能\n    window.print();\n    // 重新加载页面，以刷新数据。以防打印完之后，页面不能操作的问题\n    window.location.reload();\n    document.body.innerHTML = oldContent;\n    return false;\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const {\n      imageUrl,\n      applyList,\n      loading,\n      page,\n      record,\n      postilData,\n      isEdit,\n      visible\n    } = this.state;\n    const formItemLayout = {\n      labelCol: {\n        // xs: { span: 24 },\n        // sm: { span: 8 }\n      },\n      wrapperCol: {\n        // xs: { span: 24 },\n        // sm: { span: 16 }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const options = [\n      { label: \"单中心研究\", value: \"单中心研究\" },\n      { label: \"多中心研究\", value: \"多中心研究\" },\n      { label: \"第三方研究\", value: \"第三方研究\" },\n      { label: \"所有研究\", value: \"所有研究\" }\n    ];\n    const pages = {\n      showImagePage: (\n        <React.Fragment>\n          <ShowImage image={applyProjectImage1}></ShowImage>\n          <ShowImage image={applyProjectImage2}></ShowImage>\n        </React.Fragment>\n      ),\n      checkPage: (\n        <React.Fragment>\n          <Form\n            {...formItemLayout}\n            // onSubmit={this.handleSubmit}\n            className=\"applyProject-form\"\n            id=\"applyProjectForm\"\n          >\n            <div className=\"applyProject-form-contain\">\n              <div className=\"applyProject-form-contain-info\">\n                <h1 style={{ textAlign: \"center\" }}>CHASE-IBD专项课题申请表</h1>\n                <h3 style={{ textAlign: \"center\" }}>基本信息</h3>\n                <Form.Item label={<span>课题名称&nbsp;</span>}>\n                  <span>{record.task}</span>\n                </Form.Item>\n                <Form.Item label={<span>课题负责人&nbsp;</span>}>\n                  <span>{record.taskPrincipal}</span>\n                </Form.Item>\n                <Form.Item label={<span>申请人&nbsp;</span>}>\n                  <span>{record.doctor}</span>\n                </Form.Item>\n                <Form.Item label={<span>所属单位&nbsp;</span>}>\n                  <span>{record.hospital}</span>\n                </Form.Item>\n                <Form.Item label={<span>职称&nbsp;</span>}>\n                  <span>{record.post}</span>\n                </Form.Item>\n                <Form.Item label={<span>联系电话&nbsp;</span>}>\n                  <span>{record.phoneNumber}</span>\n                </Form.Item>\n                <Form.Item label={<span>E-mail&nbsp;</span>}>\n                  <span>{record.email}</span>\n                </Form.Item>\n                <Form.Item label={<span>拟定国内协作单位&nbsp;</span>}>\n                  <span>{record.inlandUnit}</span>\n                </Form.Item>\n                <Form.Item label={<span>拟定国际协作单位&nbsp;</span>}>\n                  <span>{record.foreignUnit}</span>\n                </Form.Item>\n                {/* <Form.Item label={<span>IBD治疗团队名单&nbsp;</span>}>\n            <span>{record.teamPeople}</span>&nbsp;&nbsp;\n            <span>{record.teamPeople2}</span>&nbsp;&nbsp;\n            <span>{record.teamPeople3}</span>&nbsp;&nbsp;\n          </Form.Item> */}\n                {/* <Form.Item label={<span>选择参与数据库研究&nbsp;</span>}>\n            <Checkbox.Group\n              options={options}\n              defaultValue={record.studyType}\n              onChange={this.onChangeCheckbox}\n            />\n          </Form.Item> */}\n                <h3 style={{ textAlign: \"center\" }}>研究内容</h3>\n                <Form.Item label={<span>研究的理由&nbsp;</span>}>\n                  <span>{record.studyReason}</span>\n                </Form.Item>\n                <Form.Item label={<span>研究区域&nbsp;</span>}>\n                  <span>{record.studyArea}</span>\n                </Form.Item>\n                <Form.Item\n                  label={\n                    <span>研究目标（主要目标，次要目标，附加目标）&nbsp;</span>\n                  }\n                >\n                  <span>{record.studyTarget}</span>\n                </Form.Item>\n                <Form.Item\n                  label={\n                    <span>研究终点（主要终点，次要终点，附加终点）&nbsp;</span>\n                  }\n                >\n                  <span>{record.studyLast}</span>\n                </Form.Item>\n                <Form.Item\n                  label={\n                    <span>\n                      研究设计与描述（研究描述，研究周期，研究设计，剂量和终点的合理性）&nbsp;\n                    </span>\n                  }\n                >\n                  <span>{record.studyDescription}</span>\n                </Form.Item>\n                <Form.Item\n                  label={\n                    <span>\n                      项目入选（入选标准，排除标准包括药物，治疗和饮食）&nbsp;\n                    </span>\n                  }\n                >\n                  <span>{record.studySelected}</span>\n                </Form.Item>\n                <Form.Item\n                  label={\n                    <span>研究终点（主要终点，次要终点，附加终点）&nbsp;</span>\n                  }\n                >\n                  <span>{record.studyLast}</span>\n                </Form.Item>\n                <Form.Item\n                  label={\n                    <span>评估（疗效评估，安全评估，其他评估）&nbsp;</span>\n                  }\n                >\n                  <span>{record.studyAssess}</span>\n                </Form.Item>\n                <Form.Item\n                  label={<span>实验室检查：检查具体指标参数&nbsp;</span>}\n                >\n                  <span>{record.studyCheck}</span>\n                </Form.Item>\n                <Form.Item\n                  label={\n                    <span>评估（疗效评估，安全评估，其他评估）&nbsp;</span>\n                  }\n                >\n                  <span>{record.studyAssess}</span>\n                </Form.Item>\n                <Form.Item\n                  label={\n                    <span>\n                      统计方法（统计分析计划，人口统计学和其他基线特征分析，疗效分析，药代动力学分析，药效学分析，安全分析）&nbsp;\n                    </span>\n                  }\n                >\n                  <span>{record.staticMethod}</span>\n                </Form.Item>\n\n                <Form.Item label={<span>中期分析和提前终止的标准&nbsp;</span>}>\n                  <span>{record.standard}</span>\n                </Form.Item>\n                <Form.Item label={<span>样本量的确定&nbsp;</span>}>\n                  <span>{record.sure}</span>\n                </Form.Item>\n                <Form.Item label={<span>伦理委员会&nbsp;</span>}>\n                  <span>{record.committee}</span>\n                </Form.Item>\n                <Form.Item label={<span>参考资料&nbsp;</span>}>\n                  <span>{record.referenceData}</span>\n                </Form.Item>\n              </div>\n              {visible && record[\"621432069832\"] ? (\n                <div className=\"applyProject-form-contain-notice\">\n                  <span>申请加入人</span>\n                  {record[\"622302753373\"] &&\n                  record[\"622302753373\"].length > 0 ? (\n                    record[\"622302753373\"].map(item => {\n                      return (\n                        <div className=\"applyProject-form-contain-notice-alerts\">\n                          <Alert\n                            message={\n                              <div>\n                                <b>{item.joinPerson}申请加入</b>\n                                <b\n                                  style={{ position: \"absolute\", right: \"8px\" }}\n                                >\n                                  {item.applyTime}\n                                </b>\n                              </div>\n                            }\n                            type=\"info\"\n                            className=\"applyProject-form-contain-notice-alert\"\n                          />\n                        </div>\n                      );\n                    })\n                  ) : (\n                    <div\n                      className=\"applyProject-form-contain-notice-alerts\"\n                      style={{ textAlign: \"center\" }}\n                    >\n                      暂无人加入\n                    </div>\n                  )}\n                  <span>来自数委会的批注</span>\n                  {record[\"621432069832\"] &&\n                    record[\"621432069832\"].map(item => {\n                      return (\n                        <CommitCard key={item.REC_ID} data={item}></CommitCard>\n                      );\n                    })}\n                </div>\n              ) : null}\n            </div>\n          </Form>\n          <Button\n            icon=\"download\"\n            type=\"primary\"\n            className=\"applyProject-form-print\"\n            onClick={this.print}\n          >\n            打印\n          </Button>\n        </React.Fragment>\n      ),\n      listPage: (\n        <React.Fragment>\n          <List\n            className=\"applyProject-content-list\"\n            itemLayout=\"horizontal\"\n            dataSource={applyList}\n            renderItem={item => (\n              <List.Item\n                actions={[\n                  <a\n                    key=\"list-loadmore-edit\"\n                    onClick={() => {\n                      this.onCheck(item);\n                    }}\n                  >\n                    查看\n                  </a>,\n                  item.isSubmit === \"Y\" ? (\n                    <a\n                      key=\"list-loadmore-edit\"\n                      onClick={() => {\n                        this.onLookSchedule(item);\n                      }}\n                    >\n                      进度查询\n                    </a>\n                  ) : (\n                    <Popconfirm\n                      title=\"你确定要提交吗\"\n                      onConfirm={() => {\n                        this.onSubmitRecord(item);\n                      }}\n                      okText=\"Yes\"\n                      cancelText=\"No\"\n                    >\n                      <a key=\"list-loadmore-edit\">提交</a>\n                    </Popconfirm>\n                  ),\n                  !item.joinPersonID ? (\n                    <a\n                      key=\"list-loadmore-edit\"\n                      onClick={() => {\n                        this.onEdit(item);\n                      }}\n                    >\n                      编辑\n                    </a>\n                  ) : null\n                ]}\n              >\n                {/* <Skeleton avatar title={false} loading={item.doctor} active> */}\n                <List.Item.Meta\n                  // avatar={\n                  //   <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n                  // }\n                  title={\n                    <React.Fragment>\n                      <a className=\"applyProject-content-list-word\" href=\"#\">\n                        课题名称:{item.task}\n                      </a>\n                      <a className=\"applyProject-content-list-word\" href=\"#\">\n                        所属单位:{item.hospital}\n                      </a>\n                    </React.Fragment>\n                  }\n                  description={\n                    <React.Fragment>\n                      <Tag\n                        color={\n                          item.status === \"通过\"\n                            ? \"geekblue\"\n                            : item.status === \"拒绝\"\n                            ? \"red\"\n                            : \"green\"\n                        }\n                      >\n                        {item.status}\n                      </Tag>{\" \"}\n                    </React.Fragment>\n                  }\n                />\n\n                <div>申请日期：{item.REC_CRTTIME}</div>\n                {/* </Skeleton> */}\n              </List.Item>\n            )}\n          />\n        </React.Fragment>\n      ),\n      schedulePage: (\n        <div>\n          <h1 style={{ textAlign: \"center\" }}>{record.task}</h1>\n          <Steps\n            current={\n              record.status === \"通过\" || record.status === \"拒绝\" ? 2 : 1\n            }\n            progressDot={customDot}\n          >\n            <Step title=\"提交报告\" />\n            <Step title=\"审核\" />\n            <Step title=\"完成\" />\n          </Steps>\n          ,\n        </div>\n      ),\n      applyPage: (\n        <Form\n          {...formItemLayout}\n          // onSubmit={this.handleSubmit}\n          className=\"applyProject-form\"\n        >\n          <div className=\"applyProject-form-contain\">\n            <div className=\"applyProject-form-contain-info\">\n              <h1 style={{ textAlign: \"center\" }}>CHASE-IBD专项课题申请表</h1>\n              <h3 style={{ textAlign: \"center\" }}>基本信息</h3>\n\n              <Form.Item label={<span>\b课题名称&nbsp;</span>}>\n                {getFieldDecorator(\"task\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入\b课题名称\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.task : null\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label={<span>课题负责人&nbsp;</span>}>\n                {getFieldDecorator(\"taskPrincipal\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入\b课题负责人\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.taskPrincipal : null\n                })(<Input />)}\n              </Form.Item>\n              {/* <Form.Item label={<span>申请人&nbsp;</span>}>\n                {getFieldDecorator(\"doctor\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入申请人\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.doctor : null\n                })(<Input />)}\n              </Form.Item> */}\n              {/* <Form.Item label={<span>所属单位&nbsp;</span>}>\n                {getFieldDecorator(\"hospital\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入所属单位\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.hospital : null\n                })(<Input />)}\n              </Form.Item> */}\n              <Form.Item label={<span>职称&nbsp;</span>}>\n                {getFieldDecorator(\"post\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入您的职称！\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.post : null\n                })(<Input />)}\n              </Form.Item>\n              {/* <Form.Item label={<span>联系电话&nbsp;</span>}>\n                {getFieldDecorator(\"phone\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入您的联系电话!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.phoneNumber : null\n                })(<Input />)}\n              </Form.Item> */}\n              {/* <Form.Item label={<span>E-mail&nbsp;</span>}>\n                {getFieldDecorator(\"email\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入您的邮箱!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.email : null\n                })(<Input />)}\n              </Form.Item> */}\n              <Form.Item label={<span>拟定国内协作单位&nbsp;</span>}>\n                {getFieldDecorator(\"inlandUnit\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入拟定国内协作单位!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.inlandUnit : null\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label={<span>拟定国际协作单位&nbsp;</span>}>\n                {getFieldDecorator(\"foreignUnit\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入拟定国际协作单位!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.foreignUnit : null\n                })(<Input />)}\n              </Form.Item>\n              <h3 style={{ textAlign: \"center\" }}>研究内容</h3>\n              <Form.Item label={<span>研究的理由&nbsp;</span>}>\n                {getFieldDecorator(\"studyReason\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入研究的理由!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.studyReason : null\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item label={<span>研究区域&nbsp;</span>}>\n                {getFieldDecorator(\"studyArea\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入研究区域!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.studyArea : null\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>研究目标（主要目标，次要目标，附加目标）&nbsp;</span>\n                }\n              >\n                {getFieldDecorator(\"studyTarget\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入研究目标!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.studyTarget : null\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>研究终点（主要终点，次要终点，附加终点）&nbsp;</span>\n                }\n              >\n                {getFieldDecorator(\"studyLast\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入研究终点!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.studyLast : null\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    研究设计与描述（研究描述，研究周期，研究设计，剂量和终点的合理性）&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator(\"studyDescription\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入研究设计与描述!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.studyDescription : null\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    项目入选（入选标准，排除标准包括药物，治疗和饮食）&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator(\"studySelected\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入项目入选!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.studySelected : null\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item\n                label={<span>评估（疗效评估，安全评估，其他评估）&nbsp;</span>}\n              >\n                {getFieldDecorator(\"studyAssess\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入评估!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.studyAssess : null\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item\n                label={<span>实验室检查：检查具体指标参数&nbsp;</span>}\n              >\n                {getFieldDecorator(\"studyCheck\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入实验室检查!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.studyCheck : null\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    统计方法（统计分析计划，人口统计学和其他基线特征分析，疗效分析，药代动力学分析，药效学分析，安全分析）&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator(\"staticMethod\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入统计方法!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.staticMethod : null\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item label={<span>中期分析和提前终止的标准&nbsp;</span>}>\n                {getFieldDecorator(\"standard\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入中期分析和提前终止的标准!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.standard : null\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item label={<span>样本量的确定&nbsp;</span>}>\n                {getFieldDecorator(\"sure\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入样本量的确定!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.sure : null\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item label={<span>伦理委员会&nbsp;</span>}>\n                {getFieldDecorator(\"committee\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入伦理委员会!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.committee : null\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item label={<span>参考资料&nbsp;</span>}>\n                {getFieldDecorator(\"referenceData\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入参考资料!\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: isEdit ? record.referenceData : null\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n            </div>\n          </div>\n          <Button\n            className=\"applyProject-form-save\"\n            htmlType=\"submit\"\n            onClick={() => {\n              this.handleSubmit(this, 1);\n            }}\n          >\n            保存\n          </Button>\n          <Button\n            type=\"primary\"\n            className=\"applyProject-form-submit\"\n            htmlType=\"submit\"\n            onClick={() => {\n              this.handleSubmit(this, 2);\n            }}\n          >\n            提交\n          </Button>\n        </Form>\n      )\n    };\n\n    return (\n      <React.Fragment>\n        {/* <ReactToPrint\n          trigger={() => (\n            <Button\n              icon=\"download\"\n              type=\"primary\"\n              className=\"applyDataBase-form-print\"\n            >\n              打印\n            </Button>\n          )}\n          content={() => this.componentRef}\n        /> */}\n        <Spin spinning={loading}>\n          <ApplyDataBase\n            pages={pages}\n            page={this.state.page}\n            onBack={this.onBack}\n            showImage={this.showImage}\n            onApply={this.onApply}\n            ref={el => (this.componentRef = el)}\n          ></ApplyDataBase>\n        </Spin>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Form.create()(ApplyProject);\n","import ApplyProject from './ApplyProject';\nexport default ApplyProject;","import React, { Component } from \"react\";\nimport \"./ActApply.less\";\nimport ApplyDataBase from \"../ApplyDataBase\";\nimport {\n  Collapse,\n  Icon,\n  Input,\n  Upload,\n  Button,\n  Form,\n  Checkbox,\n  List,\n  Skeleton,\n  Avatar,\n  message,\n  Popconfirm,\n  Spin,\n  Tag,\n  Modal,\n  Steps,\n  Popover\n} from \"antd\";\nimport http from \"../../../utils/api\";\nimport ShowImage from \"../ApplyDataBase/ShowImage\";\nimport ReactToPrint from \"react-to-print\";\nimport applyDataBaseImage from \"../../../assets/images/applyDataBase.jpg\";\nconst applyDataBaseId = \"620384838453\";\nconst { Step } = Steps;\n\nconst customDot = (dot, { status, index }) => (\n  dot\n);\n\nconst uploadFile = (file, url) => {\n  return new Promise((resolve, reject) => {\n    let fd = new FormData();\n    fd.append(\"file\", file, file.name);\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", url);\n    xhr.onload = () => {\n      const data = JSON.parse(xhr.response);\n      if (xhr.status === 200 && (data.error === 0 || data.error === \"0\")) {\n        const imgUrl = data.data;\n        resolve(imgUrl);\n      } else {\n        reject(data);\n      }\n    };\n    xhr.send(fd);\n  });\n};\n//研究项目申请\nclass ActApply extends Component {\n  state = {\n    imageUrl: \"\",\n    applyList: [],\n    page: \"listPage\",\n    record: {},\n    loading: false,\n    isEdit: false\n  };\n  componentDidMount = async() => {\n   await this.getApplyData();\n  }\n\n  //获取申请记录\n  getApplyData = async () => {\n    let res;\n    this.setState({\n      loading: true\n    });\n    try {\n      res = await http().getTable({\n        resid: applyDataBaseId\n      });\n      let data = [];\n      res.data &&\n        res.data.data &&\n        res.data.data.map((item,index) => {\n          let studyType = item.studyType && item.studyType.split(\",\");\n          item.number = index + 1;\n          item.studyType = studyType;\n          data.push(item);\n        });\n      if (res.data.error == 0) {\n        this.setState({\n          applyList: data\n        });\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n    this.setState({\n      loading: false\n    });\n  };\n\n  handleSubmit = (e, type) => {\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.onSubmit(values, type);\n      }\n    });\n  };\n  //提交列表中的一条记录\n  onSubmitRecord = async record => {\n    let res;\n    record.isSubmit = \"Y\";\n    try {\n      res = await http().modifyRecords({\n        resid: applyDataBaseId,\n        data: [record]\n      });\n      if (res.data.Error == 0) {\n        message.success(\"提交成功\");\n        await this.getApplyData();\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n\n  //上传文件\n  handleUploadFile = async fileInfo => {\n    const file = fileInfo.file;\n    const bucketname = \"realsun\";\n    const type = \"\";\n    const fileUrl = `http://ivf.realsun.me:9001/api/AliyunOss/PutOneImageObject?bucketname=${encodeURIComponent(\n      bucketname\n    )}&srctype=${encodeURIComponent(type)}`;\n    try {\n      await uploadFile(file, fileUrl).then(imageUrl => {\n        this.setState({\n          imageUrl\n        });\n      });\n    } catch (err) {\n      return message.error(err.message);\n    }\n  };\n  //提交表单\n  onSubmit = async (values, type) => {\n    let res;\n    let obj = {};\n    let study = values.study && values.study.toString();\n    const { isEdit, record } = this.state;\n    if (type === 1) {\n      obj = {\n        doctor: values.doctor,\n        hospital: values.hospital,\n        post: values.post,\n        phoneNumber: values.phone,\n        email: values.email,\n        teamPeople: values.teamPeople,\n        teamPeople2: values.teamPeople2,\n        teamPeople3: values.teamPeople3,\n        studyType: values.study,\n        CDPatientNumber: values.CDNumber,\n        UCPatientNumber: values.UCNumber,\n        doctorPhoto: this.state.imageUrl,\n        studyType: study\n      };\n    } else {\n      obj = {\n        doctor: values.doctor,\n        hospital: values.hospital,\n        post: values.post,\n        phoneNumber: values.phone,\n        email: values.email,\n        teamPeople: values.teamPeople,\n        teamPeople2: values.teamPeople2,\n        teamPeople3: values.teamPeople3,\n        studyType: values.study,\n        CDPatientNumber: values.CDNumber,\n        UCPatientNumber: values.UCNumber,\n        doctorPhoto: this.state.imageUrl,\n        studyType: study,\n        isSubmit: \"Y\"\n      };\n    }\n    if (isEdit) {\n      obj.REC_ID = record.REC_ID;\n      try {\n        res = await http().modifyRecords({\n          resid: applyDataBaseId,\n          data: [obj]\n        });\n        if (res.data.Error == 0) {\n          message.success(\"申请成功！\");\n        }\n        this.setState({\n          page: \"listPage\",\n          isEdit:false\n        });\n        this.getApplyData();\n      } catch (error) {\n        message.error(error.message);\n      }\n    } else {\n      try {\n        res = await http().addRecords({\n          resid: applyDataBaseId,\n          data: [obj]\n        });\n        if (res.data.Error == 0) {\n          message.success(\"申请成功！\");\n        }\n        this.setState({\n          page: \"listPage\",\n          isEdit:false\n        });\n        this.getApplyData();\n      } catch (error) {\n        message.error(error.message);\n      }\n    }\n  };\n  print = () => {\n    var printBox = document.getElementById(\"applyDataBaseForm\");\n    //拿到打印的区域的html内容\n    var newContent = printBox.innerHTML;\n    //将旧的页面储存起来，当打印完成后返给给页面。\n    var oldContent = document.body.innerHTML;\n    //赋值给body\n    document.body.innerHTML = newContent;\n    //执行window.print打印功能\n    window.print();\n    // 重新加载页面，以刷新数据。以防打印完之后，页面不能操作的问题\n    window.location.reload();\n    document.body.innerHTML = oldContent;\n    return false;\n  };\n  getBase64 = (img, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => callback(reader.result));\n    reader.readAsDataURL(img);\n  };\n  handleChange = info => {\n    if (info.file.status === \"uploading\") {\n      return;\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      this.getBase64(info.file.originFileObj, imageUrl =>\n        this.setState({\n          imageUrl\n        })\n      );\n    }\n  };\n\n  onApply = () => {\n    this.setState({\n      page: \"applyPage\"\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  onCheck = record => {\n    this.setState({\n      page: \"checkPage\",\n      record\n    });\n  };\n  onEdit = record => {\n    this.setState({\n      page: \"applyPage\",\n      record,\n      isEdit: true\n    });\n  };\n  showImage = () => {\n    this.setState({\n      page: \"showImagePage\"\n    });\n  };\n\n  //查看进度\n  onLookSchedule = record => {\n    const modal = Modal.success({\n      title: \"进度查询\",\n      width: 500,\n      content: (\n        <div style={{ marginTop: \"20px\" }}>\n          <Steps\n            current={\n              record.status === \"通过\"  ? 2 : 1\n            }\n            progressDot={customDot}\n          >\n          <Step title=\"提交报告\" />\n          <Step title=\"审核中\" />\n          <Step title=\"已完成\" />\n          </Steps>\n          ,\n        </div>\n      )\n    });\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { imageUrl, applyList, loading, page, record,isEdit } = this.state;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const uploadButton = (\n      <div>\n        <Icon type={this.state.loading ? \"loading\" : \"plus\"} />\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n    const options = [\n      { label: \"单中心研究\", value: \"单中心研究\" },\n      { label: \"多中心研究\", value: \"多中心研究\" },\n      { label: \"第三方研究\", value: \"第三方研究\" },\n      { label: \"所有研究\", value: \"所有研究\" }\n    ];\n    const pages = {\n      showImagePage: <ShowImage image={applyDataBaseImage}></ShowImage>,\n      checkPage: (\n        <React.Fragment>\n          <Form\n            {...formItemLayout}\n            // onSubmit={this.handleSubmit}\n            className=\"applyDataBase-form\"\n            id=\"applyDataBaseForm\"\n          >\n            <h1 style={{ textAlign: \"center\" }}>\n              参与CHASE-IBD数据库建设申请表\n            </h1>\n            <h3 style={{ textAlign: \"center\" }}>申请医疗单位</h3>\n            <Form.Item label={<span>申请人&nbsp;</span>}>\n              <span>{record.doctor}</span>\n            </Form.Item>\n            <Form.Item label={<span>所属单位&nbsp;</span>}>\n              <span>{record.hospital}</span>\n            </Form.Item>\n            <Form.Item label={<span>职称&nbsp;</span>}>\n              <span>{record.post}</span>\n            </Form.Item>\n            <Form.Item label={<span>联系电话&nbsp;</span>}>\n              <span>{record.phoneNumber}</span>\n            </Form.Item>\n            <Form.Item label={<span>E-mail&nbsp;</span>}>\n              <span>{record.email}</span>\n            </Form.Item>\n            <Form.Item label={<span>IBD治疗团队名单&nbsp;</span>}>\n              <span>{record.teamPeople}</span>&nbsp;&nbsp;\n              <span>{record.teamPeople2}</span>&nbsp;&nbsp;\n              <span>{record.teamPeople3}</span>&nbsp;&nbsp;\n            </Form.Item>\n            <Form.Item label={<span>选择参与数据库研究&nbsp;</span>}>\n              <Checkbox.Group\n                options={options}\n                defaultValue={record.studyType}\n                onChange={this.onChangeCheckbox}\n              />\n            </Form.Item>\n            <h3 style={{ textAlign: \"center\" }}>贵院目前患者数量</h3>\n\n            <Form.Item label={<span>CD患者数量&nbsp;</span>}>\n              <span>{record.CDPatientNumber}</span>\n            </Form.Item>\n            <Form.Item label={<span>UC患者数量&nbsp;</span>}>\n              <span>{record.UCPatientNumber}</span>\n            </Form.Item>\n            <Form.Item label={<span>医师执照&nbsp;</span>}>\n              <img\n                src={record.doctorPhoto}\n                alt=\"avatar\"\n                style={{ width: \"200px\", height: \"200px\" }}\n              />\n            </Form.Item>\n          </Form>\n\n          <Button\n            icon=\"download\"\n            type=\"primary\"\n            className=\"applyDataBase-form-print\"\n            onClick={this.print}\n          >\n            打印\n          </Button>\n        </React.Fragment>\n      ),\n      listPage: (\n        <List\n          className=\"applyDataBase-content-list\"\n          itemLayout=\"horizontal\"\n          dataSource={applyList}\n          renderItem={item => (\n            <List.Item\n              actions={[\n                <a\n                  key=\"list-loadmore-edit\"\n                  onClick={() => {\n                    this.onCheck(item);\n                  }}\n                >\n                  查看\n                </a>,\n                item.isSubmit === \"Y\" ? (\n                  <a\n                    key=\"list-loadmore-edit\"\n                    onClick={() => {\n                      this.onLookSchedule(item);\n                    }}\n                  >\n                    进度查询\n                  </a>\n                ) : (\n                  <Popconfirm\n                    title=\"你确定要提交吗\"\n                    onConfirm={() => {\n                      this.onSubmitRecord(item);\n                    }}\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                  >\n                    <a key=\"list-loadmore-edit\">提交</a>\n                  </Popconfirm>\n                ),\n                <a\n                  key=\"list-loadmore-edit\"\n                  onClick={() => {\n                    this.onEdit(item);\n                  }}\n                >\n                  编辑\n                </a>\n              ]}\n            >\n              {/* <Skeleton avatar title={false} loading={item.doctor} active> */}\n              <List.Item.Meta\n                // avatar={\n                //   <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n                // }\n                title={\n                  <React.Fragment>\n                    <a className=\"applyDataBase-content-list-word\" href=\"#\">\n                      申请人:{item.doctor}\n                    </a>\n                    <a className=\"applyDataBase-content-list-word\" href=\"#\">\n                      所属单位:{item.hospital}\n                    </a>\n                  </React.Fragment>\n                }\n                description={\n                  <Tag\n                    color={\n                      item.approveStatus === \"通过\"\n                        ? \"geekblue\"\n                        : item.approveStatus === \"拒绝\"\n                        ? \"red\"\n                        : \"green\"\n                    }\n                  >\n                    {item.approveStatus}\n                  </Tag>\n                }\n              />\n              <div>申请日期：{item.REC_CRTTIME}</div>\n              {/* </Skeleton> */}\n            </List.Item>\n          )}\n        />\n      ),\n      applyPage: (\n        <Form\n          {...formItemLayout}\n          // onSubmit={this.handleSubmit}\n          className=\"applyDataBase-form\"\n        >\n          <h1 style={{ textAlign: \"center\" }}>参与CHASE-IBD数据库建设申请表</h1>\n          <h3 style={{ textAlign: \"center\" }}>申请医疗单位</h3>\n          <Form.Item label={<span>申请人&nbsp;</span>}>\n            {getFieldDecorator(\"doctor\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入申请人\",\n                  whitespace: true\n                }\n              ],\n              initialValue: isEdit?record.doctor:null\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>所属单位&nbsp;</span>}>\n            {getFieldDecorator(\"hospital\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入所属单位\",\n                  whitespace: true\n                }\n              ],\n              initialValue: isEdit?record.hospital:null\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>职称&nbsp;</span>}>\n            {getFieldDecorator(\"post\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入您的职称！\",\n                  whitespace: true\n                }\n              ],\n              initialValue:isEdit? record.post:null\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>联系电话&nbsp;</span>}>\n            {getFieldDecorator(\"phone\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入您的联系电话!\",\n                  whitespace: true\n                }\n              ],\n              initialValue: isEdit?record.phoneNumber:null\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>E-mail&nbsp;</span>}>\n            {getFieldDecorator(\"email\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入您的邮箱!\",\n                  whitespace: true\n                }\n              ],\n              initialValue: isEdit?record.email:null\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>IBD治疗团队名单&nbsp;</span>}>\n            {getFieldDecorator(\"teamPeople\", {\n              initialValue: isEdit?record.teamPeople:null\n            })(<Input />)}\n            {getFieldDecorator(\"teamPeople2\", {\n              initialValue: isEdit?record.teamPeople2:null\n            })(<Input />)}\n            {getFieldDecorator(\"teamPeople3\", {\n              initialValue:isEdit? record.teamPeople3:null\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>选择参与数据库研究&nbsp;</span>}>\n            {getFieldDecorator(\"study\", {\n              rules: [],\n              valuePropName: \"checked\",\n              initialValue: isEdit?record.study:null\n            })(\n              <Checkbox.Group\n                options={options}\n                onChange={this.onChangeCheckbox}\n              />\n            )}\n          </Form.Item>\n          <h3 style={{ textAlign: \"center\" }}>贵院目前患者数量</h3>\n\n          <Form.Item label={<span>CD患者数量&nbsp;</span>}>\n            {getFieldDecorator(\"CDNumber\", {\n              // rules: [\n              //   {\n              //     required: true,\n              //     message: \"请输入贵院的CD患者数量!\",\n              //     whitespace: true\n              //   }\n              // ],\n              initialValue: isEdit?record.CDPatientNumber:null\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>UC患者数量&nbsp;</span>}>\n            {getFieldDecorator(\"UCNumber\", {\n              // rules: [\n              //   {\n              //     required: true,\n              //     message: \"请输入贵院的UC患者数量!\",\n              //     whitespace: true\n              //   }\n              // ],\n              initialValue: isEdit?record.UCPatientNumber:null\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>医师执照：&nbsp;</span>}>\n            {getFieldDecorator(\"doctorPhoto\", {\n              initialValue: isEdit?record.doctorPhoto:null\n            })(\n              <Upload\n                name=\"avatar\"\n                listType=\"picture-card\"\n                className=\"avatar-uploader\"\n                showUploadList={false}\n                customRequest={this.handleUploadFile}\n                // fileList={fileList}\n                onRemove={this.handleRemoveFile}\n                onChange={this.handleChange}\n              >\n                {imageUrl ? (\n                  <img src={imageUrl} alt=\"avatar\" style={{ width: \"100%\" }} />\n                ) : (\n                  uploadButton\n                )}\n              </Upload>\n            )}\n          </Form.Item>\n          <Button\n            className=\"applyDataBase-form-save\"\n            htmlType=\"submit\"\n            onClick={() => {\n              this.handleSubmit(this, 1);\n            }}\n          >\n            保存\n          </Button>\n          <Button\n            type=\"primary\"\n            className=\"applyDataBase-form-submit\"\n            htmlType=\"submit\"\n            onClick={() => {\n              this.handleSubmit(this, 2);\n            }}\n          >\n            提交\n          </Button>\n        </Form>\n      )\n    };\n\n    return (\n      <Spin spinning={loading}>\n      <ApplyDataBase\n        pages={pages}\n        page={this.state.page}\n        onBack={this.onBack}\n        showImage={this.showImage}\n        onApply={this.onApply}\n        ref={el => (this.componentRef = el)}\n      ></ApplyDataBase></Spin>\n    );\n  }\n}\n\nexport default Form.create()(ActApply);\n","import ActApply from './ActApply';\nexport default ActApply;","import React, { Component } from \"react\";\nimport {\n  Modal,\n  Tag,\n  Button,\n  Table,\n  message,\n  Spin,\n  Form,\n  Input,\n  Divider\n} from \"antd\";\nimport \"./ShowProject.less\";\nimport http from \"../../../utils/api\";\nimport CommitCard from \"../ApplyProject/CommitCard\";\nconst showProjectId = \"622207867138\";\nconst applyProjectId = \"620475440053\";\nconst suggestId = \"621432069832\";\nconst { TextArea } = Input;\n\nclass ShowProject extends React.Component {\n  state = {\n    data: [{}],\n    page: \"listPage\",\n    spin: false,\n    record: {},\n    visible: false\n  };\n  componentDidMount = async () => {\n    await this.getData();\n  };\n  componentWillUnmount() {\n    // 卸载异步操作设置状态\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n  onCheck = record => {\n    this.setState({\n      page: \"checkPage\",\n      record\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  handleCancel = () => {\n    this.setState({\n      visible: false\n    });\n  };\n  onSuggest = () => {\n    this.setState({\n      visible: true\n    });\n  };\n  onjoin = async record => {\n    const doctorInfo = JSON.parse(localStorage.getItem(\"doctorInfo\"));\n    record.joinPersonID = doctorInfo.doctorId;\n    record.number = \"\";\n    let res;\n    try {\n      res = await http().addRecords({\n        resid: applyProjectId,\n        data: [record]\n      });\n      if (res.data.Error == 0) {\n        message.success(\"提交成功\");\n      }\n      await this.getData();\n      this.props.onUpdate();\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  submitSuggest = async e => {\n    const { record } = this.state;\n    this.props.form.validateFieldsAndScroll(async (err, values) => {\n      if (err) {\n        return;\n      }\n      let res;\n      let data = [\n        {\n          suggest: values.suggest,\n          projectId: record.REC_ID\n        }\n      ];\n      try {\n        res = await http().addRecords({\n          resid: suggestId,\n          data\n        });\n        if (res.data.Error === 0) {\n          message.success(\"添加成功\");\n        }\n      } catch (error) {\n        message.error(error.message);\n      }\n      this.setState({\n        visible: false\n      });\n    });\n  };\n  getApplyData = async () => {\n    let res;\n    try {\n      res = await http().getTable({\n        resid: applyProjectId\n      });\n      if (res.data.error === 0) {\n        let data = [];\n        //筛选出 申请加入的记录。\n        res.data.data.map(item => {\n          if (item.joinPersonID) {\n            data.push(item.applyId);\n          }\n        });\n        return data;\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  getData = async () => {\n    const doctorInfo = JSON.parse(localStorage.getItem(\"doctorInfo\"));\n    this.setState({\n      spin: true\n    });\n    let res;\n    try {\n      res = await http().getTable({\n        resid: showProjectId\n      });\n      if (res.data.error === 0) {\n        let applyData = await this.getApplyData();\n        let data = [];\n        res.data.data.map((item,index) => {\n          //如果 没有申请加入记录或者 这条记录是自己创建的，就标记 isJoined为true\n          if (\n            applyData.includes(item.applyId) ||\n            item.doctorId == doctorInfo.doctorId\n          ) {\n            item.isJoined = true;\n            item.number = index+1;\n            data.push(item);\n          } else {\n            item.number = index+1;\n            data.push(item);\n          }\n        });\n        this.setState({\n          data\n        });\n      }\n    } catch (error) {}\n\n    this.setState({\n      spin: false\n    });\n  };\n\n  render() {\n    const { data, spin, page, record } = this.state;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const columns = [\n      {\n        title: \"序号\",\n        dataIndex: \"number\",\n        key: \"number\",\n        width: 80\n      },\n      {\n        title: \"申请时间\",\n        dataIndex: \"applyTime\",\n        key: \"applyTime\",\n        width: 150\n      },\n      {\n        title: \"课题名称\",\n        dataIndex: \"task\",\n        key: \"hospital\",\n        width: 150\n      },\n      {\n        title: \"申请人\",\n        dataIndex: \"doctor\",\n        key: \"doctor\",\n        width: 150\n      },\n      {\n        title: \"审批状态\",\n        dataIndex: \"status\",\n        key: \"status\",\n        width: 150,\n        render: data => {\n          return (\n            <Tag\n              color={\n                data === \"进行中\"\n                  ? \"blue\"\n                  : data === \"已完成\"\n                  ? \"geekblue\"\n                  : \"green\"\n              }\n            >\n              {data}\n            </Tag>\n          );\n        }\n      },\n      {\n        title: \"操作\",\n        dataIndex: \"action\",\n        key: \"action\",\n        width: 150,\n        render: (text, record) => {\n          return (\n            <span>\n              <a\n                onClick={() => {\n                  this.onCheck(record);\n                }}\n              >\n                查看\n              </a>\n              <Divider type=\"vertical\" />\n              {!record.isJoined ? (\n                <a\n                  onClick={() => {\n                    this.onjoin(record);\n                  }}\n                >\n                  申请加入\n                </a>\n              ) : null}\n            </span>\n          );\n        }\n      }\n    ];\n    const checkPage = (\n      <React.Fragment>\n        {page === \"checkPage\" ? (\n          <Button\n            icon={\"rollback\"}\n            type=\"primary\"\n            onClick={this.onBack}\n            className=\"approveList-btn\"\n          >\n            返回\n          </Button>\n        ) : null}\n        <Form\n          {...formItemLayout}\n          className=\"showProject-form\"\n          id=\"applyProjectForm\"\n        >\n          <div className=\"applyProject-form-contain\">\n            <div className=\"applyProject-form-contain-info\">\n              <h1 style={{ textAlign: \"center\" }}>CHASE-IBD专项课题申请表</h1>\n              <h3 style={{ textAlign: \"center\" }}>基本信息</h3>\n              <Form.Item label={<span>课题名称&nbsp;</span>}>\n                <span>{record.task}</span>\n              </Form.Item>\n              <Form.Item label={<span>课题负责人&nbsp;</span>}>\n                <span>{record.taskPrincipal}</span>\n              </Form.Item>\n              <Form.Item label={<span>申请人&nbsp;</span>}>\n                <span>{record.doctor}</span>\n              </Form.Item>\n              <Form.Item label={<span>所属单位&nbsp;</span>}>\n                <span>{record.hospital}</span>\n              </Form.Item>\n              <Form.Item label={<span>职称&nbsp;</span>}>\n                <span>{record.post}</span>\n              </Form.Item>\n              <Form.Item label={<span>联系电话&nbsp;</span>}>\n                <span>{record.phoneNumber}</span>\n              </Form.Item>\n              <Form.Item label={<span>E-mail&nbsp;</span>}>\n                <span>{record.email}</span>\n              </Form.Item>\n              <Form.Item label={<span>拟定国内协作单位&nbsp;</span>}>\n                <span>{record.inlandUnit}</span>\n              </Form.Item>\n              <Form.Item label={<span>拟定国际协作单位&nbsp;</span>}>\n                <span>{record.foreignUnit}</span>\n              </Form.Item>\n              {/* <Form.Item label={<span>IBD治疗团队名单&nbsp;</span>}>\n          <span>{record.teamPeople}</span>&nbsp;&nbsp;\n          <span>{record.teamPeople2}</span>&nbsp;&nbsp;\n          <span>{record.teamPeople3}</span>&nbsp;&nbsp;\n        </Form.Item> */}\n              {/* <Form.Item label={<span>选择参与数据库研究&nbsp;</span>}>\n          <Checkbox.Group\n            options={options}\n            defaultValue={record.studyType}\n            onChange={this.onChangeCheckbox}\n          />\n        </Form.Item> */}\n              <h3 style={{ textAlign: \"center\" }}>研究内容</h3>\n              <Form.Item label={<span>研究的理由&nbsp;</span>}>\n                <span>{record.studyReason}</span>\n              </Form.Item>\n              <Form.Item label={<span>研究区域&nbsp;</span>}>\n                <span>{record.studyArea}</span>\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>研究目标（主要目标，次要目标，附加目标）&nbsp;</span>\n                }\n              >\n                <span>{record.studyTarget}</span>\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>研究终点（主要终点，次要终点，附加终点）&nbsp;</span>\n                }\n              >\n                <span>{record.studyLast}</span>\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    研究设计与描述（研究描述，研究周期，研究设计，剂量和终点的合理性）&nbsp;\n                  </span>\n                }\n              >\n                <span>{record.studyDescription}</span>\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    项目入选（入选标准，排除标准包括药物，治疗和饮食）&nbsp;\n                  </span>\n                }\n              >\n                <span>{record.studySelected}</span>\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>研究终点（主要终点，次要终点，附加终点）&nbsp;</span>\n                }\n              >\n                <span>{record.studyLast}</span>\n              </Form.Item>\n              <Form.Item\n                label={<span>评估（疗效评估，安全评估，其他评估）&nbsp;</span>}\n              >\n                <span>{record.studyAssess}</span>\n              </Form.Item>\n              <Form.Item\n                label={<span>实验室检查：检查具体指标参数&nbsp;</span>}\n              >\n                <span>{record.studyCheck}</span>\n              </Form.Item>\n              <Form.Item\n                label={<span>评估（疗效评估，安全评估，其他评估）&nbsp;</span>}\n              >\n                <span>{record.studyAssess}</span>\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    统计方法（统计分析计划，人口统计学和其他基线特征分析，疗效分析，药代动力学分析，药效学分析，安全分析）&nbsp;\n                  </span>\n                }\n              >\n                <span>{record.staticMethod}</span>\n              </Form.Item>\n              <Form.Item label={<span>中期分析和提前终止的标准&nbsp;</span>}>\n                <span>{record.standard}</span>\n              </Form.Item>\n              <Form.Item label={<span>样本量的确定&nbsp;</span>}>\n                <span>{record.sure}</span>\n              </Form.Item>\n              <Form.Item label={<span>伦理委员会&nbsp;</span>}>\n                <span>{record.committee}</span>\n              </Form.Item>\n              <Form.Item label={<span>参考资料&nbsp;</span>}>\n                <span>{record.referenceData}</span>\n              </Form.Item>\n            </div>\n            {record[\"621432069832\"] ? (\n              <div className=\"applyProject-form-contain-notice\">\n                <span>来自数委会的批注</span>\n                {record[\"621432069832\"] &&\n                  record[\"621432069832\"].map(item => {\n                    return (\n                      <CommitCard key={item.REC_ID} data={item}></CommitCard>\n                    );\n                  })}\n              </div>\n            ) : null}\n          </div>\n        </Form>\n      </React.Fragment>\n    );\n    return (\n      <div className=\"approveProjectList\">\n        {page === \"listPage\" ? (\n          <Spin spinning={spin}>\n            <Table\n              key=\"2\"\n              className=\"approveProjectList-table\"\n              columns={columns}\n              dataSource={data}\n              scroll={{ x: 1000, y: \"calc(100vh - 220px)\" }}\n            />\n          </Spin>\n        ) : (\n          checkPage\n        )}\n      </div>\n    );\n  }\n}\nexport default Form.create()(ShowProject);\n","import ShowProject from  './ShowProject';\nexport default ShowProject;","import React, { Component } from \"react\";\nimport \"./DownFile.less\";\nimport {\n  Collapse,\n  Icon,\n  Input,\n  Upload,\n  Button,\n  Form,\n  message,\n  Spin,\n  Modal,\n  Table\n} from \"antd\";\nimport http from \"../../../utils/api\";\n\nconst fileId = \"621892190597\";\nconst { TextArea } = Input;\nconst columns = props => {\n  const { onDown } = props;\n  return [\n    {\n      title: \"序号\",\n      dataIndex: \"number\",\n      key: \"number\",\n      width: 100\n    },\n    {\n      title: \"文件名\",\n      dataIndex: \"fileName\",\n      key: \"fileName\",\n      width: 250\n    },\n    {\n      title: \"备注\",\n      dataIndex: \"remark\",\n      key: \"remark\",\n      width: 400\n    },\n    {\n      title: \"上传者\",\n      dataIndex: \"uploadPerson\",\n      key: \"uploadPerson\",\n      width: 150\n    },\n    {\n      title: \"上传时间\",\n      dataIndex: \"uploadDate\",\n      key: \"uploadDate\",\n      width: 150\n    },\n    {\n      title: \"操作\",\n      key: \"action\",\n      width: 150,\n      render: (text, record) => (\n        <span>\n          <a\n            onClick={() => {\n              onDown(record);\n            }}\n          >\n            下载\n          </a>\n        </span>\n      )\n    }\n  ];\n};\nclass DownFile extends Component {\n  state = {\n    spin: false,\n    data: [],\n    record: {},\n    visible: false,\n    fileUrl: \"\"\n  };\n  componentDidMount() {\n    this.getData();\n  }\n\n  //获取文件表记录\n  getData = async () => {\n    let res;\n    this.setState({\n      loading: true\n    });\n    try {\n      res = await http().getTable({\n        resid: fileId\n      });\n      if (res.data.error == 0) {\n        let data = [];\n        res.data.data.map((item,index) => {\n          item.number = index+1;\n          data.push(item)\n        })\n        this.setState({\n          data\n        });\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n    this.setState({\n      loading: false\n    });\n  };\n\n  //下载文件\n  onDown = url => {\n    if (!url) {\n      return Modal.warning({\n        title: \"您还未上传过资料\"\n      });\n    }\n    const urls = url.split(\";file;\");\n    for (let i = 0, len = urls.length; i < len; i++) {\n      window.open(urls[i]);\n    }\n  };\n  render() {\n    const { spin, data } = this.state;\n    return (\n      <div className=\"editNotice\">\n        <Spin spinning={spin}>\n          <Table\n            key=\"3\"\n            className=\"editNotice-table\"\n            columns={columns({\n              onDown: record => {\n                this.onDown(record.fileUrl);\n              },\n              data: data\n            })}\n            scroll={{ x: 1000, y: \"calc(100vh - 260px)\" }}\n            dataSource={data}\n          />\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(DownFile);\n","import DownFile from './DownFile';\nexport default DownFile;","import React, { Component } from \"react\";\nimport \"./MenuDataBase.less\";\nimport http from \"../../../utils/api\";\nimport { Form, message, Icon, Input, Button, Tabs } from \"antd\";\nimport NoticeList from \"../NoticeList\";\nimport ApplyDataBase from \"../ApplyDataBase\";\nimport ApplyProject from \"../ApplyProject\";\nimport ActApply from \"../ActApply\";\nimport ShowProject from \"../ShowProject\";\nimport DownFile from \"../DownFile\";\nconst { TabPane } = Tabs;\n\nclass MenuDataBase extends Component {\n  state = {\n    isUpdate: false //是否更新项目申请\n  };\n\n  componentDidMount = () => {};\n  onUpdate = () => {\n    this.setState({\n      isUpdate: true\n    });\n  };\n\n  render() {\n    const { isUpdate } = this.state;\n    return (\n      <Tabs\n        defaultActiveKey=\"1\"\n        tabBarStyle={{\n          height: \"70px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          paddingLeft: \"50px\"\n        }}\n      >\n        <TabPane tab=\"通知\" key=\"1\">\n          <NoticeList></NoticeList>\n        </TabPane>\n        <TabPane tab=\"申请加入数据库\" key=\"2\">\n          <ActApply></ActApply>\n        </TabPane>\n        <TabPane tab=\"研究项目申请\" key=\"3\">\n          <ApplyProject isUpdate={isUpdate}></ApplyProject>\n        </TabPane>\n        <TabPane tab=\"项目公示\" key=\"4\">\n          <ShowProject onUpdate={this.onUpdate}></ShowProject>\n        </TabPane>\n        <TabPane tab=\"文件下载\" key=\"5\">\n          <DownFile></DownFile>\n        </TabPane>\n      </Tabs>\n    );\n  }\n}\n\nexport default MenuDataBase;\n","import React, { Component } from \"react\";\nimport {\n  List,\n  Tag,\n  Divider,\n  Table,\n  message,\n  Popconfirm,\n  Button,\n  Form,\n  Input,\n  Spin,\n  Modal\n} from \"antd\";\nimport \"./EditNotice.less\";\nimport ApplyDataBase from \"../ApplyDataBase\";\nimport http from \"../../../utils/api\";\nimport TextArea from \"antd/lib/input/TextArea\";\nconst noticeId = \"621790850309\";\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 }\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 }\n  }\n};\nconst columns = props => {\n  const { onEdit, onPublish, data } = props;\n  return [\n    {\n      title: \"序号\",\n      dataIndex: \"number\",\n      key: \"number\",\n      width: 80\n    },\n    {\n      title: \"标题\",\n      dataIndex: \"title\",\n      key: \"title\",\n      width: 250,\n      render: text => <a>{text}</a>\n    },\n    {\n      title: \"消息内容\",\n      dataIndex: \"content\",\n      key: \"content\",\n      width: 400\n    },\n    {\n      title: \"发布者\",\n      dataIndex: \"publishPerson\",\n      key: \"publishPerson\",\n      width: 150\n    },\n    {\n      title: \"发布时间\",\n      dataIndex: \"publishTime\",\n      key: \"publishTime\",\n      width: 150\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: data => (\n        <Tag color={data === \"已发布\" ? \"geekblue\" : \"green\"}>{data}</Tag>\n      ),\n      width: 150\n    },\n    {\n      title: \"操作\",\n      key: \"action\",\n      width: 150,\n      render: (text, record) => (\n        <span>\n          <a\n            onClick={() => {\n              onEdit(record);\n            }}\n          >\n            修改\n          </a>\n          <Divider type=\"vertical\" />\n          {record.isPublish === \"Y\" ? (\n            <a\n              onClick={() => {\n                onPublish(record, 1);\n              }}\n            >\n              取消发布\n            </a>\n          ) : (\n            <a\n              onClick={() => {\n                onPublish(record, 2);\n              }}\n            >\n              发布\n            </a>\n          )}\n        </span>\n      )\n    }\n  ];\n};\n\nclass EditNotice extends React.Component {\n  state = {\n    data: [],\n    record: {},\n    page: \"listPage\", //当前页面\n    spin: false, //是否显示加载\n    visible: false, //是否显示添加模态框\n    editVisible: false //是否显示查看模态框\n  };\n  handleCancel = () => {\n    this.setState({\n      visible: false,\n      editVisible: false\n    });\n  };\n  save = async (e, type) => {\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.onSubmit(values, type);\n      }\n    });\n  };\n  //保存数据，如果 传入type是1 ，表示添加。type是2 的话表示 修改。\n  onSubmit = async (values, type) => {\n    let res;\n    if (type === 1) {\n      let data = [values];\n      try {\n        res = await http().addRecords({\n          resid: noticeId,\n          data\n        });\n        if (res.data.Error === 0) {\n          message.success(\"添加成功\");\n          this.setState({\n            visible: false\n          });\n          await this.getData();\n        }\n      } catch (error) {\n        message.error(error.message);\n      }\n    } else {\n      let data = [{ ...values, REC_ID: this.state.record.REC_ID }];\n      try {\n        res = await http().modifyRecords({\n          resid: noticeId,\n          data\n        });\n        if (res.data.Error === 0) {\n          message.success(\"修改成功\");\n          this.setState({\n            editVisible: false\n          });\n          await this.getData();\n        }\n      } catch (error) {\n        message.error(error.message);\n      }\n    }\n  };\n\n  publish = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  onPublish = async (record, type) => {\n    if (type == 1) {\n      record.isPublish = \"N\";\n    } else {\n      record.isPublish = \"Y\";\n    }\n    let res;\n    try {\n      res = await http().modifyRecords({\n        resid: noticeId,\n        data: [record]\n      });\n      if (res.data.Error === 0) {\n        message.success(\"发布成功\");\n        await this.getData();\n      }\n    } catch (error) {}\n  };\n  renderContent = () => {\n    let page = this.state.page;\n    switch (page) {\n      case \"listPage\":\n        return this.renderListPage();\n      case \"addPage\":\n        return this.renderAddPage();\n      case \"checkPage\":\n        return this.renderCheckPage();\n    }\n  };\n  renderListPage = () => {\n    let data = this.state.data;\n    let { spin, record } = this.state;\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <div className=\"editNotice\">\n        <Button type=\"primary\" className=\"editNotice-add\" onClick={this.onAdd}>\n          添加新通知\n        </Button>\n        <Spin spinning={spin}>\n          <Table\n            key=\"3\"\n            className=\"editNotice-table\"\n            columns={columns({\n              onEdit: record => {\n                this.onEdit(record);\n              },\n              onPublish: (record, type) => {\n                this.onPublish(record, type);\n              },\n              data: data\n            })}\n            scroll={{ x: 1000, y: \"calc(100vh - 260px)\" }}\n            dataSource={data}\n          />\n          <Modal\n            title=\"添加新通知\"\n            visible={this.state.visible}\n            width={700}\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n            destroyOnClose={true}\n            footer={[\n              <Button key=\"back\" onClick={this.handleCancel}>\n                取消\n              </Button>,\n              <Button\n                key=\"submit\"\n                type=\"primary\"\n                onClick={() => {\n                  this.save(1);\n                }}\n              >\n                保存\n              </Button>,\n              <Button key=\"submit\" type=\"primary\" onClick={this.publish}>\n                发布\n              </Button>\n            ]}\n          >\n            <Form {...formItemLayout} className=\"editNotice-form\">\n              {/* <h1>消息编辑</h1> */}\n              <Form.Item\n                className=\"editNotice-form-item\"\n                label={<span>标题&nbsp;</span>}\n              >\n                {getFieldDecorator(\"title\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入标题\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                className=\"editNotice-form-item\"\n                label={<span>消息内容&nbsp;</span>}\n              >\n                {getFieldDecorator(\"content\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入消息内容\",\n                      whitespace: true\n                    }\n                  ]\n                })(<TextArea className=\"editNotice-form-item-textarea\" />)}\n              </Form.Item>\n            </Form>\n          </Modal>\n          <Modal\n            title=\"修改通知\"\n            visible={this.state.editVisible}\n            width={700}\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n            destroyOnClose={true}\n            footer={[\n              <Button key=\"back\" onClick={this.handleCancel}>\n                取消\n              </Button>,\n              <Button\n                key=\"submit\"\n                type=\"primary\"\n                onClick={() => {\n                  this.save(2);\n                }}\n              >\n                保存\n              </Button>\n            ]}\n          >\n            <Form {...formItemLayout} className=\"editNotice-form\">\n              {/* <h1>消息编辑</h1> */}\n              <Form.Item\n                className=\"editNotice-form-item\"\n                label={<span>标题&nbsp;</span>}\n              >\n                {getFieldDecorator(\"title\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入标题\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: record.title\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                className=\"editNotice-form-item\"\n                label={<span>消息内容&nbsp;</span>}\n              >\n                {getFieldDecorator(\"content\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入消息内容\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: record.content\n                })(<TextArea className=\"editNotice-form-item-textarea\" />)}\n              </Form.Item>\n            </Form>\n          </Modal>\n        </Spin>\n      </div>\n    );\n  };\n  componentDidMount = async () => {\n    await this.getData();\n  };\n  getData = async () => {\n    let res;\n    this.setState({\n      spin: true\n    });\n    try {\n      res = await http().getTable({\n        resid: noticeId\n      });\n      let data = [];\n      if (res.data.error === 0) {\n        res.data.data.map((item, index) => {\n          item.number = index + 1;\n          data.push(item);\n        });\n        this.setState({\n          data\n        });\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n    this.setState({\n      spin: false\n    });\n  };\n  onAdd = () => {\n    this.setState({\n      visible: true\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  onEdit = record => {\n    this.setState({\n      editVisible: true,\n      record\n    });\n  };\n  render() {\n    const { data, record, page } = this.state;\n\n    return this.renderContent();\n  }\n}\nexport default Form.create()(EditNotice);\n","import EditNotice from  './EditNotice';\nexport default EditNotice;","import React, { Component } from \"react\";\nimport {\n  List,\n  Tag,\n  Divider,\n  Table,\n  message,\n  Form,\n  Button,\n  Checkbox,\n  Spin,\n  Modal,\n  Input\n} from \"antd\";\nimport \"./ApproveList.less\";\nimport http from \"../../../utils/api\";\nconst applyDataBaseId = \"621790784304\"; //数据库申请表-审核\nconst { TextArea } = Input;\n\nclass ApproveList extends React.Component {\n  state = {\n    data: [{}],\n    record: {},\n    page: \"listPage\",\n    spin: false,\n    visible: false\n  };\n  componentDidMount = async () => {\n    await this.getData();\n  };\n  getData = async () => {\n    // this.setState({\n    //   spin: true\n    // });\n    let res;\n    try {\n      res = await http().getTable({\n        resid: applyDataBaseId\n      });\n      if (res.data.error === 0) {\n        let data = [];\n        res.data.data.map((item, index) => {\n          item.number = index + 1;\n          data.push(item);\n        });\n        this.setState({\n          data\n        });\n      }\n    } catch (error) {}\n    // this.setState({\n    //   spin: false\n    // });\n  };\n  onCheck = record => {\n    this.setState({\n      page: \"checkPage\",\n      record\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  onPassOrReject = async type => {\n    let res;\n    let data;\n    if (type === 1) {\n      data = [\n        {\n          ...this.state.record,\n          isPass: \"Y\"\n        }\n      ];\n    } else {\n      data = [\n        {\n          ...this.state.record,\n          isPass: \"N\"\n        }\n      ];\n    }\n    try {\n      res = await http().modifyRecords({\n        resid: applyDataBaseId,\n        data\n      });\n      if (res.data.Error === 0) {\n        message.success(\"操作成功\");\n      }\n      this.setState({\n        page: \"listPage\"\n      });\n      await this.getData();\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  render() {\n    const { data, record, page, spin, visible } = this.state;\n    const options = [\n      { label: \"单中心研究\", value: \"单中心研究\" },\n      { label: \"多中心研究\", value: \"多中心研究\" },\n      { label: \"第三方研究\", value: \"第三方研究\" },\n      { label: \"所有研究\", value: \"所有研究\" }\n    ];\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const checkPage = (\n      <Form {...formItemLayout} className=\"approveList-form\">\n        {page === \"checkPage\" ? (\n          <Button\n            icon={\"rollback\"}\n            type=\"primary\"\n            onClick={this.onBack}\n            className=\"approveList-btn\"\n          >\n            返回\n          </Button>\n        ) : null}\n        <div className=\"approveList-btns\">\n          {record.isPass ? null : (\n            <React.Fragment>\n              {\" \"}\n              <Button\n                className=\"approveList-btn\"\n                type=\"primary\"\n                onClick={() => {\n                  this.onPassOrReject(1);\n                }}\n              >\n                同意\n              </Button>\n              {/* <Button\n                className=\"approveList-btn\"\n                type=\"danger\"\n                onClick={() => {\n                  this.onPassOrReject(2);\n                }}\n              >\n                拒绝\n              </Button> */}\n            </React.Fragment>\n          )}\n        </div>\n        <h1>参与CHASE-IBD数据库建设申请表</h1>\n        <h3>申请医疗单位</h3>\n        <Form.Item label={<span>申请人&nbsp;</span>}>\n          <span>{record.doctor}</span>\n        </Form.Item>\n        <Form.Item label={<span>所属单位&nbsp;</span>}>\n          <span>{record.hospital}</span>\n        </Form.Item>\n        <Form.Item label={<span>职称&nbsp;</span>}>\n          <span>{record.post}</span>\n        </Form.Item>\n        <Form.Item label={<span>联系电话&nbsp;</span>}>\n          <span>{record.phoneNumber}</span>\n        </Form.Item>\n        <Form.Item label={<span>E-mail&nbsp;</span>}>\n          <span>{record.email}</span>\n        </Form.Item>\n        <Form.Item label={<span>IBD治疗团队名单&nbsp;</span>}>\n          <span>{record.teamPeople}</span>&nbsp;&nbsp;\n          <span>{record.teamPeople2}</span>&nbsp;&nbsp;\n          <span>{record.teamPeople3}</span>&nbsp;&nbsp;\n        </Form.Item>\n        <Form.Item label={<span>选择参与数据库研究&nbsp;</span>}>\n          <Checkbox.Group\n            options={options}\n            defaultValue={record.studyType}\n            onChange={this.onChangeCheckbox}\n          />\n        </Form.Item>\n        <h3>贵院目前患者数量</h3>\n\n        <Form.Item label={<span>CD患者数量&nbsp;</span>}>\n          <span>{record.CDPatientNumber}</span>\n        </Form.Item>\n        <Form.Item label={<span>UC患者数量&nbsp;</span>}>\n          <span>{record.UCPatientNumber}</span>\n        </Form.Item>\n        <Form.Item label={<span>医师执照&nbsp;</span>}>\n          <img\n            src={record.doctorPhoto}\n            alt=\"avatar\"\n            style={{ width: \"200px\", height: \"200px\" }}\n          />\n        </Form.Item>\n      </Form>\n    );\n    const columns = [\n      {\n        title: \"序号\",\n        dataIndex: \"number\",\n        key: \"number\",\n        width: 80\n      },\n      {\n        title: \"申请人\",\n        dataIndex: \"doctor\",\n        key: \"doctor\",\n        width: 150\n      },\n      {\n        title: \"申请时间\",\n        dataIndex: \"applyDate\",\n        key: \"applyDate\",\n        width: 150\n      },\n      {\n        title: \"所属单位\",\n        dataIndex: \"hospital\",\n        key: \"hospital\",\n        width: 150\n      },\n      {\n        title: \"研究类型\",\n        dataIndex: \"studyType\",\n        key: \"studyType\",\n        width: 150\n      },\n      {\n        title: \"审批状态\",\n        dataIndex: \"approveStatus\",\n        key: \"approveStatus\",\n        width: 150,\n        render: data => {\n          return (\n            <Tag\n              color={\n                data === \"审核中\"\n                  ? \"blue\"\n                  : data === \"通过\"\n                  ? \"geekblue\"\n                  : \"green\"\n              }\n            >\n              {data}\n            </Tag>\n          );\n        }\n      },\n      // {\n      //   title: 'Tags',\n      //   key: 'tags',\n      //   dataIndex: 'tags',\n      //   render: tags => (\n      //     <span>\n      //       {tags.map(tag => {\n      //         let color = tag.length > 5 ? 'geekblue' : 'green';\n      //         if (tag === 'loser') {\n      //           color = 'volcano';\n      //         }\n      //         return (\n      //           <Tag color={color} key={tag}>\n      //             {tag.toUpperCase()}\n      //           </Tag>\n      //         );\n      //       })}\n      //     </span>\n      //   ),\n      // },\n      {\n        title: \"操作\",\n        key: \"action\",\n        width: 150,\n        render: (text, record) => (\n          <span>\n            <a\n              onClick={() => {\n                this.onCheck(record);\n              }}\n            >\n              查看/建议\n            </a>\n          </span>\n        )\n      }\n    ];\n    return (\n      <div className=\"approveList\">\n        {page === \"listPage\" ? (\n          <Spin spinning={spin}>\n            <Table\n              key=\"1\"\n              className=\"approveList-table\"\n              columns={columns}\n              dataSource={data}\n              scroll={{ x: 1000, y: \"calc(100vh - 220px)\" }}\n            />\n          </Spin>\n        ) : (\n          checkPage\n        )}\n      </div>\n    );\n  }\n}\nexport default ApproveList;\n","import ApproveList from  './ApproveList';\nexport default ApproveList;","import React, { Component } from \"react\";\nimport { Modal, Tag, Button, Table, message, Spin, Form, Input } from \"antd\";\nimport \"./ApproveProjectList.less\";\nimport http from \"../../../utils/api\";\nimport CommitCard from \"../ApplyProject/CommitCard\";\nconst applyProjectId = \"621790809693\"; //研究项目申请表-审核\nconst suggestId = \"621432069832\";\n\nconst { TextArea } = Input;\n\nclass ApproveProjectList extends React.Component {\n  state = {\n    data: [{}],\n    page: \"listPage\",\n    spin: false,\n    record: {},\n    visible: false,\n    currentSuggest: \"\" // 当前登录人的建议\n  };\n  componentDidMount = async () => {\n    await this.getData();\n  };\n  componentWillUnmount() {\n    // 卸载异步操作设置状态\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n  onCheck = record => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    record[\"621432069832\"].map(item => {\n      if (userInfo.UserInfo.EMP_HANDPHONE == item.phone) {\n        this.setState({\n          currentSuggest: item\n        });\n      }\n    });\n    this.setState({\n      page: \"checkPage\",\n      record\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  handleCancel = () => {\n    this.setState({\n      visible: false\n    });\n  };\n  onSuggest = () => {\n    this.setState({\n      visible: true\n    });\n  };\n  onAgreeOrReject = async type => {\n    let res;\n    let data;\n    if (type === 1) {\n      data = [\n        {\n          ...this.state.record,\n          isPass: \"Y\"\n        }\n      ];\n    } else {\n      data = [\n        {\n          ...this.state.record,\n          isPass: \"N\"\n        }\n      ];\n    }\n    try {\n      res = await http().modifyRecords({\n        resid: applyProjectId,\n        data\n      });\n      if (res.data.Error === 0) {\n        message.success(\"操作成功\");\n      }\n      this.setState({\n        page: \"listPage\"\n      });\n      await this.getData();\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  submitSuggest = async e => {\n    const { record } = this.state;\n    this.props.form.validateFieldsAndScroll(async (err, values) => {\n      if (err) {\n        return;\n      }\n      let currentSuggest;\n      if (this.state.currentSuggest) {\n        currentSuggest = JSON.parse(JSON.stringify(this.state.currentSuggest));\n        currentSuggest.suggest = values.suggest;\n      }\n      let res;\n      let data = [\n        {\n          ...currentSuggest\n          // projectId: record.applyId\n        }\n      ];\n      try {\n        res = await http().modifyRecords({\n          resid: suggestId,\n          data\n        });\n        if (res.data.Error === 0) {\n          message.success(\"添加成功\");\n          this.onBack();\n          await this.getData();\n        }\n      } catch (error) {\n        message.error(error.message);\n      }\n      this.setState({\n        visible: false\n      });\n    });\n  };\n  getData = async () => {\n    this.setState({\n      spin: true\n    });\n    let res;\n    try {\n      res = await http().getTableNew({\n        resid: applyProjectId,\n        subresid: suggestId\n      });\n      if (res.data.Error === 0) {\n        let data = [];\n        res.data.data.map((item, index) => {\n          item.number = index + 1;\n          data.push(item);\n        });\n        this.setState({\n          data\n        });\n      }\n    } catch (error) {}\n    this.setState({\n      spin: false\n    });\n  };\n\n  render() {\n    const { data, spin, page, record, visible, currentSuggest } = this.state;\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const columns = [\n      {\n        title: \"序号\",\n        dataIndex: \"number\",\n        key: \"number\",\n        width: 80\n      },\n      {\n        title: \"课题名称\",\n        dataIndex: \"task\",\n        key: \"task\",\n        width: 150\n      },\n      {\n        title: \"申请时间\",\n        dataIndex: \"applyTime\",\n        key: \"applyTime\",\n        width: 150\n      },\n      {\n        title: \"所属单位\",\n        dataIndex: \"hospital\",\n        key: \"hospital\",\n        width: 150\n      },\n      {\n        title: \"发起人\",\n        dataIndex: \"doctor\",\n        key: \"doctor\",\n        width: 150\n      },\n      {\n        title: \"申请加入人\",\n        dataIndex: \"joinPerson\",\n        key: \"joinPerson\",\n        width: 150\n      },\n      {\n        title: \"状态\",\n        dataIndex: \"applyPersonStatus\",\n        key: \"applyPersonStatus\",\n        width: 150\n      },\n      {\n        title: \"审批状态\",\n        dataIndex: \"status\",\n        key: \"status\",\n        width: 150,\n        render: data => {\n          return (\n            <Tag\n              color={\n                data === \"进行中\"\n                  ? \"blue\"\n                  : data === \"已完成\"\n                  ? \"geekblue\"\n                  : \"green\"\n              }\n            >\n              {data}\n            </Tag>\n          );\n        }\n      },\n      {\n        title: \"操作\",\n        key: \"action\",\n        render: (text, record) => (\n          <span>\n            <a\n              onClick={() => {\n                this.onCheck(record);\n              }}\n            >\n              查看/建议\n            </a>\n          </span>\n        ),\n        width: 150\n      }\n    ];\n    const checkPage = (\n      <Form\n        {...formItemLayout}\n        // onSubmit={this.handleSubmit}\n        className=\"approveProjectList-form\"\n      >\n        {page === \"checkPage\" ? (\n          <Button\n            icon={\"rollback\"}\n            type=\"primary\"\n            onClick={this.onBack}\n            className=\"approveList-btn\"\n          >\n            返回\n          </Button>\n        ) : null}\n        <div className=\"approveList-btns\">\n          {!record.isPass ? (\n            <Button\n              className=\"approveList-btn\"\n              type=\"primary\"\n              onClick={() => {\n                this.onAgreeOrReject(1);\n              }}\n            >\n              同意\n            </Button>\n          ) : null}\n          {/* <Button\n              className=\"approveList-btn\"\n              type=\"danger\"\n              onClick={() => {\n                this.onAgreeOrReject(2);\n              }}\n            >\n              拒绝\n            </Button> */}\n          <Button\n            className=\"approveList-btn\"\n            type=\"primary\"\n            onClick={this.onSuggest}\n          >\n            \b建议\n          </Button>\n        </div>\n        <div className=\"approveProjectList-form-contain\">\n          <div className=\"approveProjectList-form-contain-info\">\n            <h1>CHASE-IBD专项课题申请表</h1>\n            <h3>基本信息</h3>\n            <Form.Item label={<span>课题名称&nbsp;</span>}>\n              <span>{record.task}</span>\n            </Form.Item>\n            <Form.Item label={<span>课题负责人&nbsp;</span>}>\n              <span>{record.taskPrincipal}</span>\n            </Form.Item>\n            <Form.Item label={<span>申请人&nbsp;</span>}>\n              <span>{record.doctor}</span>\n            </Form.Item>\n            <Form.Item label={<span>所属单位&nbsp;</span>}>\n              <span>{record.hospital}</span>\n            </Form.Item>\n            <Form.Item label={<span>职称&nbsp;</span>}>\n              <span>{record.post}</span>\n            </Form.Item>\n            <Form.Item label={<span>联系电话&nbsp;</span>}>\n              <span>{record.phoneNumber}</span>\n            </Form.Item>\n            <Form.Item label={<span>E-mail&nbsp;</span>}>\n              <span>{record.email}</span>\n            </Form.Item>\n            <Form.Item label={<span>拟定国内协作单位&nbsp;</span>}>\n              <span>{record.inlandUnit}</span>\n            </Form.Item>\n            <Form.Item label={<span>拟定国际协作单位&nbsp;</span>}>\n              <span>{record.foreignUnit}</span>\n            </Form.Item>\n            {/* <Form.Item label={<span>IBD治疗团队名单&nbsp;</span>}>\n          <span>{record.teamPeople}</span>&nbsp;&nbsp;\n          <span>{record.teamPeople2}</span>&nbsp;&nbsp;\n          <span>{record.teamPeople3}</span>&nbsp;&nbsp;\n        </Form.Item> */}\n            {/* <Form.Item label={<span>选择参与数据库研究&nbsp;</span>}>\n          <Checkbox.Group\n            options={options}\n            defaultValue={record.studyType}\n            onChange={this.onChangeCheckbox}\n          />\n        </Form.Item> */}\n            <h3>研究内容</h3>\n\n            <Form.Item label={<span>研究的理由&nbsp;</span>}>\n              <span>{record.studyReason}</span>\n            </Form.Item>\n            <Form.Item label={<span>研究区域&nbsp;</span>}>\n              <span>{record.studyArea}</span>\n            </Form.Item>\n            <Form.Item\n              label={\n                <span>研究目标（主要目标，次要目标，附加目标）&nbsp;</span>\n              }\n            >\n              <span>{record.studyTarget}</span>\n            </Form.Item>\n            <Form.Item\n              label={\n                <span>研究终点（主要终点，次要终点，附加终点）&nbsp;</span>\n              }\n            >\n              <span>{record.studyLast}</span>\n            </Form.Item>\n            <Form.Item\n              label={\n                <span>\n                  研究设计与描述（研究描述，研究周期，研究设计，剂量和终点的合理性）&nbsp;\n                </span>\n              }\n            >\n              <span>{record.studyDescription}</span>\n            </Form.Item>\n            <Form.Item\n              label={\n                <span>\n                  项目入选（入选标准，排除标准包括药物，治疗和饮食）&nbsp;\n                </span>\n              }\n            >\n              <span>{record.studySelected}</span>\n            </Form.Item>\n            <Form.Item\n              label={\n                <span>研究终点（主要终点，次要终点，附加终点）&nbsp;</span>\n              }\n            >\n              <span>{record.studyLast}</span>\n            </Form.Item>\n            <Form.Item\n              label={<span>评估（疗效评估，安全评估，其他评估）&nbsp;</span>}\n            >\n              <span>{record.studyAssess}</span>\n            </Form.Item>\n            <Form.Item label={<span>实验室检查：检查具体指标参数&nbsp;</span>}>\n              <span>{record.studyCheck}</span>\n            </Form.Item>\n            <Form.Item\n              label={<span>评估（疗效评估，安全评估，其他评估）&nbsp;</span>}\n            >\n              <span>{record.studyAssess}</span>\n            </Form.Item>\n            <Form.Item\n              label={\n                <span>\n                  统计方法（统计分析计划，人口统计学和其他基线特征分析，疗效分析，药代动力学分析，药效学分析，安全分析）&nbsp;\n                </span>\n              }\n            >\n              <span>{record.staticMethod}</span>\n            </Form.Item>\n            <Form.Item label={<span>中期分析和提前终止的标准&nbsp;</span>}>\n              <span>{record.standard}</span>\n            </Form.Item>\n            <Form.Item label={<span>样本量的确定&nbsp;</span>}>\n              <span>{record.sure}</span>\n            </Form.Item>\n            <Form.Item label={<span>伦理委员会&nbsp;</span>}>\n              <span>{record.committee}</span>\n            </Form.Item>\n            <Form.Item label={<span>参考资料&nbsp;</span>}>\n              <span>{record.referenceData}</span>\n            </Form.Item>\n          </div>\n          {record[\"621432069832\"] ? (\n            <div className=\"applyProject-form-contain-notice\">\n              <span>来自数委会的批注</span>\n              {record[\"621432069832\"] &&\n                record[\"621432069832\"].map(item => {\n                  return (\n                    <CommitCard key={item.REC_ID} data={item}></CommitCard>\n                  );\n                })}\n            </div>\n          ) : null}\n        </div>\n        <Modal\n          title=\"建议\"\n          visible={visible}\n          width={500}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          destroyOnClose={true}\n          footer={[\n            <Button key=\"back\" onClick={this.handleCancel}>\n              取消\n            </Button>,\n            <Button\n              htmlType=\"submit\"\n              type=\"primary\"\n              onClick={() => {\n                this.submitSuggest();\n              }}\n            >\n              提交\n            </Button>\n          ]}\n        >\n          <Form {...formItemLayout} className=\"editNotice-form\">\n            {/* <h1>消息编辑</h1> */}\n            {getFieldDecorator(\"suggest\", {\n              initialValue: currentSuggest.suggest,\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入建议\",\n                  whitespace: true\n                }\n              ]\n            })(\n              <TextArea\n                placeholder=\"请输入建议\"\n                className=\"editNotice-form-item-textarea\"\n              />\n            )}\n          </Form>\n        </Modal>\n      </Form>\n    );\n    return (\n      <div className=\"approveProjectList\">\n        {page === \"listPage\" ? (\n          <Spin spinning={spin}>\n            <Table\n              key=\"2\"\n              className=\"approveProjectList-table\"\n              columns={columns}\n              dataSource={data}\n              scroll={{ x: 1000, y: \"calc(100vh - 220px)\" }}\n            />\n          </Spin>\n        ) : (\n          checkPage\n        )}\n      </div>\n    );\n  }\n}\nexport default Form.create()(ApproveProjectList);\n","import ApproveProjectList from  './ApproveProjectList';\nexport default ApproveProjectList;","import React, { Component } from \"react\";\nimport \"./UploadFile.less\";\nimport {\n  Icon,\n  Input,\n  Upload,\n  Button,\n  Form,\n  message,\n  Spin,\n  Modal,\n  Table,\n  Divider,\n  Popconfirm\n} from \"antd\";\nimport http from \"../../../utils/api\";\n\nconst fileId = \"621892190597\";\nconst columns = props => {\n  const { onDown, onDelete } = props;\n  return [\n    {\n      title: \"序号\",\n      dataIndex: \"number\",\n      key: \"number\",\n      width: 100\n    },\n    {\n      title: \"文件名\",\n      dataIndex: \"fileName\",\n      key: \"fileName\",\n      width: 250\n    },\n    {\n      title: \"备注\",\n      dataIndex: \"remark\",\n      key: \"remark\",\n      width: 400\n    },\n    {\n      title: \"上传者\",\n      dataIndex: \"uploadPerson\",\n      key: \"uploadPerson\",\n      width: 150\n    },\n    {\n      title: \"上传时间\",\n      dataIndex: \"uploadDate\",\n      key: \"uploadDate\",\n      width: 150\n    },\n    {\n      title: \"操作\",\n      key: \"action\",\n      width: 150,\n      render: (text, record) => (\n        <span>\n          <a\n            onClick={() => {\n              onDown(record);\n            }}\n          >\n            下载\n          </a>\n          <Divider type=\"vertical\" />\n          <Popconfirm\n            title=\"你确定要提交吗\"\n            onConfirm={() => {\n              onDelete(record);\n            }}\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <a>删除</a>\n          </Popconfirm>\n        </span>\n      )\n    }\n  ];\n};\nconst uploadFile = (file, url) => {\n  return new Promise((resolve, reject) => {\n    let fd = new FormData();\n    fd.append(\"file\", file, file.name);\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", url);\n    xhr.onload = () => {\n      const data = JSON.parse(xhr.response);\n      if (xhr.status === 200 && (data.error === 0 || data.error === \"0\")) {\n        const imgUrl = data.data;\n        resolve(imgUrl);\n      } else {\n        reject(data);\n      }\n    };\n    xhr.send(fd);\n  });\n};\nclass UploadFile extends Component {\n  state = {\n    spin: false,\n    data: [],\n    record: {},\n    visible: false,\n    fileUrl: \"\"\n  };\n  componentDidMount = async () => {\n    await this.getData();\n  };\n  //获取文件表记录\n  getData = async () => {\n    let res;\n    this.setState({\n      spin: true\n    });\n    try {\n      res = await http().getTable({\n        resid: fileId\n      });\n      if (res.data.error == 0) {\n        let data = [];\n        res.data.data.map((item,index) => {\n          item.number = index+1;\n          data.push(item)\n        })\n        this.setState({\n          data\n        });\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n    this.setState({\n      spin: false\n    });\n  };\n\n  handleSubmit = e => {\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.onSubmit(values);\n      }\n    });\n  };\n  onDelete = async record => {\n    let res;\n    try {\n      res = await http().removeRecords({\n        resid: fileId,\n        data: [record]\n      });\n      if (res.data.Error == 0) {\n        message.success(\"操作成功\");\n      }\n      this.setState({\n        visible: false\n      });\n      this.getData();\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  //下载文件\n  onDown = url => {\n    if (!url) {\n      return Modal.warning({\n        title: \"您还未上传过资料\"\n      });\n    }\n    const urls = url.split(\";file;\");\n    for (let i = 0, len = urls.length; i < len; i++) {\n      window.open(urls[i]);\n    }\n  };\n  //上传文件\n  handleUploadFile = async fileInfo => {\n    const file = fileInfo.file;\n    const bucketname = \"realsun\";\n    const type = \"\";\n    const fileUrl = `http://ivf.realsun.me:9001/api/AliyunOss/PutFilesObject?bucketname=${encodeURIComponent(\n      bucketname\n    )}&srctype=${encodeURIComponent(type)}`;\n    try {\n      await uploadFile(file, fileUrl).then(fileUrl => {\n        this.setState({\n          fileUrl:fileUrl[0]\n        });\n      });\n    } catch (err) {\n      return message.error(err.message);\n    }\n  };\n  //提交表单\n  onSubmit = async values => {\n    let res;\n    let obj = {};\n    obj = {\n      fileName: values.fileName,\n      fileUrl: this.state.fileUrl,\n      remark:values.remark\n    };\n    try {\n      res = await http().addRecords({\n        resid: fileId,\n        data: [obj]\n      });\n      if (res.data.Error == 0) {\n        message.success(\"操作成功\");\n      }\n      this.setState({\n        visible: false,\n        fileUrl:''\n      });\n      this.getData();\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  onAdd = () => {\n    this.setState({\n      visible: true\n    });\n  };\n  handleCancel = () => {\n    this.setState({\n      visible: false\n    });\n  };\n  getBase64 = (img, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => callback(reader.result));\n    reader.readAsDataURL(img);\n  };\n  handleChange = info => {\n    if (info.file.status === \"uploading\") {\n      return;\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      this.getBase64(info.file.originFileObj, imageUrl =>\n        this.setState({\n          imageUrl\n        })\n      );\n    }\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { spin, record, data, fileUrl } = this.state;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const uploadButton = (\n      <div>\n        <Icon type={this.state.loading ? \"loading\" : \"plus\"} />\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n\n    return (\n      <div className=\"editNotice\">\n        <Button type=\"primary\" className=\"editNotice-add\" onClick={this.onAdd}>\n          上传新资料\n        </Button>\n        <Spin spinning={spin}>\n          <Table\n            key=\"3\"\n            className=\"editNotice-table\"\n            columns={columns({\n              onDown: record => {\n                this.onDown(record.fileUrl);\n              },\n              onDelete: record => {\n                this.onDelete(record);\n              },\n              data: data\n            })}\n            scroll={{ x: 1000, y: \"calc(100vh - 260px)\" }}\n            dataSource={data}\n          />\n          <Modal\n            title=\"上传文件\"\n            visible={this.state.visible}\n            width={700}\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n            destroyOnClose\n            footer={[\n              <Button key=\"back\" onClick={this.handleCancel}>\n                取消\n              </Button>,\n              <Button key=\"submit\" type=\"primary\" onClick={this.handleSubmit}>\n                提交\n              </Button>\n            ]}\n          >\n            <Form {...formItemLayout} className=\"editNotice-form\">\n              <Form.Item\n                className=\"editNotice-form-item\"\n                label={<span>资料名称&nbsp;</span>}\n              >\n                {getFieldDecorator(\"fileName\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入申请人\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>  \n               <Form.Item\n                className=\"editNotice-form-item\"\n                label={<span>备注&nbsp;</span>}\n              >\n                {getFieldDecorator(\"remark\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入备注\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                className=\"editNotice-form-item\"\n                label={<span>资料&nbsp;</span>}\n              >\n                {getFieldDecorator(\"file\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入申请人\",\n                      whitespace: true\n                    }\n                  ]\n                })(\n                  <div>\n                    <Upload\n                      name=\"file\"\n                      showUploadList={false}\n                      customRequest={this.handleUploadFile}\n                      onRemove={this.handleRemoveFile}\n                      onChange={this.handleChange}\n                    >\n                      <Button>\n                        <Icon type=\"upload\" /> 上传\n                      </Button>\n                    </Upload>\n                    <Input style={{ display: \"none\" }} value={fileUrl} />\n                  </div>\n                )}\n                <div>\n                  <a href={fileUrl}>{fileUrl}</a>\n                </div>\n              </Form.Item>\n            </Form>\n          </Modal>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(UploadFile);\n","import React, { Component } from \"react\";\nimport \"./MenuCommittee.less\";\nimport http from \"../../../utils/api\";\nimport { Tabs } from \"antd\";\nimport EditNotice from \"../EditNotice\";\nimport ApproveList from \"../ApproveList\";\nimport ApproveProjectList from \"../ApproveProjectList\";\nimport UploadFile from \"../UploadFile/UploadFile\";\nconst { TabPane } = Tabs;\n\nclass MenuCommittee extends Component {\n  render() {\n    return (\n      <Tabs\n        defaultActiveKey=\"1\"\n        tabBarStyle={{\n          height: \"70px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          paddingLeft: \"50px\"\n        }}\n      >\n        <TabPane tab=\"申请加入审批\" key=\"1\">\n          <ApproveList></ApproveList>\n        </TabPane>\n        <TabPane tab=\"项目研究审核\" key=\"2\">\n          <ApproveProjectList></ApproveProjectList>\n        </TabPane>\n        <TabPane tab=\"编辑发布通知\" key=\"3\">\n          <EditNotice></EditNotice>\n        </TabPane>\n        <TabPane tab=\"上传资料\" key=\"4\">\n          <UploadFile></UploadFile>\n        </TabPane>\n      </Tabs>\n    );\n  }\n}\n\nexport default MenuCommittee;\n","import MenuCommittee from './MenuCommittee';\nexport default MenuCommittee;","import React, { Component } from \"react\";\nimport \"./Home.less\";\nimport {\n  Menu,\n  Icon,\n  Button,\n  Tabs,\n  Upload,\n  Popover,\n  Alert,\n  Form,\n  Modal,\n  Input,\n  message,\n  Spin\n} from \"antd\";\nimport logo from \"../../../assets/images/logo.png\";\nimport NoticeList from \"../NoticeList\";\nimport ApplyDataBase from \"../ApplyDataBase\";\nimport ApplyProject from \"../ApplyProject\";\nimport ActApply from \"../ActApply\";\nimport MenuDataBase from \"../MenuDataBase/MenuDataBase\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport MenuCommittee from \"../MenuCommittee\";\nimport http from \"../../../utils/api\";\nconst { TabPane } = Tabs;\nconst doctorInfoId = \"622204211916\";\nconst managerInfoId = '623858273868'\nclass Home extends Component {\n  state = {\n    collapsed: false,\n    imageUrl: \"\",\n    userInfo: {},\n    currentItem: 1,\n    visible: false,\n    doctorInfo: {},\n    isManager:false, //是否是数位会成员\n    managerInfo:[],\n    loading:false\n  };\n  constructor(props) {\n    super(props);\n  }\n  toggleCollapsed = () => {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  };\n  //获取数委会名单\n  getManagerInfo = async(userInfo) => {\n    let res;\n    try {\n      res = await http().getTable({\n        resid: managerInfoId,\n      });\n      if (res.data.error === 0) {\n      res.data.data.map((item) => {\n       if( item.phone === userInfo.UserInfo.EMP_HANDPHONE){\n         localStorage.setItem(\"isManager\",JSON.stringify(true))\n         this.setState({\n           isManager:true\n         })\n       }\n      })\n        this.setState({\n          managerInfo: res.data.data[0]\n        });\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n  }\n  getDoctorInfo = async(userInfo) => {\n    let res;\n    try {\n      res = await http().getTable({\n        resid: doctorInfoId,\n        cmswhere: `phoneNumber = ${userInfo.UserInfo.EMP_HANDPHONE}`\n      });\n      if (res.data.error === 0) {\n        localStorage.setItem(\"doctorInfo\",JSON.stringify(res.data.data[0]))\n        this.setState({\n          doctorInfo: res.data.data[0]\n        });\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n  }\n  componentDidMount = async () => {\n    this.setState({\n      loading:true\n    })\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    const currentItem = JSON.parse(localStorage.getItem(\"currentItem\"));\n    const isManager = JSON.parse(localStorage.getItem(\"isManager\"));\n    if (currentItem) {\n      this.setState({\n        userInfo,\n        currentItem\n      });\n    } else {\n      this.setState({\n        userInfo\n      });\n    }\n    if(!isManager){\n      await this.getManagerInfo(userInfo);\n    }else{\n      this.setState({\n        isManager:true\n      })\n    }\n    await this.getDoctorInfo(userInfo);\n     this.setState({\n       loading:false\n     })\n  };\n  getBase64 = (img, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => callback(reader.result));\n    reader.readAsDataURL(img);\n  };\n  //修改个人信息\n  onEditInfo = async () => {\n    this.setState({\n      visible: true\n    });\n  };\n  onSave = () => {\n    const { form } = this.props;\n    let res;\n    this.props.form.validateFieldsAndScroll(async (err, values) => {\n      if (err) {\n        return;\n      }\n      let data = [\n        {\n          occupationNumber: form.getFieldValue(\"postNumber\"), //执业证号码\n          hospital: form.getFieldValue(\"hospital\"), // 医院\n          doctor: form.getFieldValue(\"doctor\"),\n          post: form.getFieldValue(\"post\"),\n          emial: form.getFieldValue(\"emial\"),\n          REC_ID: this.state.doctorInfo.REC_ID\n        }\n      ];\n      try {\n        res = await http().modifyRecords({\n          resid: doctorInfoId,\n          data\n        });\n        if (res.data.Error === 0) {\n          message.success(\"修改成功\");\n          this.setState({\n          doctorInfo: res.data.data[0]\n          })\n        }\n      } catch (error) {\n        message.error(error.message);\n      }\n      this.setState({\n        visible: false\n      });\n    });\n  };\n  handleCancel = () => {\n    this.setState({\n      visible: false\n    });\n  };\n  //退出\n  logout = () => {\n    localStorage.removeItem(\"userInfo\");\n    localStorage.removeItem(\"currentItem\");\n    this.props.history.replace({\n      pathname: \"/\"\n    });\n  };\n  //切换路由\n  onMenuDetail = name => {\n    if (name === \"menuCommittee\") {\n      localStorage.setItem(\"currentItem\", 2);\n      this.setState({\n        currentItem: 2\n      });\n    } else {\n      localStorage.setItem(\"currentItem\", 1);\n      this.setState({\n        currentItem: 1\n      });\n    }\n    this.props.history.push({\n      pathname: `/${name}`\n    });\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { doctorInfo } = this.state;\n    const uploadButton = (\n      <div>\n        <div className=\"ant-upload-text\">请上传照片</div>\n      </div>\n    );\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const content = (\n      <React.Fragment>\n        <div\n          style={{\n            margin: \"10px 0 \",\n            display: \"flex\",\n            flexDirection: \"column\"\n          }}\n        >\n          <Button\n            type=\"primary\"\n            icon=\"edit\"\n            size=\"small\"\n            onClick={this.onEditInfo}\n          >\n            修改信息\n          </Button>\n          <Button\n            type=\"primary\"\n            icon=\"logout\"\n            size=\"small\"\n            onClick={this.logout}\n            style={{ marginTop: \"10px\" }}\n          >\n            退出登录\n          </Button>\n        </div>\n      </React.Fragment>\n    );\n    const { imageUrl, userInfo, currentItem,isManager ,loading} = this.state;\n    return (\n      <Spin spinning={loading}>\n      <div className=\"home\">\n        <Modal\n          title=\"修改个人信息\"\n          visible={this.state.visible}\n          width={600}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          destroyOnClose={true}\n          footer={[\n            <Button key=\"back\" onClick={this.handleCancel}>\n              取消\n            </Button>,\n            <Button\n              key=\"submit\"\n              type=\"primary\"\n              onClick={() => {\n                this.onSave();\n              }}\n            >\n              保存\n            </Button>\n          ]}\n        >\n          <Form {...formItemLayout} onSubmit={this.handleSubmit} className=\"home-modal\">\n            <Form.Item label=\"姓名\">\n              {getFieldDecorator(\"doctor\", {\n                rules: [{ required: true, message: \"请输入您的姓名!\" }],\n                initialValue: doctorInfo.doctor\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"姓名\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item label=\"医院\">\n              {getFieldDecorator(\"hospital\", {\n                rules: [{ required: true, message: \"请输入您所在的医院!\" }],\n                initialValue: doctorInfo.hospital\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"医院\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item label='职称'>\n              {getFieldDecorator(\"post\", {\n                rules: [{ required: true, message: \"请输入您的职称!\" }],\n                initialValue: doctorInfo.post\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"职称\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item label='执业证号码'>\n              {getFieldDecorator(\"postNumber\", {\n                rules: [{ required: true, message: \"请输入您的执业证号码!\" }],\n                initialValue: doctorInfo.occupationNumber\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"执业证号码\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item label='邮箱'>\n              {getFieldDecorator(\"email\", {\n                rules: [{ required: true, message: \"请输入您的邮箱!\" }],\n                initialValue: doctorInfo.email\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"邮箱\"\n                />\n              )}\n            </Form.Item>\n          </Form>\n        </Modal>\n        <div className=\"home-left\">\n          <Menu\n            selectedKeys={[`${currentItem}`]}\n            defaultOpenKeys={[\"sub1\"]}\n            mode=\"inline\"\n            theme=\"dark\"\n            style={{ height: \"100vh\" }}\n            inlineCollapsed={this.state.collapsed}\n          >\n            <div className=\"home-left-logo\">\n              <img className=\"home-left-logo-img\" src={logo}></img>\n            </div>\n            <Menu.Item\n              key=\"1\"\n              onClick={() => {\n                this.onMenuDetail(\"home\");\n              }}\n            >\n              <Icon type=\"pie-chart\" />\n              <span>CHASE-IBD数据库</span>\n            </Menu.Item>\n            {isManager? <Menu.Item\n              key=\"2\"\n              onClick={() => {\n                this.onMenuDetail(\"menuCommittee\");\n              }}\n            >\n              <Icon type=\"desktop\" />\n              <span>数据库委员会</span>\n            </Menu.Item>:null}\n           \n          </Menu>\n        </div>\n        <div className=\"home-right\">\n          <div className=\"home-right-top\">\n            <div className=\"home-right-top-tabs\">\n              <Route path=\"/home\" component={MenuDataBase}></Route>\n              <Route path=\"/menuCommittee\" component={MenuCommittee}></Route>\n            </div>\n\n            <div className=\"home-right-top-user\">\n              <Popover content={content} placement=\"bottom\">\n                <div>\n                  <Icon type=\"user\" style={{ fontSize: \"20px\" }} />\n                </div>\n                <div>{doctorInfo.doctor}</div>\n              </Popover>\n            </div>\n          </div>\n          <div className=\"home-right-content\">\n            <div></div>\n          </div>\n        </div>\n      </div></Spin>\n    );\n  }\n}\n\nexport default Form.create()(Home);\n","import Home from './Home';\nexport default Home;","import React, { Component } from \"react\";\nimport \"./Register.less\";\nimport { Form, message, Icon, Input, Button, Checkbox, Spin } from \"antd\";\nimport http from \"../../../utils/api\";\n\nclass Register extends Component {\n  state = {\n    disabled: false,\n    counts: 60,\n    showSpin: false\n  };\n\n  componentDidMount = () => {};\n  onLogin = () => {\n    this.props.history.push({\n      pathname: \"/login\"\n    });\n  };\n\n  countDown = () => {\n    let counts = 60;\n    this.setState({\n      disabled: true\n    });\n    let countdown = setInterval(() => {\n      if (counts > 0) {\n        counts--;\n        this.setState({\n          counts\n        });\n      } else {\n        this.setState({\n          disabled: false\n        });\n        clearInterval(countdown);\n      }\n    }, 1000);\n  };\n  getVerCode = async () => {\n    const { form } = this.props;\n    let res;\n    if (form.getFieldValue(\"phone\")) {\n      this.countDown();\n      try {\n        res = await http().getVerCode({\n          telephone: form.getFieldValue(\"phone\")\n        });\n      } catch (error) {\n        message.error(error.message);\n      }\n    } else {\n      message.info(\"请先输入手机号获取验证码\");\n    }\n  };\n  register = async () => {\n    const { form } = this.props;\n    let res;\n    this.props.form.validateFieldsAndScroll(async (err, values) => {\n      if (err) {\n        return;\n      }\n      let registerData = {\n        Handphone: form.getFieldValue(\"phone\"), // 手机号\n        userid: form.getFieldValue(\"postNumber\"), //执业证号码\n        // occuptionNumber: form.getFieldValue(\"postNumber\"), //执业证号码\n        validcode: form.getFieldValue(\"valid\"), // 验证码\n        // hospital: form.getFieldValue(\"hospital\"), // 医院\n        nickname: form.getFieldValue(\"doctor\"),\n        // office:form.office,\n        validresid: 616852937051\n        // unionid: this.unionid,\n        // openid: this.openid\n      };\n      let doctorData = {\n        phoneNumber: form.getFieldValue(\"phone\"), // 手机号\n        occupationNumber: form.getFieldValue(\"postNumber\"), //执业证号码\n        hospital: form.getFieldValue(\"hospital\"), // 医院\n        doctor: form.getFieldValue(\"doctor\"),\n        email: form.getFieldValue(\"email\"),\n        post: form.getFieldValue(\"post\") //职称\n      };\n      this.setState({\n        showSpin: true\n      });\n\n      try {\n        res = await http().register(registerData);\n        if (res.data.error == 0) {\n          message.success(\"注册成功\");\n          this.props.history.push({\n            pathname: \"/login\",\n            state: { doctorData }\n          });\n        } else {\n          message.error(res.data.message);\n        }\n      } catch (error) {\n        message.error(error.message);\n      }\n      this.setState({\n        showSpin: false\n      });\n    });\n  };\n  render() {\n    const { disabled, counts, showSpin } = this.state;\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div className=\"page\">\n        <div className=\"register-contain\">\n          <Spin spinning={showSpin}>\n            <Form onSubmit={this.handleSubmit} className=\"login-form-userName\">\n              <h1>注册</h1>\n              <Form.Item>\n                {getFieldDecorator(\"doctor\", {\n                  rules: [{ required: true, message: \"请输入您的姓名!\" }]\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"姓名\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"hospital\", {\n                  rules: [{ required: true, message: \"请输入您所在的医院!\" }]\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"医院\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"post\", {\n                  rules: [{ required: true, message: \"请输入您的职称!\" }]\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"职称\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"postNumber\", {\n                  rules: [{ required: true, message: \"请输入您的执业证号码!\" }]\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"执业证号码\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"email\", {\n                  rules: [\n                    {\n                      type: \"email\",\n                      required: true,\n                      message: \"请输入您的邮箱!\"\n                    }\n                  ]\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"邮箱\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"phone\", {\n                  rules: [{ required: true, message: \"请输入您的手机号!\" }]\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"phone\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"手机号\"\n                  />\n                )}\n              </Form.Item>\n\n              <Form.Item className=\"login-form-valid\">\n                {getFieldDecorator(\"valid\", {\n                  rules: [{ required: true, message: \"请输入你的验证码!\" }]\n                })(\n                  <Input\n                    className=\"login-form-valid-input\"\n                    prefix={\n                      <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"验证码 \"\n                  />\n                )}\n              </Form.Item>\n              {disabled ? (\n                <Button style={{ marginLeft: \"10px\" }} type=\"primary\" disabled>\n                  {counts}\n                </Button>\n              ) : (\n                <Button\n                  style={{ marginLeft: \"10px\" }}\n                  type=\"primary\"\n                  onClick={this.getVerCode}\n                >\n                  获取验证码\n                </Button>\n              )}\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n                onClick={this.register}\n                size=\"large\"\n              >\n                注册\n              </Button>\n              <div className=\"login-form-register\">\n                <a onClick={this.onLogin}>登录</a>\n              </div>\n            </Form>\n          </Spin>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(Register);\n","import Register from './Register';\nexport default Register;","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Button } from \"antd\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from './components/busniess/Login'\nimport Home from './components/busniess/Home'\nimport Register from './components/busniess/Register'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Home></Home> */}\n      <Router>\n        <Route exact path='/' component={Login}></Route>\n        <Route  path='/login' component={Login}></Route>\n        <Route  path='/register' component={Register}></Route>\n        <Route  path='/home' component={Home}></Route>\n        <Route  path='/menuCommittee' component={Home}></Route>\n        \n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}