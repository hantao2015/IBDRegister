{"version":3,"sources":["assets/images/logo.jpg","assets/images/applyProject1.jpg","assets/images/applyProject2.jpg","assets/images/applyDataBase.jpg","logo.svg","utils/api.js","components/busniess/Login/Login.js","components/busniess/Login/index.js","components/busniess/NoticeList/NoticeList.js","components/busniess/NoticeList/index.js","components/busniess/ApplyDataBase/ApplyDataBase.js","components/busniess/ApplyDataBase/index.js","components/busniess/ApplyDataBase/ShowImage/index.js","components/busniess/ApplyDataBase/ShowImage/ShowImage.js","components/busniess/ApplyProject/CommitCard/CommitCard.js","components/busniess/ApplyProject/CommitCard/index.js","components/busniess/ApplyProject/ApplyProject.js","components/busniess/ApplyProject/index.js","components/busniess/ActApply/ActApply.js","components/busniess/ActApply/index.js","components/busniess/ShowProject/ShowProject.js","components/busniess/ShowProject/index.js","components/busniess/MenuDataBase/MenuDataBase.js","components/busniess/EditNotice/EditNotice.js","components/busniess/EditNotice/index.js","components/busniess/ApproveList/ApproveList.js","components/busniess/ApproveList/index.js","components/busniess/ApproveProjectList/ApproveProjectList.js","components/busniess/ApproveProjectList/index.js","components/busniess/MenuCommittee/MenuCommittee.js","components/busniess/MenuCommittee/index.js","components/busniess/Home/index.js","components/busniess/Home/Home.js","components/busniess/Register/Register.js","components/busniess/Register/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","http","setDefaultBaseURL","setDefaultHeaders","createApi","method","url","setDefaultOptions","withCredentials","Login","state","disabled","counts","showSpin","componentDidMount","login","e","a","form","props","loginData","mobileno","getFieldValue","validCode","loginMethod","useCookie","preventDefault","validateFieldsAndScroll","err","values","setState","res","data","OpResult","message","success","localStorage","setItem","JSON","stringify","history","push","pathname","error","ErrorMsg","this","countDown","countdown","setInterval","clearInterval","getVerCode","telephone","console","log","info","onRegister","getFieldDecorator","className","spinning","onSubmit","handleSubmit","Item","rules","required","size","prefix","type","style","color","placeholder","onClick","htmlType","Component","create","Panel","noticeId","NoticeList","collapsed","imageUrl","userInfo","currentNotice","historyNotice","getTable","resid","current","customPanelStyle","background","borderRadius","marginBottom","border","overflow","title","description","content","publishTime","showIcon","length","bordered","defaultActiveKey","expandIcon","isActive","rotate","map","item","index","header","key","image","PRESENTED_IMAGE_SIMPLE","ApplyDataBase","applyList","page","record","loading","prop","icon","onBack","onApply","addText","showImage","isShowImage","pages","listPage","applyPage","checkPage","showImagePage","schedulePage","ShowImage","src","height","Meta","CommitCard","width","marginTop","avatar","active","person","writeTime","suggest","applyProjectId","suggestId","Step","customDot","dot","status","ApplyProject","postilData","getApplyData","getTableNew","subresid","Error","studyType","split","onSubmitRecord","isSubmit","modifyRecords","obj","study","toString","doctor","hospital","task","phoneNumber","phone","email","taskPrincipal","inlandUnit","foreignUnit","studyReason","studyArea","studyTarget","studyDescription","studyLast","studySelected","studyAssess","studyCheck","staticMethod","standard","sure","committee","referenceData","addRecords","onLookSchedule","progressDot","onCheck","print","newContent","document","getElementById","innerHTML","oldContent","body","window","location","reload","formItemLayout","labelCol","xs","span","sm","wrapperCol","Fragment","applyProjectImage1","applyProjectImage2","id","textAlign","label","post","REC_ID","itemLayout","dataSource","renderItem","actions","onConfirm","okText","cancelText","href","REC_CRTTIME","whitespace","ref","el","componentRef","applyDataBaseId","uploadFile","file","Promise","resolve","reject","fd","FormData","append","name","xhr","XMLHttpRequest","open","onload","parse","response","imgUrl","send","ActApply","handleUploadFile","fileInfo","fileUrl","encodeURIComponent","then","teamPeople","teamPeople2","teamPeople3","CDPatientNumber","CDNumber","UCPatientNumber","UCNumber","doctorPhoto","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","handleChange","originFileObj","uploadButton","options","value","applyDataBaseImage","Group","defaultValue","onChange","onChangeCheckbox","alt","approveStatus","listType","showUploadList","customRequest","onRemove","handleRemoveFile","ShowProject","TextArea","spin","visible","clearCache","getData","handleCancel","onSuggest","submitSuggest","projectId","columns","dataIndex","render","scroll","x","y","React","TabPane","MenuDataBase","tabBarStyle","display","alignItems","paddingLeft","tab","onEdit","onPublish","text","isPublish","EditNotice","editVisible","save","publish","renderContent","renderListPage","renderAddPage","renderCheckPage","onAdd","onOk","handleOk","onCancel","destroyOnClose","footer","initialValue","ApproveList","onPassOrReject","isPass","ApproveProjectList","onAgreeOrReject","placeHolder","MenuCommittee","Home","currentItem","toggleCollapsed","getItem","logout","removeItem","replace","onMenuDetail","margin","selectedKeys","defaultOpenKeys","mode","theme","inlineCollapsed","logo","path","component","placement","fontSize","Data","Register","onLogin","register","registerData","Handphone","userid","occuptionNumber","validcode","nickname","validresid","App","exact","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.18ec1922.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.32f1acd3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/applyProject1.96855abe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/applyProject2.fad3ab87.jpg\";","module.exports = __webpack_public_path__ + \"static/media/applyDataBase.04e0b2a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import http from \"lz-request/lib/http\";\n// 设置默认的基地址\nhttp.setDefaultBaseURL(\"http://ivf.realsun.me:9001\");\n\n// 设置默认的请求头\nhttp.setDefaultHeaders({\n  \"Content-Type\": \"application/json\"\n});\n\n// 创建定制的获取提醒数量的 api，方法名为 'getReminderNum'\nhttp.createApi(\"getReminderNum\", {\n  method: \"get\", // 使用 get 方法\n  url: \"/api/Resource/RetrieveReminderNum\" // 请求地址\n});\n\n//默认options\nhttp.setDefaultOptions({\n  withCredentials: true\n});\n\n// http.setRequestInterceptors(\n//   function(config) {\n//     // 请求头加上 token\n//     let token;\n//     if ((token = localStorage.getItem(\"token\"))) {\n//       config.headers.token = token;\n//     }\n//     return config;\n//   },\n//   function(error) {\n//     return error;\n//   }\n// );\n\n// 响应拦截\n// http.setResponseInterceptors(\n//   response => {\n//     const res = response.data;\n//     if (\n//       (res &&\n//         (res.error === 0 ||\n//           res.error === \"0\" ||\n//           res.Error === 0 ||\n//           res.Error === \"0\" ||\n//           res.OpResult === \"Y\")) ||\n//       res === \"ok\"\n//     ) {\n//       return response;\n//     } else {\n//       throw new Error(res.ErrMsg || res.message || res.ErrorMsg);\n//     }\n//   },\n//   error => {\n//     if (error.response.status === 401) {\n//       // window.location.href = \"/login\";\n//     }\n//     return error;\n//   }\n// );\n\n/**\n * 通过手机号、openid、unionid 来获取验证码\n * 参数：{ telephone, unionid, openid }\n * 1. telephone：手机号\n * 2. unionid：unionid\n * 3. openid：openid\n */\nhttp.createApi(\"getVerCode\", {\n  method: \"get\",\n  // baseURL: 'https://finisar.realsun.me/',\n  url: \"api/SMS/SMS_SendValidCode\"\n});\n\n/**\n * 注册\n * 参数：{ telephone, unionid, openid, validCode, personid, method }\n * 1. telephone：手机号\n * 2. unionid：unionid\n * 3. openid: openid\n * 4. personid：身份证\n * 5. method：method\n * openid,telephone,unionid,validCode,workNum\n */\nhttp.createApi(\"register\", {\n  method: \"get\",\n  // baseURL: 'https://finisar.realsun.me/',\n  url: \"api/Account/Register\"\n});\n\n/**\n *登录\n */\nhttp.createApi(\"login\", {\n  method: \"post\",\n  url: \"/api/Account/Login\"\n});\n\n/**\n *获取表格数据 |新接口\n */\nhttp.createApi(\"getTableNew\", {\n  method: \"get\",\n  url: \"/api/200/table/Retrieve\"\n});\n\n/**\n *上传图片\n */\nhttp.createApi(\"putOneImageObject\", {\n  method: \"post\",\n  url: \"/api/AliyunOss/PutOneImageObject\"\n});\n\nexport default http;\n","import React, { Component } from \"react\";\nimport \"./Login.less\";\nimport http from \"../../../utils/api\";\nimport { Form, message, Icon, Input, Button, Spin } from \"antd\";\n\nclass Login extends Component {\n  state = {\n    disabled: false,\n    counts: 60,\n    showSpin: false\n  };\n\n  componentDidMount = () => {};\n\n  login = async e => {\n    const { form } = this.props;\n    const loginData = {\n      mobileno: form.getFieldValue(\"phone\"), // 手机号\n      validCode: form.getFieldValue(\"valid\"), // 验证码\n      loginMethod: \"mobile\",\n      useCookie: true\n    };\n    e.preventDefault();\n    let res;\n    this.props.form.validateFieldsAndScroll(async (err, values) => {\n      if (err) {\n        return;\n      }\n      this.setState({\n        showSpin: true\n      });\n      try {\n        res = await http().login(loginData);\n        if (res.data.OpResult == \"Y\") {\n          message.success(\"登录成功\");\n          localStorage.setItem(\"userInfo\", JSON.stringify(res.data));\n          this.props.history.push({\n            pathname: \"/home\"\n          });\n        } else {\n          message.error(res.data.ErrorMsg);\n        }\n      } catch (error) {\n        message.error(error.message);\n      }\n      this.setState({\n        showSpin: false\n      });\n    });\n  };\n  countDown = () => {\n    let counts = 60;\n    this.setState({\n      disabled: true\n    });\n    let countdown = setInterval(() => {\n      if (counts > 0) {\n        counts--;\n        this.setState({\n          counts\n        });\n      } else {\n        this.setState({\n          disabled: false\n        });\n        clearInterval(countdown);\n      }\n    }, 1000);\n  };\n  getVerCode = async () => {\n    const { form } = this.props;\n    let res;\n    if (form.getFieldValue(\"phone\")) {\n      this.countDown();\n      try {\n        res = await http().getVerCode({\n          telephone: form.getFieldValue(\"phone\")\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      message.info(\"请先输入手机号获取验证码\");\n    }\n  };\n  onRegister = () => {\n    this.props.history.push({\n      pathname: \"/register\"\n    });\n  };\n  render() {\n    const { disabled, counts, showSpin } = this.state;\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div className=\"page\">\n        <div className=\"login-contain\">\n          <Spin spinning={showSpin}>\n            <Form onSubmit={this.handleSubmit} className=\"login-form-userName\">\n              <h1>登录</h1>\n              <Form.Item>\n                {getFieldDecorator(\"phone\", {\n                  rules: [{ required: true, message: \"请输入你的手机号!\" }]\n                })(\n                  <Input\n                    size=\"large\"\n                    prefix={\n                      <Icon type=\"phone\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"手机号\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item className=\"login-form-valid\">\n                {getFieldDecorator(\"valid\", {\n                  rules: [{ required: true, message: \"请输入你的验证码!\" }]\n                })(\n                  <Input\n                    size=\"large\"\n                    className=\"login-form-valid-input\"\n                    prefix={\n                      <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"验证码 \"\n                  />\n                )}\n              </Form.Item>\n              {disabled ? (\n                <Button\n                  className=\"login-form-valid-countdown\"\n                  size=\"large\"\n                  type=\"primary\"\n                  disabled\n                >\n                  {counts}\n                </Button>\n              ) : (\n                <Button\n                  className=\"login-form-valid-button\"\n                  size=\"large\"\n                  type=\"primary\"\n                  onClick={this.getVerCode}\n                >\n                  获取验证码\n                </Button>\n              )}\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n                onClick={this.login}\n                size=\"large\"\n              >\n                登录\n              </Button>\n              <div className=\"login-form-register\">\n                <a onClick={this.onRegister}>注册</a>\n              </div>\n            </Form>\n          </Spin>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(Login);\n","import Login from './Login';\nexport default Login;","import React, { Component } from \"react\";\nimport \"./NoticeList.less\";\nimport { Collapse, Icon, Alert, Empty, Button, Spin } from \"antd\";\nimport http from \"../../../utils/api\";\nconst { Panel } = Collapse;\nconst noticeId = \"620317621824\";\n\nclass NoticeList extends Component {\n  state = {\n    collapsed: false,\n    imageUrl: \"\",\n    userInfo: {},\n    currentNotice: [],\n    historyNotice: [],\n    showSpin:false\n  };\n  componentDidMount = async () => {\n    let res;\n    this.setState({\n      showSpin:true\n    })\n    try {\n      res = await http().getTable({\n        resid: noticeId\n      });\n      const [current, ...history] = res.data.data;\n      this.setState({\n        currentNotice: current,\n        historyNotice: history\n      });\n    } catch (error) {}\n    this.setState({\n      showSpin:false\n    })\n  };\n  render() {\n    const customPanelStyle = {\n      background: \"#f7f7f7\",\n      borderRadius: 4,\n      marginBottom: 24,\n      border: 0,\n      overflow: \"hidden\"\n    };\n    const { currentNotice, historyNotice,showSpin } = this.state;\n    return (\n      <div className=\"noticeList\">\n        <Spin spinning={showSpin}>\n        <h2>最新通知</h2>\n        <Alert\n          message={currentNotice.title}\n          description={<div><span>{currentNotice.content}</span><span className='noticeList-time'>{currentNotice.publishTime}</span></div>}\n          type=\"info\"\n          showIcon\n          // closeText=\"Close\"\n        />\n        <div className=\"noticeList-line\"> </div>\n        <h3>历史通知</h3>\n        {historyNotice.length > 0 ? (\n          <Collapse\n            bordered={false}\n            className='noticeList-Collapse'\n            defaultActiveKey={[\"0\"]}\n            expandIcon={({ isActive }) => (\n              <Icon type=\"caret-right\" rotate={isActive ? 90 : 0} />\n            )}\n          >\n            {historyNotice.map((item,index) => {\n              return (\n                <Panel header={<div><span>{item.title}</span><span className='noticeList-time'>{item.publishTime}</span></div>} key={index} style={customPanelStyle}>\n                  <p>{item.content}</p>\n                </Panel>\n              );\n            })}\n          </Collapse>\n        ) : (\n          <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n        )}\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default NoticeList;\n","import NoticeList from './NoticeList';\nexport default NoticeList;","import React, { Component } from \"react\";\nimport \"./ApplyDataBase.less\";\nimport {\n  Collapse,\n  Icon,\n  Input,\n  Upload,\n  Button,\n  Form,\n  Checkbox,\n  List,\n  Skeleton,\n  Avatar,\n  message,\n  Popconfirm,\n  Spin\n} from \"antd\";\n\nclass ApplyDataBase extends Component {\n  state = {\n    imageUrl: \"\",\n    applyList: [],\n    page: \"listPage\",\n    record: {},\n    loading: false\n  };\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount = async () => {\n  };\n  render() {\n    const prop = this.props;\n    const {  loading  } = this.state;\n   \n\n    return (\n      <div className=\"applyDataBase\">\n        <div className=\"applyDataBase-btns\">\n          <Button\n            icon={\n              prop.page === \"applyPage\" ||\n              prop.page === \"checkPage\" ||\n              prop.page === \"schedulePage\"\n                ? \"rollback\"\n                : \"plus\"\n            }\n            type=\"primary\"\n            onClick={\n              prop.page === \"applyPage\" ||\n              prop.page === \"checkPage\" ||\n              prop.page === \"schedulePage\"\n                ? this.props.onBack\n                : this.props.onApply\n            }\n            className=\"applyDataBase-btn\"\n          >\n            {prop.page === \"applyPage\" ||\n            prop.page === \"checkPage\" ||\n            prop.page === \"schedulePage\"\n              ? \"返回\"\n              : prop.addText || \"申请\"}\n          </Button>\n          <a\n            className=\"applyDataBase-photoBtn\"\n            type=\"link\"\n            onClick={\n              prop.page === \"showImagePage\"\n                ? this.props.onBack\n                : this.props.showImage\n            }\n          >\n            {prop.isShowImage\n              ? \"\"\n              : prop.page === \"showImagePage\"\n              ? \"返回\"\n              : prop.page === \"listPage\"\n              ? \"申请流程图\"\n              : \"\"}\n          </a>\n        </div>\n        <Spin spinning={loading}>\n          <div className=\"applyDataBase-content\">\n            {(() => {\n              switch (prop.page) {\n                case \"listPage\":\n                  return prop.pages.listPage;\n                case \"applyPage\":\n                  return prop.pages.applyPage;\n                case \"checkPage\":\n                  return prop.pages.checkPage;\n                case \"showImagePage\":\n                  return prop.pages.showImagePage;\n                case \"schedulePage\":\n                  return prop.pages.schedulePage;\n              }\n            })()}\n          </div>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(ApplyDataBase);\n","import ApplyDataBase from './ApplyDataBase';\nexport default ApplyDataBase;","import { ShowImage } from './ShowImage';\nexport default ShowImage;","import React, { Component } from \"react\";\nimport \"./ShowImage.less\";\nexport const ShowImage = props => {\n  console.log(\"proprs\", props);\n  return (\n    <div className=\"showImage\">\n      <img src={props.image} style={{border:\"1px solid #ccc\",height:\"600px\"}}/>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Card, Icon, Skeleton, Avatar } from \"antd\";\nconst { Meta } = Card;\nconst CommitCard = (record) => {\n  return (\n    <div>\n      <Card style={{ width: 300, marginTop: 16 }}>\n        <Skeleton loading={record.data?false:true}  avatar active>\n          <Meta\n            avatar={<Icon type=\"user\"></Icon>}\n            title={<div>批注人：{record.data.person}</div>}\n            description={\n              <div>\n                <div>时间：{record.data.writeTime}</div>\n                <div>建议：{record.data.suggest}</div>\n              </div>\n            }\n          />\n        </Skeleton>\n      </Card>\n    </div>\n  );\n};\nexport default CommitCard;\n","import CommitCard from './CommitCard';\nexport default CommitCard;","import React, { Component } from \"react\";\nimport \"./ApplyProject.less\";\nimport ReactToPrint from \"react-to-print\";\nimport ApplyDataBase from \"../ApplyDataBase\";\nimport {\n  Collapse,\n  Icon,\n  Input,\n  Button,\n  Form,\n  Checkbox,\n  List,\n  Skeleton,\n  Avatar,\n  message,\n  Popconfirm,\n  Spin,\n  Card,\n  Steps,\n  Popover,\n  Tag,\n  Modal\n} from \"antd\";\nimport http from \"../../../utils/api\";\nimport ShowImage from \"../ApplyDataBase/ShowImage\";\nimport CommitCard from \"./CommitCard\";\nimport applyProjectImage1 from \"../../../assets/images/applyProject1.jpg\";\nimport applyProjectImage2 from \"../../../assets/images/applyProject2.jpg\";\nimport TextArea from \"antd/lib/input/TextArea\";\nconst applyProjectId = \"620475440053\";\nconst suggestId = \"621432069832\";\nconst { Meta } = Card;\nconst { Step } = Steps;\n\nconst customDot = (dot, { status, index }) => (\n  <Popover content={<span>{status}</span>}>{dot}</Popover>\n);\n\nclass ApplyProject extends Component {\n  state = {\n    imageUrl: \"\",\n    applyList: [],\n    page: \"listPage\",\n    record: {},\n    postilData: [],\n    loading: false,\n  };\n  componentDidMount = async () => {\n    await this.getApplyData();\n  };\n\n  //获取申请记录\n  getApplyData = async () => {\n    let res;\n    this.setState({\n      loading: true\n    });\n    try {\n      res = await http().getTableNew({\n        resid: applyProjectId,\n        subresid: suggestId\n      });\n      if (res.data.Error == 0) {\n        let data = [];\n        res.data &&\n          res.data.data &&\n          res.data.data.map(item => {\n            let studyType = item.studyType && item.studyType.split(\",\");\n            item.studyType = studyType;\n            data.push(item);\n          });\n        this.setState({\n          applyList: data\n        });\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n    this.setState({\n      loading: false\n    });\n  };\n\n  handleSubmit = (e, type) => {\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.onSubmit(values, type);\n      }\n    });\n  };\n  //提交列表中的一条记录\n  onSubmitRecord = async record => {\n    let res;\n    record.isSubmit = \"Y\";\n    try {\n      res = await http().modifyRecords({\n        resid: applyProjectId,\n        data: [record]\n      });\n      if (res.data.Error == 0) {\n        message.success(\"提交成功\");\n        await this.getApplyData();\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  //提交表单\n  onSubmit = async (values, type) => {\n    let res;\n    let obj = {};\n    let study = values.study && values.study.toString();\n    if (type === 1) {\n      obj = {\n        doctor: values.doctor,\n        hospital: values.hospital,\n        task: values.task,\n        phoneNumber: values.phone,\n        email: values.email,\n        taskPrincipal: values.taskPrincipal,\n        studyType: values.studyType,\n        inlandUnit: values.inlandUnit,\n        foreignUnit: values.foreignUnit,\n        studyReason: values.studyReason,\n        studyArea: values.studyArea,\n        studyTarget: values.studyTarget,\n        studyDescription: values.studyDescription,\n        studyLast: values.studyLast,\n        studySelected: values.studySelected,\n        studyAssess: values.studyAssess,\n        studyCheck: values.studyCheck,\n        staticMethod: values.staticMethod,\n        standard: values.standard,\n        sure: values.sure,\n        committee: values.committee,\n        referenceData: values.referenceData\n      };\n    } else {\n      obj = {\n        doctor: values.doctor,\n        hospital: values.hospital,\n        task: values.task,\n        phoneNumber: values.phone,\n        email: values.email,\n        taskPrincipal: values.taskPrincipal,\n        studyType: values.studyType,\n        inlandUnit: values.inlandUnit,\n        foreignUnit: values.foreignUnit,\n        studyReason: values.studyReason,\n        studyArea: values.studyArea,\n        studyTarget: values.studyTarget,\n        studyDescription: values.studyDescription,\n        studyLast: values.studyLast,\n        studySelected: values.studySelected,\n        studyAssess: values.studyAssess,\n        studyCheck: values.studyCheck,\n        staticMethod: values.staticMethod,\n        standard: values.standard,\n        sure: values.sure,\n        committee: values.committee,\n        referenceData: values.referenceData,\n        isSubmit: \"Y\"\n      };\n    }\n    try {\n      res = await http().addRecords({\n        resid: applyProjectId,\n        data: [obj]\n      });\n      if (res.data.Error == 0) {\n        message.success(\"申请成功！\");\n      }\n      this.setState({\n        page: \"listPage\"\n      });\n      await this.getApplyData();\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  onApply = () => {\n    this.setState({\n      page: \"applyPage\"\n    });\n  };\n  onLookSchedule = record => {\n    const modal = Modal.success({\n      title: \"进度查询\",\n      width: 500,\n      content: (\n        <div style={{marginTop:\"20px\"}}>\n          <div style={{marginBottom:\"20px\"}}>课题名称：{record.task}</div>\n          <Steps\n            current={\n              record.status === \"通过\" || record.status === \"拒绝\" ? 2 : 1\n            }\n            progressDot={customDot}\n          >\n            <Step title=\"提交报告\" />\n            <Step title=\"审核\" />\n            <Step title=\"完成\" />\n          </Steps>\n          ,\n        </div>\n      )\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  onCheck = item => {\n    this.setState({\n      page: \"checkPage\",\n      record: item\n    });\n  };\n  showImage = () => {\n    this.setState({\n      page: \"showImagePage\"\n    });\n  };\n  // //打印\n  print = () => {\n    var printBox = document.getElementById(\"applyProjectForm\");\n    //拿到打印的区域的html内容\n    var newContent = printBox.innerHTML;\n    //将旧的页面储存起来，当打印完成后返给给页面。\n    var oldContent = document.body.innerHTML;\n    //赋值给body\n    document.body.innerHTML = newContent;\n    //执行window.print打印功能\n    window.print();\n    // 重新加载页面，以刷新数据。以防打印完之后，页面不能操作的问题\n    window.location.reload();\n    document.body.innerHTML = oldContent;\n    return false;\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const {\n      imageUrl,\n      applyList,\n      loading,\n      page,\n      record,\n      postilData\n    } = this.state;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const options = [\n      { label: \"单中心研究\", value: \"单中心研究\" },\n      { label: \"多中心研究\", value: \"多中心研究\" },\n      { label: \"第三方研究\", value: \"第三方研究\" },\n      { label: \"所有研究\", value: \"所有研究\" }\n    ];\n    const pages = {\n      showImagePage: (\n        <React.Fragment>\n          <ShowImage image={applyProjectImage1}></ShowImage>\n          <ShowImage image={applyProjectImage2}></ShowImage>\n        </React.Fragment>\n      ),\n      checkPage: (\n        <React.Fragment>\n          <Form\n            {...formItemLayout}\n            // onSubmit={this.handleSubmit}\n            className=\"applyProject-form\"\n            id=\"applyProjectForm\"\n          >\n            <div className=\"applyProject-form-contain\">\n              <div className=\"applyProject-form-contain-info\">\n                <h1 style={{ textAlign: \"center\" }}>CHASE-IBD专项课题申请表</h1>\n                <h3 style={{ textAlign: \"center\" }}>基本信息</h3>\n                <Form.Item label={<span>课题名称&nbsp;</span>}>\n                  <span>{record.task}</span>\n                </Form.Item>\n                <Form.Item label={<span>课题负责人&nbsp;</span>}>\n                  <span>{record.taskPrincipal}</span>\n                </Form.Item>\n                <Form.Item label={<span>申请人&nbsp;</span>}>\n                  <span>{record.doctor}</span>\n                </Form.Item>\n                <Form.Item label={<span>所属单位&nbsp;</span>}>\n                  <span>{record.hospital}</span>\n                </Form.Item>\n                <Form.Item label={<span>职称&nbsp;</span>}>\n                  <span>{record.post}</span>\n                </Form.Item>\n                <Form.Item label={<span>联系电话&nbsp;</span>}>\n                  <span>{record.phoneNumber}</span>\n                </Form.Item>\n                <Form.Item label={<span>E-mail&nbsp;</span>}>\n                  <span>{record.email}</span>\n                </Form.Item>\n                <Form.Item label={<span>拟定国内协作单位&nbsp;</span>}>\n                  <span>{record.inlandUnit}</span>\n                </Form.Item>\n                <Form.Item label={<span>拟定国际协作单位&nbsp;</span>}>\n                  <span>{record.foreignUnit}</span>\n                </Form.Item>\n                {/* <Form.Item label={<span>IBD治疗团队名单&nbsp;</span>}>\n            <span>{record.teamPeople}</span>&nbsp;&nbsp;\n            <span>{record.teamPeople2}</span>&nbsp;&nbsp;\n            <span>{record.teamPeople3}</span>&nbsp;&nbsp;\n          </Form.Item> */}\n                {/* <Form.Item label={<span>选择参与数据库研究&nbsp;</span>}>\n            <Checkbox.Group\n              options={options}\n              defaultValue={record.studyType}\n              onChange={this.onChangeCheckbox}\n            />\n          </Form.Item> */}\n                <h3 style={{ textAlign: \"center\" }}>研究内容</h3>\n                <Form.Item label={<span>研究的理由&nbsp;</span>}>\n                  <span>{record.studyReason}</span>\n                </Form.Item>\n                <Form.Item label={<span>研究区域&nbsp;</span>}>\n                  <span>{record.studyArea}</span>\n                </Form.Item>\n                <Form.Item\n                  label={\n                    <span>研究目标（主要目标，次要目标，附加目标）&nbsp;</span>\n                  }\n                >\n                  <span>{record.studyTarget}</span>\n                </Form.Item>\n                <Form.Item\n                  label={\n                    <span>研究终点（主要终点，次要终点，附加终点）&nbsp;</span>\n                  }\n                >\n                  <span>{record.studyLast}</span>\n                </Form.Item>\n                <Form.Item\n                  label={\n                    <span>\n                      研究设计与描述（研究描述，研究周期，研究设计，剂量和终点的合理性）&nbsp;\n                    </span>\n                  }\n                >\n                  <span>{record.studyDescription}</span>\n                </Form.Item>\n                <Form.Item\n                  label={\n                    <span>\n                      项目入选（入选标准，排除标准包括药物，治疗和饮食）&nbsp;\n                    </span>\n                  }\n                >\n                  <span>{record.studySelected}</span>\n                </Form.Item>\n                <Form.Item\n                  label={\n                    <span>研究终点（主要终点，次要终点，附加终点）&nbsp;</span>\n                  }\n                >\n                  <span>{record.studyLast}</span>\n                </Form.Item>\n                <Form.Item\n                  label={\n                    <span>评估（疗效评估，安全评估，其他评估）&nbsp;</span>\n                  }\n                >\n                  <span>{record.studyAssess}</span>\n                </Form.Item>\n                <Form.Item\n                  label={<span>实验室检查：检查具体指标参数&nbsp;</span>}\n                >\n                  <span>{record.studyCheck}</span>\n                </Form.Item>\n                <Form.Item\n                  label={\n                    <span>评估（疗效评估，安全评估，其他评估）&nbsp;</span>\n                  }\n                >\n                  <span>{record.studyAssess}</span>\n                </Form.Item>\n                <Form.Item\n                  label={\n                    <span>\n                      统计方法（统计分析计划，人口统计学和其他基线特征分析，疗效分析，药代动力学分析，药效学分析，安全分析）&nbsp;\n                    </span>\n                  }\n                >\n                  <span>{record.staticMethod}</span>\n                </Form.Item>\n                <Form.Item label={<span>中期分析和提前终止的标准&nbsp;</span>}>\n                  <span>{record.standard}</span>\n                </Form.Item>\n                <Form.Item label={<span>样本量的确定&nbsp;</span>}>\n                  <span>{record.sure}</span>\n                </Form.Item>\n                <Form.Item label={<span>伦理委员会&nbsp;</span>}>\n                  <span>{record.committee}</span>\n                </Form.Item>\n                <Form.Item label={<span>参考资料&nbsp;</span>}>\n                  <span>{record.referenceData}</span>\n                </Form.Item>\n              </div>\n              {record[\"621432069832\"] ? (\n                <div className=\"applyProject-form-contain-notice\">\n                  <span>来自数委会的批注</span>\n                  {record[\"621432069832\"] &&\n                    record[\"621432069832\"].map(item => {\n                      return (\n                        <CommitCard key={item.REC_ID} data={item}></CommitCard>\n                      );\n                    })}\n                </div>\n              ) : null}\n            </div>\n          </Form>\n          <Button\n            icon=\"download\"\n            type=\"primary\"\n            className=\"applyProject-form-print\"\n            onClick={this.print}\n          >\n            打印\n          </Button>\n        </React.Fragment>\n      ),\n      listPage: (\n        <React.Fragment>\n          <List\n            className=\"applyProject-content-list\"\n            itemLayout=\"horizontal\"\n            dataSource={applyList}\n            renderItem={item => (\n              <List.Item\n                actions={[\n                  <a\n                    key=\"list-loadmore-edit\"\n                    onClick={() => {\n                      this.onCheck(item);\n                    }}\n                  >\n                    查看\n                  </a>,\n                  item.isSubmit === \"Y\" ? (\n                    <a\n                      key=\"list-loadmore-edit\"\n                      onClick={() => {\n                        this.onLookSchedule(item);\n                      }}\n                    >\n                      进度查询\n                    </a>\n                  ) :  <Popconfirm\n                  title=\"你确定要提交吗\"\n                  onConfirm={() => {\n                    this.onSubmitRecord(item);\n                  }}\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                >\n                  <a key=\"list-loadmore-edit\">提交</a>\n                </Popconfirm>\n                ]}\n              >\n                {/* <Skeleton avatar title={false} loading={item.doctor} active> */}\n                <List.Item.Meta\n                  // avatar={\n                  //   <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n                  // }\n                  title={\n                    <React.Fragment>\n                      <a className=\"applyProject-content-list-word\" href=\"#\">\n                        课题名称:{item.task}\n                      </a>\n                      <a className=\"applyProject-content-list-word\" href=\"#\">\n                        所属单位:{item.hospital}\n                      </a>\n                    </React.Fragment>\n                  }\n                  description={\n                    <React.Fragment>\n                      <Tag\n                        color={\n                          item.status === \"通过\"\n                            ? \"geekblue\"\n                            : item.status === \"拒绝\"\n                            ? \"red\"\n                            : \"green\"\n                        }\n                      >\n                        {item.status}\n                      </Tag>{\" \"}\n                    </React.Fragment>\n                  }\n                />\n\n                <div>申请日期：{item.REC_CRTTIME}</div>\n                {/* </Skeleton> */}\n              </List.Item>\n            )}\n          />\n        </React.Fragment>\n      ),\n      schedulePage: (\n        <div>\n          <h1 style={{ textAlign: \"center\" }}>{record.task}</h1>\n          <Steps\n            current={\n              record.status === \"通过\" || record.status === \"拒绝\" ? 2 : 1\n            }\n            progressDot={customDot}\n          >\n            <Step title=\"提交报告\" />\n            <Step title=\"审核\" />\n            <Step title=\"完成\" />\n          </Steps>\n          ,\n        </div>\n      ),\n      applyPage: (\n        <Form\n          {...formItemLayout}\n          // onSubmit={this.handleSubmit}\n          className=\"applyProject-form\"\n        >\n          <div className=\"applyProject-form-contain\">\n            <div className=\"applyProject-form-contain-info\">\n              <h1 style={{ textAlign: \"center\" }}>CHASE-IBD专项课题申请表</h1>\n              <h3 style={{ textAlign: \"center\" }}>基本信息</h3>\n\n              <Form.Item label={<span>\b课题名称&nbsp;</span>}>\n                {getFieldDecorator(\"task\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入\b课题名称\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label={<span>课题负责人&nbsp;</span>}>\n                {getFieldDecorator(\"taskPrincipal\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入\b课题负责人\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label={<span>申请人&nbsp;</span>}>\n                {getFieldDecorator(\"doctor\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入申请人\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label={<span>所属单位&nbsp;</span>}>\n                {getFieldDecorator(\"hospital\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入所属单位\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label={<span>职称&nbsp;</span>}>\n                {getFieldDecorator(\"post\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入您的职称！\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label={<span>联系电话&nbsp;</span>}>\n                {getFieldDecorator(\"phone\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入您的联系电话!\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label={<span>E-mail&nbsp;</span>}>\n                {getFieldDecorator(\"email\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入您的邮箱!\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label={<span>拟定国内协作单位&nbsp;</span>}>\n                {getFieldDecorator(\"inlandUnit\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入拟定国内协作单位!\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label={<span>拟定国际协作单位&nbsp;</span>}>\n                {getFieldDecorator(\"forignUnit\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入拟定国际协作单位!\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <h3 style={{ textAlign: \"center\" }}>研究内容</h3>\n              <Form.Item label={<span>研究的理由&nbsp;</span>}>\n                {getFieldDecorator(\"studyReason\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入研究的理由!\",\n                      whitespace: true\n                    }\n                  ]\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item label={<span>研究区域&nbsp;</span>}>\n                {getFieldDecorator(\"studyArea\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入研究区域!\",\n                      whitespace: true\n                    }\n                  ]\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>研究目标（主要目标，次要目标，附加目标）&nbsp;</span>\n                }\n              >\n                {getFieldDecorator(\"studyTarget\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入研究目标!\",\n                      whitespace: true\n                    }\n                  ]\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>研究终点（主要终点，次要终点，附加终点）&nbsp;</span>\n                }\n              >\n                {getFieldDecorator(\"studyLast\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入研究终点!\",\n                      whitespace: true\n                    }\n                  ]\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    研究设计与描述（研究描述，研究周期，研究设计，剂量和终点的合理性）&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator(\"studyDescription\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入研究设计与描述!\",\n                      whitespace: true\n                    }\n                  ]\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    项目入选（入选标准，排除标准包括药物，治疗和饮食）&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator(\"studySelected\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入项目入选!\",\n                      whitespace: true\n                    }\n                  ]\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item\n                label={<span>评估（疗效评估，安全评估，其他评估）&nbsp;</span>}\n              >\n                {getFieldDecorator(\"studyAssess\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入评估!\",\n                      whitespace: true\n                    }\n                  ]\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item\n                label={<span>实验室检查：检查具体指标参数&nbsp;</span>}\n              >\n                {getFieldDecorator(\"studyCheck\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入实验室检查!\",\n                      whitespace: true\n                    }\n                  ]\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    统计方法（统计分析计划，人口统计学和其他基线特征分析，疗效分析，药代动力学分析，药效学分析，安全分析）&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator(\"staticMethod\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入统计方法!\",\n                      whitespace: true\n                    }\n                  ]\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item label={<span>中期分析和提前终止的标准&nbsp;</span>}>\n                {getFieldDecorator(\"standard\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入中期分析和提前终止的标准!\",\n                      whitespace: true\n                    }\n                  ]\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item label={<span>样本量的确定&nbsp;</span>}>\n                {getFieldDecorator(\"sure\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入样本量的确定!\",\n                      whitespace: true\n                    }\n                  ]\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item label={<span>伦理委员会&nbsp;</span>}>\n                {getFieldDecorator(\"committee\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入伦理委员会!\",\n                      whitespace: true\n                    }\n                  ]\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n              <Form.Item label={<span>参考资料&nbsp;</span>}>\n                {getFieldDecorator(\"referenceData\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入参考资料!\",\n                      whitespace: true\n                    }\n                  ]\n                })(<TextArea className=\"applyProject-form-textarea\" />)}\n              </Form.Item>\n            </div>\n          </div>\n          <Button\n            className=\"applyProject-form-save\"\n            htmlType=\"submit\"\n            onClick={() => {\n              this.handleSubmit(this, 1);\n            }}\n          >\n            保存\n          </Button>\n          <Button\n            type=\"primary\"\n            className=\"applyProject-form-submit\"\n            htmlType=\"submit\"\n            onClick={() => {\n              this.handleSubmit(this, 2);\n            }}\n          >\n            提交\n          </Button>\n        </Form>\n      )\n    };\n\n    return (\n      <React.Fragment>\n        {/* <ReactToPrint\n          trigger={() => (\n            <Button\n              icon=\"download\"\n              type=\"primary\"\n              className=\"applyDataBase-form-print\"\n            >\n              打印\n            </Button>\n          )}\n          content={() => this.componentRef}\n        /> */}\n        <ApplyDataBase\n          pages={pages}\n          page={this.state.page}\n          onBack={this.onBack}\n          showImage={this.showImage}\n          onApply={this.onApply}\n          ref={el => (this.componentRef = el)}\n        ></ApplyDataBase>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Form.create()(ApplyProject);\n","import ApplyProject from './ApplyProject';\nexport default ApplyProject;","import React, { Component } from \"react\";\nimport \"./ActApply.less\";\nimport ApplyDataBase from \"../ApplyDataBase\";\nimport {\n  Collapse,\n  Icon,\n  Input,\n  Upload,\n  Button,\n  Form,\n  Checkbox,\n  List,\n  Skeleton,\n  Avatar,\n  message,\n  Popconfirm,\n  Spin,\n  Tag,\n  Modal,\n  Steps,\n  Popover\n} from \"antd\";\nimport http from \"../../../utils/api\";\nimport ShowImage from \"../ApplyDataBase/ShowImage\";\nimport ReactToPrint from \"react-to-print\";\nimport applyDataBaseImage from \"../../../assets/images/applyDataBase.jpg\";\nconst applyDataBaseId = \"620384838453\";\nconst { Step } = Steps;\n\nconst customDot = (dot, { status, index }) => (\n  <Popover content={<span>{status}</span>}>{dot}</Popover>\n);\n\nconst uploadFile = (file, url) => {\n  return new Promise((resolve, reject) => {\n    let fd = new FormData();\n    fd.append(\"file\", file, file.name);\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", url);\n    xhr.onload = () => {\n      const data = JSON.parse(xhr.response);\n      if (xhr.status === 200 && (data.error === 0 || data.error === \"0\")) {\n        const imgUrl = data.data;\n        resolve(imgUrl);\n      } else {\n        reject(data);\n      }\n    };\n    xhr.send(fd);\n  });\n};\nclass ActApply extends Component {\n  state = {\n    imageUrl: \"\",\n    applyList: [],\n    page: \"listPage\",\n    record: {},\n    loading: false\n  };\n  componentDidMount() {\n    this.getApplyData();\n  }\n\n  //获取申请记录\n  getApplyData = async () => {\n    let res;\n    this.setState({\n      loading: true\n    });\n    try {\n      res = await http().getTable({\n        resid: applyDataBaseId\n      });\n      let data = [];\n      res.data &&\n        res.data.data &&\n        res.data.data.map(item => {\n          let studyType = item.studyType && item.studyType.split(\",\");\n          item.studyType = studyType;\n          data.push(item);\n        });\n      if (res.data.error == 0) {\n        this.setState({\n          applyList: data\n        });\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n    this.setState({\n      loading: false\n    });\n  };\n\n  handleSubmit = (e, type) => {\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.onSubmit(values, type);\n      }\n    });\n  };\n  //提交列表中的一条记录\n  onSubmitRecord = async record => {\n    let res;\n    record.isSubmit = \"Y\";\n    try {\n      res = await http().modifyRecords({\n        resid: applyDataBaseId,\n        data: [record]\n      });\n      if (res.data.Error == 0) {\n        message.success(\"提交成功\");\n        await this.getApplyData();\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n\n  //上传文件\n  handleUploadFile = async fileInfo => {\n    const file = fileInfo.file;\n    const bucketname = \"realsun\";\n    const type = \"\";\n    const fileUrl = `http://ivf.realsun.me:9001/api/AliyunOss/PutOneImageObject?bucketname=${encodeURIComponent(\n      bucketname\n    )}&srctype=${encodeURIComponent(type)}`;\n    try {\n      await uploadFile(file, fileUrl).then(imageUrl => {\n        this.setState({\n          imageUrl\n        });\n      });\n    } catch (err) {\n      return message.error(err.message);\n    }\n  };\n  //提交表单\n  onSubmit = async (values, type) => {\n    let res;\n    let obj = {};\n    let study = values.study && values.study.toString();\n    if (type === 1) {\n      obj = {\n        doctor: values.doctor,\n        hospital: values.hospital,\n        post: values.post,\n        phoneNumber: values.phone,\n        email: values.email,\n        teamPeople: values.teamPeople,\n        teamPeople2: values.teamPeople2,\n        teamPeople3: values.teamPeople3,\n        studyType: values.study,\n        CDPatientNumber: values.CDNumber,\n        UCPatientNumber: values.UCNumber,\n        doctorPhoto: this.state.imageUrl,\n        studyType: study\n      };\n    } else {\n      obj = {\n        doctor: values.doctor,\n        hospital: values.hospital,\n        post: values.post,\n        phoneNumber: values.phone,\n        email: values.email,\n        teamPeople: values.teamPeople,\n        teamPeople2: values.teamPeople2,\n        teamPeople3: values.teamPeople3,\n        studyType: values.study,\n        CDPatientNumber: values.CDNumber,\n        UCPatientNumber: values.UCNumber,\n        doctorPhoto: this.state.imageUrl,\n        studyType: study,\n        isSubmit: \"Y\"\n      };\n    }\n    try {\n      res = await http().addRecords({\n        resid: applyDataBaseId,\n        data: [obj]\n      });\n      if (res.data.Error == 0) {\n        message.success(\"申请成功！\");\n      }\n      this.setState({\n        page: \"listPage\"\n      });\n      this.getApplyData();\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  print = () => {\n    var printBox = document.getElementById(\"applyDataBaseForm\");\n    //拿到打印的区域的html内容\n    var newContent = printBox.innerHTML;\n    //将旧的页面储存起来，当打印完成后返给给页面。\n    var oldContent = document.body.innerHTML;\n    //赋值给body\n    document.body.innerHTML = newContent;\n    //执行window.print打印功能\n    window.print();\n    // 重新加载页面，以刷新数据。以防打印完之后，页面不能操作的问题\n    window.location.reload();\n    document.body.innerHTML = oldContent;\n    return false;\n  };\n  getBase64 = (img, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => callback(reader.result));\n    reader.readAsDataURL(img);\n  };\n  handleChange = info => {\n    console.log(\"info\", info);\n    if (info.file.status === \"uploading\") {\n      return;\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      this.getBase64(info.file.originFileObj, imageUrl =>\n        this.setState({\n          imageUrl\n        })\n      );\n    }\n  };\n\n  onApply = () => {\n    this.setState({\n      page: \"applyPage\"\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  onCheck = item => {\n    console.log(\"aaa\");\n    this.setState({\n      page: \"checkPage\",\n      record: item\n    });\n  };\n  showImage = () => {\n    this.setState({\n      page: \"showImagePage\"\n    });\n  };\n\n  onLookSchedule = record => {\n    const modal = Modal.success({\n      title: \"进度查询\",\n      width: 500,\n      content: (\n        <div style={{ marginTop: \"20px\" }}>\n          <Steps\n            current={\n              record.status === \"通过\" || record.status === \"拒绝\" ? 2 : 1\n            }\n            progressDot={customDot}\n          >\n            <Step title=\"提交报告\" />\n            <Step title=\"审核\" />\n            <Step title=\"完成\" />\n          </Steps>\n          ,\n        </div>\n      )\n    });\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { imageUrl, applyList, loading, page, record } = this.state;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const uploadButton = (\n      <div>\n        <Icon type={this.state.loading ? \"loading\" : \"plus\"} />\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n    const options = [\n      { label: \"单中心研究\", value: \"单中心研究\" },\n      { label: \"多中心研究\", value: \"多中心研究\" },\n      { label: \"第三方研究\", value: \"第三方研究\" },\n      { label: \"所有研究\", value: \"所有研究\" }\n    ];\n    const pages = {\n      showImagePage: <ShowImage image={applyDataBaseImage}></ShowImage>,\n      checkPage: (\n        <React.Fragment>\n          <Form\n            {...formItemLayout}\n            // onSubmit={this.handleSubmit}\n            className=\"applyDataBase-form\"\n            id=\"applyDataBaseForm\"\n          >\n            <h1 style={{ textAlign: \"center\" }}>\n              参与CHASE-IBD数据库建设申请表\n            </h1>\n            <h3 style={{ textAlign: \"center\" }}>申请医疗单位</h3>\n            <Form.Item label={<span>申请人&nbsp;</span>}>\n              <span>{record.doctor}</span>\n            </Form.Item>\n            <Form.Item label={<span>所属单位&nbsp;</span>}>\n              <span>{record.hospital}</span>\n            </Form.Item>\n            <Form.Item label={<span>职称&nbsp;</span>}>\n              <span>{record.post}</span>\n            </Form.Item>\n            <Form.Item label={<span>联系电话&nbsp;</span>}>\n              <span>{record.phoneNumber}</span>\n            </Form.Item>\n            <Form.Item label={<span>E-mail&nbsp;</span>}>\n              <span>{record.email}</span>\n            </Form.Item>\n            <Form.Item label={<span>IBD治疗团队名单&nbsp;</span>}>\n              <span>{record.teamPeople}</span>&nbsp;&nbsp;\n              <span>{record.teamPeople2}</span>&nbsp;&nbsp;\n              <span>{record.teamPeople3}</span>&nbsp;&nbsp;\n            </Form.Item>\n            <Form.Item label={<span>选择参与数据库研究&nbsp;</span>}>\n              <Checkbox.Group\n                options={options}\n                defaultValue={record.studyType}\n                onChange={this.onChangeCheckbox}\n              />\n            </Form.Item>\n            <h3 style={{ textAlign: \"center\" }}>贵院目前患者数量</h3>\n\n            <Form.Item label={<span>CD患者数量&nbsp;</span>}>\n              <span>{record.CDPatientNumber}</span>\n            </Form.Item>\n            <Form.Item label={<span>UC患者数量&nbsp;</span>}>\n              <span>{record.UCPatientNumber}</span>\n            </Form.Item>\n            <Form.Item label={<span>医师执照&nbsp;</span>}>\n              <img\n                src={record.doctorPhoto}\n                alt=\"avatar\"\n                style={{ width: \"200px\", height: \"200px\" }}\n              />\n            </Form.Item>\n          </Form>\n\n          <Button\n            icon=\"download\"\n            type=\"primary\"\n            className=\"applyDataBase-form-print\"\n            onClick={this.print}\n          >\n            打印\n          </Button>\n        </React.Fragment>\n      ),\n      listPage: (\n        <List\n          className=\"applyDataBase-content-list\"\n          itemLayout=\"horizontal\"\n          dataSource={applyList}\n          renderItem={item => (\n            <List.Item\n              actions={[\n                <a\n                  key=\"list-loadmore-edit\"\n                  onClick={() => {\n                    this.onCheck(item);\n                  }}\n                >\n                  查看\n                </a>,\n                ,\n                item.isSubmit === \"Y\" ? (\n                  <a\n                    key=\"list-loadmore-edit\"\n                    onClick={() => {\n                      this.onLookSchedule(item);\n                    }}\n                  >\n                    进度查询\n                  </a>\n                ) : (\n                  <Popconfirm\n                    title=\"你确定要提交吗\"\n                    onConfirm={() => {\n                      this.onSubmitRecord(item);\n                    }}\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                  >\n                    <a key=\"list-loadmore-edit\">提交</a>\n                  </Popconfirm>\n                )\n              ]}\n            >\n              {/* <Skeleton avatar title={false} loading={item.doctor} active> */}\n              <List.Item.Meta\n                // avatar={\n                //   <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n                // }\n                title={\n                  <React.Fragment>\n                    <a className=\"applyDataBase-content-list-word\" href=\"#\">\n                      申请人:{item.doctor}\n                    </a>\n                    <a className=\"applyDataBase-content-list-word\" href=\"#\">\n                      所属单位:{item.hospital}\n                    </a>\n                  </React.Fragment>\n                }\n                description={\n                  <Tag\n                    color={\n                      item.approveStatus === \"通过\"\n                        ? \"geekblue\"\n                        : item.approveStatus === \"拒绝\"\n                        ? \"red\"\n                        : \"green\"\n                    }\n                  >\n                    {item.approveStatus}\n                  </Tag>\n                }\n              />\n              <div>申请日期：{item.REC_CRTTIME}</div>\n              {/* </Skeleton> */}\n            </List.Item>\n          )}\n        />\n      ),\n      applyPage: (\n        <Form\n          {...formItemLayout}\n          // onSubmit={this.handleSubmit}\n          className=\"applyDataBase-form\"\n        >\n          <h1 style={{ textAlign: \"center\" }}>参与CHASE-IBD数据库建设申请表</h1>\n          <h3 style={{ textAlign: \"center\" }}>申请医疗单位</h3>\n          <Form.Item label={<span>申请人&nbsp;</span>}>\n            {getFieldDecorator(\"doctor\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入申请人\",\n                  whitespace: true\n                }\n              ]\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>所属单位&nbsp;</span>}>\n            {getFieldDecorator(\"hospital\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入所属单位\",\n                  whitespace: true\n                }\n              ]\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>职称&nbsp;</span>}>\n            {getFieldDecorator(\"post\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入您的职称！\",\n                  whitespace: true\n                }\n              ]\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>联系电话&nbsp;</span>}>\n            {getFieldDecorator(\"phone\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入您的联系电话!\",\n                  whitespace: true\n                }\n              ]\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>E-mail&nbsp;</span>}>\n            {getFieldDecorator(\"email\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入您的邮箱!\",\n                  whitespace: true\n                }\n              ]\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>IBD治疗团队名单&nbsp;</span>}>\n            {getFieldDecorator(\"teamPeople\")(<Input />)}\n            {getFieldDecorator(\"teamPeople2\", {})(<Input />)}\n            {getFieldDecorator(\"teamPeople3\", {})(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>选择参与数据库研究&nbsp;</span>}>\n            {getFieldDecorator(\"study\", {\n              rules: []\n            })(\n              <Checkbox.Group\n                options={options}\n                onChange={this.onChangeCheckbox}\n              />\n            )}\n          </Form.Item>\n          <h3 style={{ textAlign: \"center\" }}>贵院目前患者数量</h3>\n\n          <Form.Item label={<span>CD患者数量：&nbsp;</span>}>\n            {getFieldDecorator(\"CDNumber\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入贵院的CD患者数量!\",\n                  whitespace: true\n                }\n              ]\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>UC患者数量：&nbsp;</span>}>\n            {getFieldDecorator(\"UCNumber\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入贵院的UC患者数量!\",\n                  whitespace: true\n                }\n              ]\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>医师执照：&nbsp;</span>}>\n            {getFieldDecorator(\"doctorPhoto\", {})(\n              <Upload\n                name=\"avatar\"\n                listType=\"picture-card\"\n                className=\"avatar-uploader\"\n                showUploadList={false}\n                customRequest={this.handleUploadFile}\n                // fileList={fileList}\n                onRemove={this.handleRemoveFile}\n                onChange={this.handleChange}\n              >\n                {imageUrl ? (\n                  <img src={imageUrl} alt=\"avatar\" style={{ width: \"100%\" }} />\n                ) : (\n                  uploadButton\n                )}\n              </Upload>\n            )}\n          </Form.Item>\n          <Button\n            className=\"applyDataBase-form-save\"\n            htmlType=\"submit\"\n            onClick={() => {\n              this.handleSubmit(this, 1);\n            }}\n          >\n            保存\n          </Button>\n          <Button\n            type=\"primary\"\n            className=\"applyDataBase-form-submit\"\n            htmlType=\"submit\"\n            onClick={() => {\n              this.handleSubmit(this, 2);\n            }}\n          >\n            提交\n          </Button>\n        </Form>\n      )\n    };\n\n    return (\n      <React.Fragment>\n        {/* <ReactToPrint\n          trigger={() => (\n            <Button\n            icon=\"download\"\n            type=\"primary\"\n            className=\"applyDataBase-form-print\"\n          >\n            打印\n          </Button> \n           \n          )}\n          content={() => this.componentRef}\n        /> */}\n\n        <ApplyDataBase\n          pages={pages}\n          page={this.state.page}\n          onBack={this.onBack}\n          showImage={this.showImage}\n          onApply={this.onApply}\n          ref={el => (this.componentRef = el)}\n        ></ApplyDataBase>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Form.create()(ActApply);\n","import ActApply from './ActApply';\nexport default ActApply;","import React, { Component } from \"react\";\nimport { Modal, Tag, Button, Table, message, Spin, Form, Input } from \"antd\";\nimport \"./ShowProject.less\";\nimport http from \"../../../utils/api\";\nconst applyProjectId = \"620475440053\";\nconst suggestId = \"621432069832\";\nconst { TextArea } = Input;\n\nclass ShowProject extends React.Component {\n  state = {\n    data: [{}],\n    page: \"listPage\",\n    spin: false,\n    record: {},\n    visible: false\n  };\n  componentDidMount = async () => {\n    http().clearCache()\n    await this.getData();\n  };\n  componentWillUnmount() {\n    // 卸载异步操作设置状态\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n  onCheck = record => {\n    this.setState({\n      page: \"checkPage\",\n      record\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  handleCancel = () => {\n    this.setState({\n      visible: false\n    });\n  };\n  onSuggest = () => {\n    this.setState({\n      visible: true\n    });\n  };\n  submitSuggest = async e => {\n    const { record } = this.state;\n    this.props.form.validateFieldsAndScroll(async (err, values) => {\n      if (err) {\n        return;\n      }\n      let res;\n      let data = [\n        {\n          suggest: values.suggest,\n          projectId: record.REC_ID\n        }\n      ];\n      try {\n        res = await http().addRecords({\n          resid: suggestId,\n          data\n        });\n        if (res.data.Error === 0) {\n          message.success(\"添加成功\");\n        }\n      } catch (error) {\n        message.error(error.message);\n      }\n      this.setState({\n        visible: false\n      });\n    });\n  };\n  getData = async () => {\n    this.setState({\n      spin: true\n    });\n    let res;\n    try {\n      res = await http().getTable({\n        resid: applyProjectId\n      });\n      if (res.data.error === 0) {\n        this.setState({\n          data: res.data.data\n        });\n      }\n    } catch (error) {}\n    this.setState({\n      spin: false\n    });\n  };\n\n  render() {\n    const { data, spin, page, record, visible } = this.state;\n    const columns = [\n      {\n        title: \"序号\",\n        dataIndex: \"number\",\n        key: \"number\",\n        width: 80,\n      },\n      {\n        title: \"申请时间\",\n        dataIndex: \"applyTime\",\n        key: \"applyTime\",\n        width: 150\n      },\n      {\n        title: \"课题名称\",\n        dataIndex: \"task\",\n        key: \"hospital\",\n        width: 150\n      },\n      {\n        title: \"申请人\",\n        dataIndex: \"doctor\",\n        key: \"doctor\",\n        width: 150\n      },\n      {\n        title: \"审批状态\",\n        dataIndex: \"status\",\n        key: \"status\",\n        width:150,\n        render:data =>{\n         return  <Tag color={data === '通过'?\"geekblue\" :data === '拒绝'?\"red\":\"green\"} >\n          {data}\n        </Tag>\n        }\n      },\n      // {\n      //   title: 'Tags',\n      //   key: 'tags',\n      //   dataIndex: 'tags',\n      //   render: tags => (\n      //     <span>\n      //       {tags.map(tag => {\n      //         let color = tag.length > 5 ? 'geekblue' : 'green';\n      //         if (tag === 'loser') {\n      //           color = 'volcano';\n      //         }\n      //         return (\n      //           <Tag color={color} key={tag}>\n      //             {tag.toUpperCase()}\n      //           </Tag>\n      //         );\n      //       })}\n      //     </span>\n      //   ),\n      // },\n    ];\n    return (\n      <div className=\"approveProjectList\">\n        {page === \"listPage\" ? (\n          <Spin spinning={spin}>\n            <Table\n              key=\"2\"\n              className=\"approveProjectList-table\"\n              columns={columns}\n              dataSource={data}\n              scroll={{ x: 1000, y: \"calc(100vh - 220px)\" }}\n            />\n          </Spin>\n        ) : null}\n      </div>\n    );\n  }\n}\nexport default Form.create()(ShowProject);\n","import ShowProject from  './ShowProject';\nexport default ShowProject;","import React, { Component } from \"react\";\nimport \"./MenuDataBase.less\";\nimport http from \"../../../utils/api\";\nimport { Form, message, Icon, Input, Button, Tabs } from \"antd\";\nimport NoticeList from \"../NoticeList\";\nimport ApplyDataBase from \"../ApplyDataBase\";\nimport ApplyProject from \"../ApplyProject\";\nimport ActApply from \"../ActApply\";\nimport ShowProject from \"../ShowProject\";\nconst { TabPane } = Tabs;\n\nclass MenuDataBase extends Component {\n  state = {\n  };\n\n  componentDidMount = () => {};\n\n  render() {\n    return (\n        <Tabs\n                defaultActiveKey=\"1\"\n                tabBarStyle={{\n                  height: \"70px\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  paddingLeft: \"50px\"\n                }}\n              >\n                <TabPane tab=\"通知\" key=\"1\">\n                 <NoticeList></NoticeList>\n                </TabPane>\n                <TabPane tab=\"申请加入数据库\" key=\"2\">\n                  <ActApply></ActApply>\n                </TabPane>\n                <TabPane tab=\"研究项目申请\" key=\"3\">\n                 <ApplyProject></ApplyProject>\n                </TabPane>\n                {/* <TabPane tab=\"申请流程说明\" key=\"4\">\n                  Content of Tab Pane 3\n                </TabPane> */}\n                <TabPane tab=\"项目公示\" key=\"4\">\n                  <ShowProject></ShowProject>\n                </TabPane>\n                {/* <TabPane tab=\"文件下载\" key=\"5\">\n                  Content of Tab Pane 3\n                </TabPane> */}\n              </Tabs>\n    );\n  }\n}\n\nexport default MenuDataBase;\n","import React, { Component } from \"react\";\nimport {\n  List,\n  Tag,\n  Divider,\n  Table,\n  message,\n  Popconfirm,\n  Button,\n  Form,\n  Input,\n  Spin,\n  Modal\n} from \"antd\";\nimport \"./EditNotice.less\";\nimport ApplyDataBase from \"../ApplyDataBase\";\nimport http from \"../../../utils/api\";\nimport TextArea from \"antd/lib/input/TextArea\";\nconst noticeId = \"620317621824\";\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 }\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 }\n  }\n};\nconst columns = props => {\n  const { onEdit, onPublish, data } = props;\n  return [\n    {\n      title: \"序号\",\n      dataIndex: \"number\",\n      key: \"number\",\n      width: 80\n    },\n    {\n      title: \"标题\",\n      dataIndex: \"title\",\n      key: \"title\",\n      width: 250,\n      render: text => <a>{text}</a>\n    },\n    {\n      title: \"消息内容\",\n      dataIndex: \"content\",\n      key: \"content\",\n      width: 400\n    },\n    {\n      title: \"发布者\",\n      dataIndex: \"publishPerson\",\n      key: \"publishPerson\",\n      width: 150\n    },\n    {\n      title: \"发布时间\",\n      dataIndex: \"publishTime\",\n      key: \"publishTime\",\n      width: 150\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: data => (\n        <Tag color={data === \"已发布\" ? \"geekblue\" : \"green\"}>{data}</Tag>\n      ),\n      width: 150\n    },\n    {\n      title: \"操作\",\n      key: \"action\",\n      width: 150,\n      render: (text, record) => (\n        <span>\n          <a\n            onClick={() => {\n              onEdit(record);\n            }}\n          >\n            修改\n          </a>\n          <Divider type=\"vertical\" />\n          {record.isPublish === \"Y\" ? (\n            <a\n              onClick={() => {\n                onPublish(record, 1);\n              }}\n            >\n              取消发布\n            </a>\n          ) : (\n            <a\n              onClick={() => {\n                onPublish(record, 2);\n              }}\n            >\n              发布\n            </a>\n          )}\n        </span>\n      )\n    }\n  ];\n};\n\nclass EditNotice extends React.Component {\n  state = {\n    data: [],\n    record: {},\n    page: \"listPage\", //当前页面\n    spin: false, //是否显示加载\n    visible: false, //是否显示添加模态框\n    editVisible: false //是否显示查看模态框\n  };\n  handleCancel = () => {\n    this.setState({\n      visible: false,\n      editVisible: false\n    });\n  };\n  save = async (e, type) => {\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.onSubmit(values, type);\n      }\n    });\n  };\n  //保存数据，如果 传入type是1 ，表示添加。type是2 的话表示 修改。\n  onSubmit = async (values, type) => {\n    let res;\n    if (type === 1) {\n      let data = [values];\n      try {\n        res = await http().addRecords({\n          resid: noticeId,\n          data\n        });\n        if (res.data.Error === 0) {\n          message.success(\"添加成功\");\n          this.setState({\n            visible: false\n          });\n          await this.getData();\n        }\n      } catch (error) {\n        message.error(error.message);\n      }\n    } else {\n      let data = [{ ...values, REC_ID: this.state.record.REC_ID }];\n      try {\n        res = await http().modifyRecords({\n          resid: noticeId,\n          data\n        });\n        if (res.data.Error === 0) {\n          message.success(\"修改成功\");\n          this.setState({\n            editVisible: false\n          });\n          await this.getData();\n        }\n      } catch (error) {\n        message.error(error.message);\n      }\n    }\n  };\n\n  publish = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  onPublish = async (record, type) => {\n    if (type == 1) {\n      record.isPublish = \"N\";\n    } else {\n      record.isPublish = \"Y\";\n    }\n    let res;\n    try {\n      res = await http().modifyRecords({\n        resid: noticeId,\n        data: [record]\n      });\n      if (res.data.Error === 0) {\n        message.success(\"发布成功\");\n        await this.getData();\n      }\n    } catch (error) {}\n  };\n  renderContent = () => {\n    let page = this.state.page;\n    switch (page) {\n      case \"listPage\":\n        return this.renderListPage();\n      case \"addPage\":\n        return this.renderAddPage();\n      case \"checkPage\":\n        return this.renderCheckPage();\n    }\n  };\n  renderListPage = () => {\n    let data = this.state.data;\n    let { spin, record } = this.state;\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <div className=\"editNotice\">\n        <Button type=\"primary\" className=\"editNotice-add\" onClick={this.onAdd}>\n          添加新通知\n        </Button>\n        <Spin spinning={spin}>\n          <Table\n            key=\"3\"\n            className=\"editNotice-table\"\n            columns={columns({\n              onEdit: record => {\n                this.onEdit(record);\n              },\n              onPublish: (record, type) => {\n                this.onPublish(record, type);\n              },\n              data: data\n            })}\n            scroll={{ x: 1000, y: \"calc(100vh - 260px)\" }}\n            dataSource={data}\n          />\n          <Modal\n            title=\"添加新通知\"\n            visible={this.state.visible}\n            width={700}\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n            destroyOnClose={true}\n            footer={[\n              <Button key=\"back\" onClick={this.handleCancel}>\n                取消\n              </Button>,\n              <Button\n                key=\"submit\"\n                type=\"primary\"\n                onClick={() => {\n                  this.save(1);\n                }}\n              >\n                保存\n              </Button>,\n              <Button key=\"submit\" type=\"primary\" onClick={this.publish}>\n                发布\n              </Button>\n            ]}\n          >\n            <Form {...formItemLayout} className=\"editNotice-form\">\n              {/* <h1>消息编辑</h1> */}\n              <Form.Item\n                className=\"editNotice-form-item\"\n                label={<span>标题&nbsp;</span>}\n              >\n                {getFieldDecorator(\"title\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入标题\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                className=\"editNotice-form-item\"\n                label={<span>消息内容&nbsp;</span>}\n              >\n                {getFieldDecorator(\"content\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入消息内容\",\n                      whitespace: true\n                    }\n                  ]\n                })(<TextArea className=\"editNotice-form-item-textarea\" />)}\n              </Form.Item>\n            </Form>\n          </Modal>\n          <Modal\n            title=\"修改通知\"\n            visible={this.state.editVisible}\n            width={700}\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n            destroyOnClose={true}\n            footer={[\n              <Button key=\"back\" onClick={this.handleCancel}>\n                取消\n              </Button>,\n              <Button\n                key=\"submit\"\n                type=\"primary\"\n                onClick={() => {\n                  this.save(2);\n                }}\n              >\n                保存\n              </Button>\n            ]}\n          >\n            <Form {...formItemLayout} className=\"editNotice-form\">\n              {/* <h1>消息编辑</h1> */}\n              <Form.Item\n                className=\"editNotice-form-item\"\n                label={<span>标题&nbsp;</span>}\n              >\n                {getFieldDecorator(\"title\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入标题\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: record.title\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                className=\"editNotice-form-item\"\n                label={<span>消息内容&nbsp;</span>}\n              >\n                {getFieldDecorator(\"content\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入消息内容\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: record.content\n                })(<TextArea className=\"editNotice-form-item-textarea\" />)}\n              </Form.Item>\n            </Form>\n          </Modal>\n        </Spin>\n      </div>\n    );\n  };\n  // renderCheckPage = () => {\n  //   const { getFieldDecorator } = this.props.form;\n  //   let record = this.state.record;\n  //   return (\n  //     <div className=\"editNotice\">\n  //       <Button type=\"primary\" className=\"editNotice-add\" onClick={this.onBack}>\n  //         返回\n  //       </Button>\n\n  //     </div>\n  //   );\n  // };\n  // renderAddPage = () => {\n  //   const { getFieldDecorator } = this.props.form;\n  //   return (\n  //     <div className=\"editNotice\">\n  //       <Button type=\"primary\" className=\"editNotice-add\" onClick={this.onBack}>\n  //         返回\n  //       </Button>\n\n  //     </div>\n  //   );\n  // };\n  componentDidMount = async () => {\n    http().clearCache()\n    await this.getData();\n  };\n  getData = async () => {\n    let res;\n    this.setState({\n      spin: true\n    });\n    try {\n      res = await http().getTable({\n        resid: noticeId\n      });\n      // if(res.data.error === 0){\n      this.setState({\n        data: res.data.data\n      });\n      // }\n    } catch (error) {}\n    this.setState({\n      spin: false\n    });\n  };\n  onAdd = () => {\n    this.setState({\n      // page: \"addPage\",\n      visible: true\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  onEdit = record => {\n    this.setState({\n      editVisible: true,\n      record\n    });\n  };\n  render() {\n    const { data, record, page } = this.state;\n\n    return this.renderContent();\n  }\n}\nexport default Form.create()(EditNotice);\n","import EditNotice from  './EditNotice';\nexport default EditNotice;","import React, { Component } from \"react\";\nimport {\n  List,\n  Tag,\n  Divider,\n  Table,\n  message,\n  Form,\n  Button,\n  Checkbox,\n  Spin,\n  Modal,\n  Input\n} from \"antd\";\nimport \"./ApproveList.less\";\nimport http from \"../../../utils/api\";\nconst applyDataBaseId = \"621790784304\"; //数据库申请表-审核\nconst { TextArea } = Input;\n\nclass ApproveList extends React.Component {\n  state = {\n    data: [{}],\n    record: {},\n    page: \"listPage\",\n    spin: false,\n    visible: false\n  };\n  componentDidMount = async () => {\n    await this.getData();\n  };\n  getData = async () => {\n    this.setState({\n      spin: true\n    });\n    let res;\n    try {\n      res = await http().getTable({\n        resid: applyDataBaseId\n      });\n      if (res.data.error === 0) {\n        this.setState({\n          data: res.data.data\n        });\n      }\n    } catch (error) {}\n    this.setState({\n      spin: false\n    });\n  };\n  onCheck = record => {\n    this.setState({\n      page: \"checkPage\",\n      record\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  onPassOrReject = async type => {\n    http().clearCache();\n    let res;\n    let data;\n    if (type === 1) {\n      data = [\n        {\n          ...this.state.record,\n          isPass: \"Y\"\n        }\n      ];\n    } else {\n      data = [\n        {\n          ...this.state.record,\n          isPass: \"N\"\n        }\n      ];\n    }\n    try {\n      res = await http().modifyRecords({\n        resid: applyDataBaseId,\n        data\n      });\n      if (res.data.Error === 0) {\n        message.success(\"操作成功\");\n      }\n      this.setState({\n        page: \"listPage\"\n      });\n      await this.getData();\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  render() {\n    const { data, record, page, spin, visible } = this.state;\n    const options = [\n      { label: \"单中心研究\", value: \"单中心研究\" },\n      { label: \"多中心研究\", value: \"多中心研究\" },\n      { label: \"第三方研究\", value: \"第三方研究\" },\n      { label: \"所有研究\", value: \"所有研究\" }\n    ];\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const checkPage = (\n      <Form {...formItemLayout} className=\"approveList-form\">\n        {page === \"checkPage\" ? (\n          <Button\n            icon={\"rollback\"}\n            type=\"primary\"\n            onClick={this.onBack}\n            className=\"approveList-btn\"\n          >\n            返回\n          </Button>\n        ) : null}\n        <div className=\"approveList-btns\">\n          {record.isPass ? null : (\n            <React.Fragment>\n              {\" \"}\n              <Button\n                className=\"approveList-btn\"\n                type=\"primary\"\n                onClick={() => {\n                  this.onPassOrReject(1);\n                }}\n              >\n                同意\n              </Button>\n              <Button\n                className=\"approveList-btn\"\n                type=\"danger\"\n                onClick={() => {\n                  this.onPassOrReject(2);\n                }}\n              >\n                拒绝\n              </Button>\n            </React.Fragment>\n          )}\n        </div>\n        <h1>参与CHASE-IBD数据库建设申请表</h1>\n        <h3>申请医疗单位</h3>\n        <Form.Item label={<span>申请人&nbsp;</span>}>\n          <span>{record.doctor}</span>\n        </Form.Item>\n        <Form.Item label={<span>所属单位&nbsp;</span>}>\n          <span>{record.hospital}</span>\n        </Form.Item>\n        <Form.Item label={<span>职称&nbsp;</span>}>\n          <span>{record.post}</span>\n        </Form.Item>\n        <Form.Item label={<span>联系电话&nbsp;</span>}>\n          <span>{record.phoneNumber}</span>\n        </Form.Item>\n        <Form.Item label={<span>E-mail&nbsp;</span>}>\n          <span>{record.email}</span>\n        </Form.Item>\n        <Form.Item label={<span>IBD治疗团队名单&nbsp;</span>}>\n          <span>{record.teamPeople}</span>&nbsp;&nbsp;\n          <span>{record.teamPeople2}</span>&nbsp;&nbsp;\n          <span>{record.teamPeople3}</span>&nbsp;&nbsp;\n        </Form.Item>\n        <Form.Item label={<span>选择参与数据库研究&nbsp;</span>}>\n          <Checkbox.Group\n            options={options}\n            defaultValue={record.studyType}\n            onChange={this.onChangeCheckbox}\n          />\n        </Form.Item>\n        <h3>贵院目前患者数量</h3>\n\n        <Form.Item label={<span>CD患者数量&nbsp;</span>}>\n          <span>{record.CDPatientNumber}</span>\n        </Form.Item>\n        <Form.Item label={<span>UC患者数量&nbsp;</span>}>\n          <span>{record.UCPatientNumber}</span>\n        </Form.Item>\n        <Form.Item label={<span>医师执照&nbsp;</span>}>\n          <img\n            src={record.doctorPhoto}\n            alt=\"avatar\"\n            style={{ width: \"200px\", height: \"200px\" }}\n          />\n        </Form.Item>\n      </Form>\n    );\n    const columns = [\n      {\n        title: \"序号\",\n        dataIndex: \"number\",\n        key: \"number\",\n        width: 80\n      },\n      {\n        title: \"申请人\",\n        dataIndex: \"doctor\",\n        key: \"doctor\",\n        width: 150\n      },\n      {\n        title: \"申请时间\",\n        dataIndex: \"applyDate\",\n        key: \"applyDate\",\n        width: 150\n      },\n      {\n        title: \"所属单位\",\n        dataIndex: \"hospital\",\n        key: \"hospital\",\n        width: 150\n      },\n      {\n        title: \"研究类型\",\n        dataIndex: \"studyType\",\n        key: \"studyType\",\n        width: 150\n      },\n      {\n        title: \"审批状态\",\n        dataIndex: \"approveStatus\",\n        key: \"approveStatus\",\n        width: 150,\n        render: data => {\n          return (\n            <Tag\n              color={\n                data === \"通过\" ? \"geekblue\" : data === \"拒绝\" ? \"red\" : \"green\"\n              }\n            >\n              {data}\n            </Tag>\n          );\n        }\n      },\n      // {\n      //   title: 'Tags',\n      //   key: 'tags',\n      //   dataIndex: 'tags',\n      //   render: tags => (\n      //     <span>\n      //       {tags.map(tag => {\n      //         let color = tag.length > 5 ? 'geekblue' : 'green';\n      //         if (tag === 'loser') {\n      //           color = 'volcano';\n      //         }\n      //         return (\n      //           <Tag color={color} key={tag}>\n      //             {tag.toUpperCase()}\n      //           </Tag>\n      //         );\n      //       })}\n      //     </span>\n      //   ),\n      // },\n      {\n        title: \"操作\",\n        key: \"action\",\n        width: 150,\n        render: (text, record) => (\n          <span>\n            <a\n              onClick={() => {\n                this.onCheck(record);\n              }}\n            >\n              查看/建议\n            </a>\n          </span>\n        )\n      }\n    ];\n    return (\n      <div className=\"approveList\">\n        {page === \"listPage\" ? (\n          <Spin spinning={spin}>\n            <Table\n              key=\"1\"\n              className=\"approveList-table\"\n              columns={columns}\n              dataSource={data}\n              scroll={{ x: 1000, y: \"calc(100vh - 220px)\" }}\n            />\n          </Spin>\n        ) : (\n          checkPage\n        )}\n      </div>\n    );\n  }\n}\nexport default ApproveList;\n","import ApproveList from  './ApproveList';\nexport default ApproveList;","import React, { Component } from \"react\";\nimport { Modal, Tag, Button, Table, message, Spin, Form, Input } from \"antd\";\nimport \"./ApproveProjectList.less\";\nimport http from \"../../../utils/api\";\nimport CommitCard from \"../ApplyProject/CommitCard\";\nconst applyProjectId = \"621790809693\"; //研究项目申请表-审核\nconst suggestId = \"621432069832\";\n\nconst { TextArea } = Input;\n\nclass ApproveProjectList extends React.Component {\n  state = {\n    data: [{}],\n    page: \"listPage\",\n    spin: false,\n    record: {},\n    visible: false\n  };\n  componentDidMount = async () => {\n    http().clearCache();\n    await this.getData();\n  };\n  componentWillUnmount() {\n    // 卸载异步操作设置状态\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n  onCheck = record => {\n    this.setState({\n      page: \"checkPage\",\n      record\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  handleCancel = () => {\n    this.setState({\n      visible: false\n    });\n  };\n  onSuggest = () => {\n    this.setState({\n      visible: true\n    });\n  };\n  onAgreeOrReject = async type => {\n    let res;\n    let data;\n    if (type === 1) {\n      data = [\n        {\n          ...this.state.record,\n          isPass: \"Y\"\n        }\n      ];\n    } else {\n      data = [\n        {\n          ...this.state.record,\n          isPass: \"N\"\n        }\n      ];\n    }\n    try {\n      res = await http().modifyRecords({\n        resid: applyProjectId,\n        data\n      });\n      if (res.data.Error === 0) {\n        message.success(\"操作成功\");\n      }\n      this.setState({\n        page: \"listPage\"\n      });\n      await this.getData();\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  submitSuggest = async e => {\n    const { record } = this.state;\n    this.props.form.validateFieldsAndScroll(async (err, values) => {\n      if (err) {\n        return;\n      }\n      let res;\n      let data = [\n        {\n          suggest: values.suggest,\n          projectId: record.REC_ID\n        }\n      ];\n      try {\n        res = await http().addRecords({\n          resid: suggestId,\n          data\n        });\n        if (res.data.Error === 0) {\n          message.success(\"添加成功\");\n          this.onBack();\n          await this.getData();\n        }\n      } catch (error) {\n        message.error(error.message);\n      }\n      this.setState({\n        visible: false\n      });\n    });\n  };\n  getData = async () => {\n    this.setState({\n      spin: true\n    });\n    let res;\n    try {\n      res = await http().getTableNew({\n        resid: applyProjectId,\n        subresid: suggestId\n      });\n      if (res.data.Error === 0) {\n        this.setState({\n          data: res.data.data\n        });\n      }\n    } catch (error) {}\n    this.setState({\n      spin: false\n    });\n  };\n\n  render() {\n    const { data, spin, page, record, visible } = this.state;\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const columns = [\n      {\n        title: \"序号\",\n        dataIndex: \"number\",\n        key: \"number\",\n        width: 80,\n      },\n      {\n        title: \"课题名称\",\n        dataIndex: \"task\",\n        key: \"task\",\n        width: 150\n      },\n      {\n        title: \"申请时间\",\n        dataIndex: \"applyTime\",\n        key: \"applyTime\",\n        width: 150\n      },\n      {\n        title: \"所属单位\",\n        dataIndex: \"hospital\",\n        key: \"hospital\",\n        width: 150\n      },\n      {\n        title: \"申请人\",\n        dataIndex: \"doctor\",\n        key: \"doctor\",\n        width: 150\n      },\n      {\n        title: \"审批状态\",\n        dataIndex: \"status\",\n        key: \"status\",\n        width: 150,\n        render: data => {\n          return (\n            <Tag\n              color={\n                data === \"通过\" ? \"geekblue\" : data === \"拒绝\" ? \"red\" : \"green\"\n              }\n            >\n              {data}\n            </Tag>\n          );\n        }\n      },\n      {\n        title: \"操作\",\n        key: \"action\",\n        render: (text, record) => (\n          <span>\n            <a\n              onClick={() => {\n                this.onCheck(record);\n              }}\n            >\n              查看/建议\n            </a>\n          </span>\n        ),\n        width: 150\n      }\n    ];\n    const checkPage = (\n      <Form\n        {...formItemLayout}\n        // onSubmit={this.handleSubmit}\n        className=\"approveProjectList-form\"\n      >\n        {page === \"checkPage\" ? (\n          <Button\n            icon={\"rollback\"}\n            type=\"primary\"\n            onClick={this.onBack}\n            className=\"approveList-btn\"\n          >\n            返回\n          </Button>\n        ) : null}\n        {!record.isPass ? (\n          <div className=\"approveList-btns\">\n            <Button\n              className=\"approveList-btn\"\n              type=\"primary\"\n              onClick={() => {\n                this.onAgreeOrReject(1);\n              }}\n            >\n              同意\n            </Button>\n\n            <Button\n              className=\"approveList-btn\"\n              type=\"danger\"\n              onClick={() => {\n                this.onAgreeOrReject(2);\n              }}\n            >\n              拒绝\n            </Button>\n            <Button\n              className=\"approveList-btn\"\n              type=\"primary\"\n              onClick={this.onSuggest}\n            >\n              \b建议\n            </Button>\n          </div>\n        ) : null}\n        <div className=\"approveProjectList-form-contain\">\n          <div className=\"approveProjectList-form-contain-info\">\n            <h1>CHASE-IBD专项课题申请表</h1>\n            <h3>基本信息</h3>\n            <Form.Item label={<span>课题名称&nbsp;</span>}>\n              <span>{record.doctor}</span>\n            </Form.Item>\n            <Form.Item label={<span>课题负责人&nbsp;</span>}>\n              <span>{record.hospital}</span>\n            </Form.Item>\n            <Form.Item label={<span>申请人&nbsp;</span>}>\n              <span>{record.post}</span>\n            </Form.Item>\n            <Form.Item label={<span>所属单位&nbsp;</span>}>\n              <span>{record.phoneNumber}</span>\n            </Form.Item>\n            <Form.Item label={<span>职称&nbsp;</span>}>\n              <span>{record.email}</span>\n            </Form.Item>\n            <Form.Item label={<span>联系电话&nbsp;</span>}>\n              <span>{record.email}</span>\n            </Form.Item>\n            <Form.Item label={<span>E-mail&nbsp;</span>}>\n              <span>{record.email}</span>\n            </Form.Item>\n            <Form.Item label={<span>拟定国内协作单位&nbsp;</span>}>\n              <span>{record.email}</span>\n            </Form.Item>\n            <Form.Item label={<span>拟定国际协作单位&nbsp;</span>}>\n              <span>{record.email}</span>\n            </Form.Item>\n            {/* <Form.Item label={<span>IBD治疗团队名单&nbsp;</span>}>\n          <span>{record.teamPeople}</span>&nbsp;&nbsp;\n          <span>{record.teamPeople2}</span>&nbsp;&nbsp;\n          <span>{record.teamPeople3}</span>&nbsp;&nbsp;\n        </Form.Item> */}\n            {/* <Form.Item label={<span>选择参与数据库研究&nbsp;</span>}>\n          <Checkbox.Group\n            options={options}\n            defaultValue={record.studyType}\n            onChange={this.onChangeCheckbox}\n          />\n        </Form.Item> */}\n            <h3>研究内容</h3>\n\n            <Form.Item label={<span>研究的理由&nbsp;</span>}>\n              <span>{record.studyReason}</span>\n            </Form.Item>\n            <Form.Item label={<span>研究区域&nbsp;</span>}>\n              <span>{record.studyArea}</span>\n            </Form.Item>\n            <Form.Item\n              label={\n                <span>研究目标（主要目标，次要目标，附加目标）&nbsp;</span>\n              }\n            >\n              <span>{record.studyTarget}</span>\n            </Form.Item>\n            <Form.Item\n              label={\n                <span>研究终点（主要终点，次要终点，附加终点）&nbsp;</span>\n              }\n            >\n              <span>{record.studyLast}</span>\n            </Form.Item>\n            <Form.Item\n              label={\n                <span>\n                  研究设计与描述（研究描述，研究周期，研究设计，剂量和终点的合理性）&nbsp;\n                </span>\n              }\n            >\n              <span>{record.studyDescription}</span>\n            </Form.Item>\n            <Form.Item\n              label={\n                <span>\n                  项目入选（入选标准，排除标准包括药物，治疗和饮食）&nbsp;\n                </span>\n              }\n            >\n              <span>{record.studySelected}</span>\n            </Form.Item>\n            <Form.Item\n              label={\n                <span>研究终点（主要终点，次要终点，附加终点）&nbsp;</span>\n              }\n            >\n              <span>{record.studyLast}</span>\n            </Form.Item>\n            <Form.Item\n              label={<span>评估（疗效评估，安全评估，其他评估）&nbsp;</span>}\n            >\n              <span>{record.studyAssess}</span>\n            </Form.Item>\n            <Form.Item label={<span>实验室检查：检查具体指标参数&nbsp;</span>}>\n              <span>{record.studyCheck}</span>\n            </Form.Item>\n            <Form.Item\n              label={<span>评估（疗效评估，安全评估，其他评估）&nbsp;</span>}\n            >\n              <span>{record.studyAssess}</span>\n            </Form.Item>\n            <Form.Item\n              label={\n                <span>\n                  统计方法（统计分析计划，人口统计学和其他基线特征分析，疗效分析，药代动力学分析，药效学分析，安全分析）&nbsp;\n                </span>\n              }\n            >\n              <span>{record.staticMethod}</span>\n            </Form.Item>\n            <Form.Item label={<span>中期分析和提前终止的标准&nbsp;</span>}>\n              <span>{record.standard}</span>\n            </Form.Item>\n            <Form.Item label={<span>样本量的确定&nbsp;</span>}>\n              <span>{record.sure}</span>\n            </Form.Item>\n            <Form.Item label={<span>伦理委员会&nbsp;</span>}>\n              <span>{record.committee}</span>\n            </Form.Item>\n            <Form.Item label={<span>参考资料&nbsp;</span>}>\n              <span>{record.referenceData}</span>\n            </Form.Item>\n          </div>\n          {record[\"621432069832\"] ? (\n            <div className=\"applyProject-form-contain-notice\">\n              <span>来自数委会的批注</span>\n              {record[\"621432069832\"] &&\n                record[\"621432069832\"].map(item => {\n                  return (\n                    <CommitCard key={item.REC_ID} data={item}></CommitCard>\n                  );\n                })}\n            </div>\n          ) : null}\n        </div>{\" \"}\n        <Modal\n          title=\"建议\"\n          visible={visible}\n          width={500}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          destroyOnClose={true}\n          footer={[\n            <Button key=\"back\" onClick={this.handleCancel}>\n              取消\n            </Button>,\n            <Button\n              key=\"submit\"\n              htmlType=\"submit\"\n              type=\"primary\"\n              onClick={() => {\n                this.submitSuggest();\n              }}\n            >\n              提交\n            </Button>\n          ]}\n        >\n          <Form {...formItemLayout} className=\"editNotice-form\">\n            {/* <h1>消息编辑</h1> */}\n            {getFieldDecorator(\"suggest\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入建议\",\n                  whitespace: true\n                }\n              ]\n            })(\n              <TextArea\n                placeHolder=\"请输入建议\"\n                className=\"editNotice-form-item-textarea\"\n              />\n            )}\n          </Form>\n        </Modal>\n      </Form>\n    );\n    return (\n      <div className=\"approveProjectList\">\n        {page === \"listPage\" ? (\n          <Spin spinning={spin}>\n            <Table\n              key=\"2\"\n              className=\"approveProjectList-table\"\n              columns={columns}\n              dataSource={data}\n              scroll={{ x: 1000, y: \"calc(100vh - 220px)\" }}\n            />\n          </Spin>\n        ) : (\n          checkPage\n        )}\n      </div>\n    );\n  }\n}\nexport default Form.create()(ApproveProjectList);\n","import ApproveProjectList from  './ApproveProjectList';\nexport default ApproveProjectList;","import React, { Component } from \"react\";\nimport \"./MenuCommittee.less\";\nimport http from \"../../../utils/api\";\nimport { Form, message, Icon, Input, Button, Tabs } from \"antd\";\nimport NoticeList from \"../NoticeList\";\nimport EditNotice from \"../EditNotice\";\nimport ApproveList from \"../ApproveList\";\nimport ApproveProjectList from \"../ApproveProjectList\";\nconst { TabPane } = Tabs;\n\nclass MenuCommittee extends Component {\n  state = {};\n\n  componentDidMount = () => {};\n\n  render() {\n    return (\n      <Tabs\n        defaultActiveKey=\"1\"\n        tabBarStyle={{\n          height: \"70px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          paddingLeft: \"50px\"\n        }}\n      >\n        <TabPane tab=\"申请加入审批\" key=\"1\">\n          <ApproveList></ApproveList>\n        </TabPane>\n        <TabPane tab=\"项目研究审核\" key=\"2\">\n          <ApproveProjectList></ApproveProjectList>\n        </TabPane>\n        <TabPane tab=\"编辑发布通知\" key=\"3\">\n          <EditNotice></EditNotice>\n        </TabPane>\n      </Tabs>\n    );\n  }\n}\n\nexport default MenuCommittee;\n","import MenuCommittee from './MenuCommittee';\nexport default MenuCommittee;","import Home from './Home';\nexport default Home;","import React, { Component } from \"react\";\nimport \"./Home.less\";\nimport { Menu, Icon, Button, Tabs, Upload, Popover ,Alert} from \"antd\";\nimport logo from \"../../../assets/images/logo.jpg\";\nimport NoticeList from \"../NoticeList\";\nimport ApplyDataBase from \"../ApplyDataBase\";\nimport ApplyProject from \"../ApplyProject\";\nimport ActApply from \"../ActApply\";\nimport MenuDataBase from \"../MenuDataBase/MenuDataBase\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport MenuCommittee from \"../MenuCommittee\";\nconst { TabPane } = Tabs;\n\nclass Home extends Component {\n  state = {\n    collapsed: false,\n    imageUrl: \"\",\n    userInfo: {},\n    currentItem:1\n  };\n  constructor(props){\n    super(props);\n  }\n  toggleCollapsed = () => {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  };\n  componentDidMount = async() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    const currentItem = JSON.parse(localStorage.getItem(\"currentItem\"))\n    if(currentItem){\n\n    this.setState({\n      userInfo,\n      currentItem\n    });\n    }else{\n\n    this.setState({\n      userInfo\n    });\n    }\n  };\n  getBase64 = (img, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => callback(reader.result));\n    reader.readAsDataURL(img);\n  };\n  handleChange = info => {\n    if (info.file.status === \"uploading\") {\n      this.setState({ loading: true });\n      return;\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      this.getBase64(info.file.originFileObj, imageUrl =>\n        this.setState({\n          imageUrl,\n          loading: false\n        })\n      );\n    }\n  };\n  logout = () => {\n    console.log(\"logout\",this.props)\n    localStorage.removeItem(\"userInfo\");\n    localStorage.removeItem('currentItem');\n    this.props.history.replace({\n      pathname:\"/\"\n    })\n  }\n  onMenuDetail = (name) => {\n    if(name === 'home'){\n      localStorage.setItem(\"currentItem\",1)\n      this.setState({\n        currentItem:1\n      })\n    }else{\n      localStorage.setItem(\"currentItem\",2)\n      this.setState({\n        currentItem:2\n      })\n    }\n    this.props.history.push({\n      pathname:`/${name}`\n    })\n  }\n  render() {\n    const uploadButton = (\n      <div>\n        {/* <Icon type={this.state.loading ? 'loading' : 'plus'} /> */}\n        <div className=\"ant-upload-text\">请上传照片</div>\n      </div>\n    );\n    const content = (\n      <React.Fragment>\n      {/* <div> <Button type=\"primary\" icon=\"download\" size='small' >退出</Button></div> */}\n      <div style={{margin:\"10px 0 \"}}> <Button type=\"primary\" icon=\"logout\" size='small' onClick={this.logout}>退出</Button>\n      </div>\n       </React.Fragment>\n    )\n    const { imageUrl, userInfo ,currentItem} = this.state;\n    return (\n      <div className=\"home\">\n        <div className=\"home-left\">\n          <Menu\n            selectedKeys={[`${currentItem}`]}\n            defaultOpenKeys={[\"sub1\"]}\n            mode=\"inline\"\n            theme=\"dark\"\n            style={{ height: \"100vh\" }}\n            inlineCollapsed={this.state.collapsed}\n          >\n            <div className=\"home-left-logo\">\n              <img className=\"home-left-logo-img\" src={logo}></img>\n            </div>\n            <Menu.Item key=\"1\" onClick={\n              () => {\n                this.onMenuDetail('home')\n              }\n            }>\n              <Icon type=\"pie-chart\" />\n              <span>CHASE-IBD数据库</span>\n            </Menu.Item>\n            <Menu.Item key=\"2\" onClick={() => {\n              this.onMenuDetail('menuCommittee')\n            }}>\n              <Icon type=\"desktop\" />\n              <span>数据库委员会</span>\n            </Menu.Item>\n          </Menu>\n        </div>\n        <div className=\"home-right\">\n          <div className=\"home-right-top\">\n            <div className=\"home-right-top-tabs\">\n\n        {/* <Route exact path='/' component={Login}></Route> */}\n        <Route  path='/home' component={MenuDataBase}></Route>\n        <Route  path='/menuCommittee' component={MenuCommittee}></Route>\n           {/* <MenuDataBase></MenuDataBase> */}\n            </div>\n\n            <div className=\"home-right-top-user\">\n              {/* <Upload\n                name=\"avatar\"\n                listType=\"picture-card\"\n                className=\"avatar-uploader\"\n                showUploadList={false}\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                onChange={this.handleChange}\n              >\n                {imageUrl ? (\n                  <img src={imageUrl} alt=\"avatar\" style={{ width: \"100%\" }} />\n                ) : (\n                  uploadButton\n                )}\n              </Upload> */}\n            <Popover content={content} placement=\"bottom\" >\n                <div >\n                  <Icon type=\"user\" style={{ fontSize: \"20px\" }} />\n                </div>\n                <div >{userInfo.Data}</div>\n                </Popover>\n              {/* <div> <Icon type=\"logout\" style={{fontSize:\"20px\"}} /></div> */}\n            </div>\n          </div>\n          <div className=\"home-right-content\">\n            <div></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport \"./Register.less\";\nimport { Form, message, Icon, Input, Button, Checkbox, Spin } from \"antd\";\nimport http from \"../../../utils/api\";\n\nclass Register extends Component {\n  state = {\n    disabled: false,\n    counts: 60,\n    showSpin: false\n  };\n\n  componentDidMount = () => {};\n  onLogin = () => {\n    this.props.history.push({\n      pathname: \"/login\"\n    });\n  };\n\n  countDown = () => {\n    let counts = 60;\n    this.setState({\n      disabled: true\n    });\n    let countdown = setInterval(() => {\n      if (counts > 0) {\n        counts--;\n        this.setState({\n          counts\n        });\n      } else {\n        this.setState({\n          disabled: false\n        });\n        clearInterval(countdown);\n      }\n    }, 1000);\n  };\n  getVerCode = async () => {\n    const { form } = this.props;\n    let res;\n    if (form.getFieldValue(\"phone\")) {\n      this.countDown();\n      try {\n        res = await http().getVerCode({\n          telephone: form.getFieldValue(\"phone\")\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      message.info(\"请先输入手机号获取验证码\");\n    }\n  };\n  register = async () => {\n    const { form } = this.props;\n    let res;\n    this.props.form.validateFieldsAndScroll(async (err, values) => {\n      if (err) {\n        return;\n      }\n      let registerData = {\n        Handphone: form.getFieldValue(\"phone\"), // 手机号\n        userid: form.getFieldValue(\"postNumber\"), //执业证号码\n        occuptionNumber: form.getFieldValue(\"postNumber\"), //执业证号码\n        validcode: form.getFieldValue(\"valid\"), // 验证码\n        hospital: form.getFieldValue(\"hospital\"), // 医院\n        nickname: form.getFieldValue(\"doctor\"),\n        // office:form.office,\n        validresid: 616852937051\n        // unionid: this.unionid,\n        // openid: this.openid\n      };\n      this.setState({\n        showSpin: true\n      });\n\n      try {\n        res = await http().register(registerData);\n        if (res.data.error == 0) {\n          message.success(\"注册成功\");\n          this.props.history.push({\n            pathname: \"/login\"\n          });\n        } else {\n          message.error(res.data.message);\n        }\n      } catch (error) {\n        console.log(\"res\", error);\n        message.error(error.message);\n      }\n      this.setState({\n        showSpin: false\n      });\n    });\n  };\n  render() {\n    const { disabled, counts, showSpin } = this.state;\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div className=\"page\">\n        <div className=\"register-contain\">\n          <Spin spinning={showSpin}>\n            <Form onSubmit={this.handleSubmit} className=\"login-form-userName\">\n              <h1>注册</h1>\n              <Form.Item>\n                {getFieldDecorator(\"doctor\", {\n                  rules: [{ required: true, message: \"请输入您的姓名!\" }]\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"姓名\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"hospital\", {\n                  rules: [{ required: true, message: \"请输入您所在的医院!\" }]\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"医院\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"post\", {\n                  rules: [{ required: true, message: \"请输入您的职称!\" }]\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"职称\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"postNumber\", {\n                  rules: [{ required: true, message: \"请输入您的执业证号码!\" }]\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"执业证号码\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"phone\", {\n                  rules: [{ required: true, message: \"请输入您的手机号!\" }]\n                })(\n                  <Input\n                    size=\"large\"\n                    prefix={\n                      <Icon type=\"phone\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"手机号\"\n                  />\n                )}\n              </Form.Item>\n\n              <Form.Item className=\"login-form-valid\">\n                {getFieldDecorator(\"valid\", {\n                  rules: [{ required: true, message: \"请输入你的验证码!\" }]\n                })(\n                  <Input\n                    size=\"large\"\n                    className=\"login-form-valid-input\"\n                    prefix={\n                      <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"验证码 \"\n                  />\n                )}\n              </Form.Item>\n              {disabled ? (\n                <Button\n                  className=\"login-form-valid-countdown\"\n                  size=\"large\"\n                  type=\"primary\"\n                  disabled\n                >\n                  {counts}\n                </Button>\n              ) : (\n                <Button\n                  className=\"login-form-valid-button\"\n                  size=\"large\"\n                  type=\"primary\"\n                  onClick={this.getVerCode}\n                >\n                  获取验证码\n                </Button>\n              )}\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n                onClick={this.register}\n                size=\"large\"\n              >\n                注册\n              </Button>\n              <div className=\"login-form-register\">\n                <a onClick={this.onLogin}>登录</a>\n              </div>\n            </Form>\n          </Spin>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(Register);\n","import Register from './Register';\nexport default Register;","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Button } from \"antd\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from './components/busniess/Login'\nimport Home from './components/busniess/Home'\nimport Register from './components/busniess/Register'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Home></Home> */}\n      <Router>\n        <Route exact path='/' component={Login}></Route>\n        <Route  path='/login' component={Login}></Route>\n        <Route  path='/register' component={Register}></Route>\n        <Route  path='/home' component={Home}></Route>\n        <Route  path='/menuCommittee' component={Home}></Route>\n        \n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}