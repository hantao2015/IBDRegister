{"ast":null,"code":"import _Form from \"antd/es/form\";\nimport _Spin from \"antd/es/spin\";\nimport _Button from \"antd/es/button\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/Users/mac/Desktop/IBDRegister/src/components/busniess/ApplyDataBase/ApplyDataBase.js\";\nimport React, { Component } from \"react\";\nimport \"./ApplyDataBase.less\";\nimport http from \"../../../utils/api\";\nimport ShowImage from \"./ShowImage\";\nimport applyDataBaseImage from \"../../../assets/images/applyDataBase.jpg\";\nconst applyDataBaseId = \"620384838453\";\n\nconst uploadFile = (file, url) => {\n  return new Promise((resolve, reject) => {\n    let fd = new FormData();\n    fd.append(\"file\", file, file.name);\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", url);\n\n    xhr.onload = () => {\n      const data = JSON.parse(xhr.response);\n\n      if (xhr.status === 200 && (data.error === 0 || data.error === \"0\")) {\n        const imgUrl = data.data;\n        resolve(imgUrl);\n      } else {\n        reject(data);\n      }\n    };\n\n    xhr.send(fd);\n  });\n};\n\nclass ApplyDataBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageUrl: \"\",\n      applyList: [],\n      page: \"listPage\",\n      record: {},\n      loading: false\n    };\n\n    this.componentDidMount = async () => {\n      let res;\n      await this.getApplyData();\n    };\n\n    this.getApplyData = async () => {\n      let res;\n      this.setState({\n        loading: true\n      });\n\n      try {\n        res = await http().getTable({\n          resid: applyDataBaseId\n        });\n        console.log(\"res.data.data\", res.data.data);\n        let data = [];\n        res.data.data.map(item => {\n          let studyType = item.studyType && item.studyType.split(\",\");\n          item.studyType = studyType;\n          data.push(item);\n        });\n\n        if (res.data.error == 0) {\n          this.setState({\n            applyList: data\n          });\n        }\n      } catch (error) {\n        _message.error(error.message);\n      }\n\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.onApply = () => {\n      this.setState({\n        page: \"applyPage\"\n      });\n    };\n\n    this.onBack = () => {\n      this.setState({\n        page: \"listPage\"\n      });\n    };\n\n    this.onCheck = item => {\n      this.setState({\n        page: \"checkPage\",\n        record: item\n      });\n    };\n\n    this.showImage = () => {\n      this.setState({\n        page: \"showImagePage\"\n      });\n    };\n  }\n\n  render() {\n    const prop = this.props;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"applyDataBase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"applyDataBase-btns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      icon: prop.page === \"applyPage\" || prop.page === \"checkPage\" || prop.page === \"schedulePage\" ? \"rollback\" : \"plus\",\n      type: \"primary\",\n      onClick: prop.page === \"applyPage\" || prop.page === \"checkPage\" || prop.page === \"schedulePage\" ? this.props.onBack : this.props.onApply,\n      className: \"applyDataBase-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, prop.page === \"applyPage\" || prop.page === \"checkPage\" || prop.page === \"schedulePage\" ? \"返回\" : prop.addText || \"申请\"), React.createElement(\"a\", {\n      className: \"applyDataBase-photoBtn\",\n      type: \"link\",\n      onClick: prop.page === \"showImagePage\" ? this.props.onBack : this.props.showImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, prop.isShowImage ? \"\" : prop.page === \"showImagePage\" ? \"返回\" : prop.page === \"listPage\" ? \"申请流程图\" : \"\")), React.createElement(_Spin, {\n      spinning: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"applyDataBase-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, (() => {\n      switch (prop.page) {\n        case \"listPage\":\n          return prop.pages.listPage;\n\n        case \"applyPage\":\n          return prop.pages.applyPage;\n\n        case \"checkPage\":\n          return prop.pages.checkPage;\n\n        case \"showImagePage\":\n          return prop.pages.showImagePage;\n\n        case \"schedulePage\":\n          return prop.pages.schedulePage;\n      }\n    })())));\n  }\n\n}\n\nexport default _Form.create()(ApplyDataBase);","map":{"version":3,"sources":["/Users/mac/Desktop/IBDRegister/src/components/busniess/ApplyDataBase/ApplyDataBase.js"],"names":["React","Component","http","ShowImage","applyDataBaseImage","applyDataBaseId","uploadFile","file","url","Promise","resolve","reject","fd","FormData","append","name","xhr","XMLHttpRequest","open","onload","data","JSON","parse","response","status","error","imgUrl","send","ApplyDataBase","constructor","props","state","imageUrl","applyList","page","record","loading","componentDidMount","res","getApplyData","setState","getTable","resid","console","log","map","item","studyType","split","push","message","onApply","onBack","onCheck","showImage","render","prop","addText","isShowImage","pages","listPage","applyPage","checkPage","showImagePage","schedulePage","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./ApplyDataBase.less\";\nimport {\n  Collapse,\n  Icon,\n  Input,\n  Upload,\n  Button,\n  Form,\n  Checkbox,\n  List,\n  Skeleton,\n  Avatar,\n  message,\n  Popconfirm,\n  Spin\n} from \"antd\";\nimport http from \"../../../utils/api\";\nimport ShowImage from \"./ShowImage\";\nimport applyDataBaseImage from \"../../../assets/images/applyDataBase.jpg\";\nconst applyDataBaseId = \"620384838453\";\n\nconst uploadFile = (file, url) => {\n  return new Promise((resolve, reject) => {\n    let fd = new FormData();\n    fd.append(\"file\", file, file.name);\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", url);\n    xhr.onload = () => {\n      const data = JSON.parse(xhr.response);\n      if (xhr.status === 200 && (data.error === 0 || data.error === \"0\")) {\n        const imgUrl = data.data;\n        resolve(imgUrl);\n      } else {\n        reject(data);\n      }\n    };\n    xhr.send(fd);\n  });\n};\nclass ApplyDataBase extends Component {\n  state = {\n    imageUrl: \"\",\n    applyList: [],\n    page: \"listPage\",\n    record: {},\n    loading: false\n  };\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount = async () => {\n    let res;\n\n    await this.getApplyData();\n  };\n  //获取申请记录\n  getApplyData = async () => {\n    let res;\n    this.setState({\n      loading: true\n    });\n    try {\n      res = await http().getTable({\n        resid: applyDataBaseId\n      });\n      console.log(\"res.data.data\", res.data.data);\n      let data = [];\n\n      res.data.data.map(item => {\n        let studyType = item.studyType && item.studyType.split(\",\");\n        item.studyType = studyType;\n        data.push(item);\n      });\n      if (res.data.error == 0) {\n        this.setState({\n          applyList: data\n        });\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n    this.setState({\n      loading: false\n    });\n  };\n  onApply = () => {\n    this.setState({\n      page: \"applyPage\"\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  onCheck = item => {\n    this.setState({\n      page: \"checkPage\",\n      record: item\n    });\n  };\n  showImage = () => {\n    this.setState({\n      page: \"showImagePage\"\n    });\n  };\n  render() {\n    const prop = this.props;\n    const {  loading  } = this.state;\n   \n\n    return (\n      <div className=\"applyDataBase\">\n        <div className=\"applyDataBase-btns\">\n          <Button\n            icon={\n              prop.page === \"applyPage\" ||\n              prop.page === \"checkPage\" ||\n              prop.page === \"schedulePage\"\n                ? \"rollback\"\n                : \"plus\"\n            }\n            type=\"primary\"\n            onClick={\n              prop.page === \"applyPage\" ||\n              prop.page === \"checkPage\" ||\n              prop.page === \"schedulePage\"\n                ? this.props.onBack\n                : this.props.onApply\n            }\n            className=\"applyDataBase-btn\"\n          >\n            {prop.page === \"applyPage\" ||\n            prop.page === \"checkPage\" ||\n            prop.page === \"schedulePage\"\n              ? \"返回\"\n              : prop.addText || \"申请\"}\n          </Button>\n          <a\n            className=\"applyDataBase-photoBtn\"\n            type=\"link\"\n            onClick={\n              prop.page === \"showImagePage\"\n                ? this.props.onBack\n                : this.props.showImage\n            }\n          >\n            {prop.isShowImage\n              ? \"\"\n              : prop.page === \"showImagePage\"\n              ? \"返回\"\n              : prop.page === \"listPage\"\n              ? \"申请流程图\"\n              : \"\"}\n          </a>\n        </div>\n        <Spin spinning={loading}>\n          <div className=\"applyDataBase-content\">\n            {(() => {\n              switch (prop.page) {\n                case \"listPage\":\n                  return prop.pages.listPage;\n                case \"applyPage\":\n                  return prop.pages.applyPage;\n                case \"checkPage\":\n                  return prop.pages.checkPage;\n                case \"showImagePage\":\n                  return prop.pages.showImagePage;\n                case \"schedulePage\":\n                  return prop.pages.schedulePage;\n              }\n            })()}\n          </div>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(ApplyDataBase);\n"]},"metadata":{},"sourceType":"module"}