{"ast":null,"code":"import _Form from \"antd/es/form\";\nimport _Spin from \"antd/es/spin\";\nimport _Table from \"antd/es/table\";\nimport _message from \"antd/es/message\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"/Users/mac/Desktop/IBDRegister/src/components/busniess/ShowProject/ShowProject.js\";\nimport React, { Component } from \"react\";\nimport \"./ShowProject.less\";\nimport http from \"../../../utils/api\";\nconst applyProjectId = \"620475440053\";\nconst suggestId = \"621432069832\";\nconst TextArea = _Input.TextArea;\n\nclass ShowProject extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [{}],\n      page: \"listPage\",\n      spin: false,\n      record: {},\n      visible: false\n    };\n\n    this.componentDidMount = async () => {\n      await this.getData();\n    };\n\n    this.onCheck = record => {\n      this.setState({\n        page: \"checkPage\",\n        record\n      });\n    };\n\n    this.onBack = () => {\n      this.setState({\n        page: \"listPage\"\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.onSuggest = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.submitSuggest = async e => {\n      const record = this.state.record;\n      this.props.form.validateFieldsAndScroll(async (err, values) => {\n        if (err) {\n          return;\n        }\n\n        let res;\n        let data = [{\n          suggest: values.suggest,\n          projectId: record.REC_ID\n        }];\n\n        try {\n          res = await http().addRecords({\n            resid: suggestId,\n            data\n          });\n\n          if (res.data.Error === 0) {\n            _message.success(\"添加成功\");\n          }\n        } catch (error) {\n          _message.error(error.message);\n        }\n\n        this.setState({\n          visible: false\n        });\n      });\n    };\n\n    this.getData = async () => {\n      this.setState({\n        spin: true\n      });\n      let res;\n\n      try {\n        res = await http().getTable({\n          resid: applyProjectId\n        });\n\n        if (res.data.error === 0) {\n          this.setState({\n            data: res.data.data\n          });\n        }\n      } catch (error) {}\n\n      this.setState({\n        spin: false\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    // 卸载异步操作设置状态\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          data = _this$state.data,\n          spin = _this$state.spin,\n          page = _this$state.page,\n          record = _this$state.record,\n          visible = _this$state.visible;\n    const columns = [{\n      title: \"序号\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: 150,\n      render: (data, index) => {}\n    }, {\n      title: \"申请时间\",\n      dataIndex: \"applyTime\",\n      key: \"applyTime\",\n      width: 150\n    }, {\n      title: \"课题名称\",\n      dataIndex: \"task\",\n      key: \"hospital\",\n      width: 150\n    }, {\n      title: \"所属单位\",\n      dataIndex: \"hospital\",\n      key: \"hospital\",\n      width: 150\n    }, {\n      title: \"申请人\",\n      dataIndex: \"doctor\",\n      key: \"doctor\",\n      width: 150\n    }, {\n      title: \"研究类型\",\n      dataIndex: \"studyType\",\n      key: \"studyType\",\n      width: 150 // {\n      //   title: 'Tags',\n      //   key: 'tags',\n      //   dataIndex: 'tags',\n      //   render: tags => (\n      //     <span>\n      //       {tags.map(tag => {\n      //         let color = tag.length > 5 ? 'geekblue' : 'green';\n      //         if (tag === 'loser') {\n      //           color = 'volcano';\n      //         }\n      //         return (\n      //           <Tag color={color} key={tag}>\n      //             {tag.toUpperCase()}\n      //           </Tag>\n      //         );\n      //       })}\n      //     </span>\n      //   ),\n      // },\n\n    }];\n    return React.createElement(\"div\", {\n      className: \"approveProjectList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, page === \"listPage\" ? React.createElement(_Spin, {\n      spinning: spin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      key: \"2\",\n      className: \"approveProjectList-table\",\n      columns: columns,\n      dataSource: data,\n      scroll: {\n        x: 1000,\n        y: \"calc(100vh - 220px)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })) : null);\n  }\n\n}\n\nexport default _Form.create()(ShowProject);","map":{"version":3,"sources":["/Users/mac/Desktop/IBDRegister/src/components/busniess/ShowProject/ShowProject.js"],"names":["React","Component","http","applyProjectId","suggestId","TextArea","ShowProject","state","data","page","spin","record","visible","componentDidMount","getData","onCheck","setState","onBack","handleCancel","onSuggest","submitSuggest","e","props","form","validateFieldsAndScroll","err","values","res","suggest","projectId","REC_ID","addRecords","resid","Error","success","error","message","getTable","componentWillUnmount","callback","render","columns","title","dataIndex","key","width","index","x","y","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Modal, Tag, Button, Table, message, Spin, Form, Input } from \"antd\";\nimport \"./ShowProject.less\";\nimport http from \"../../../utils/api\";\nconst applyProjectId = \"620475440053\";\nconst suggestId = \"621432069832\";\nconst { TextArea } = Input;\n\nclass ShowProject extends React.Component {\n  state = {\n    data: [{}],\n    page: \"listPage\",\n    spin: false,\n    record: {},\n    visible: false\n  };\n  componentDidMount = async () => {\n    await this.getData();\n  };\n  componentWillUnmount() {\n    // 卸载异步操作设置状态\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n  onCheck = record => {\n    this.setState({\n      page: \"checkPage\",\n      record\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  handleCancel = () => {\n    this.setState({\n      visible: false\n    });\n  };\n  onSuggest = () => {\n    this.setState({\n      visible: true\n    });\n  };\n  submitSuggest = async e => {\n    const { record } = this.state;\n    this.props.form.validateFieldsAndScroll(async (err, values) => {\n      if (err) {\n        return;\n      }\n      let res;\n      let data = [\n        {\n          suggest: values.suggest,\n          projectId: record.REC_ID\n        }\n      ];\n      try {\n        res = await http().addRecords({\n          resid: suggestId,\n          data\n        });\n        if (res.data.Error === 0) {\n          message.success(\"添加成功\");\n        }\n      } catch (error) {\n        message.error(error.message);\n      }\n      this.setState({\n        visible: false\n      });\n    });\n  };\n  getData = async () => {\n    this.setState({\n      spin: true\n    });\n    let res;\n    try {\n      res = await http().getTable({\n        resid: applyProjectId\n      });\n      if (res.data.error === 0) {\n        this.setState({\n          data: res.data.data\n        });\n      }\n    } catch (error) {}\n    this.setState({\n      spin: false\n    });\n  };\n\n  render() {\n    const { data, spin, page, record, visible } = this.state;\n    const columns = [\n      {\n        title: \"序号\",\n        dataIndex: \"name\",\n        key: \"name\",\n        width: 150,\n        render: (data, index) => {}\n      },\n      {\n        title: \"申请时间\",\n        dataIndex: \"applyTime\",\n        key: \"applyTime\",\n        width: 150\n      },\n      {\n        title: \"课题名称\",\n        dataIndex: \"task\",\n        key: \"hospital\",\n        width: 150\n      },\n      {\n        title: \"所属单位\",\n        dataIndex: \"hospital\",\n        key: \"hospital\",\n        width: 150\n      },\n      {\n        title: \"申请人\",\n        dataIndex: \"doctor\",\n        key: \"doctor\",\n        width: 150\n      },\n      {\n        title: \"研究类型\",\n        dataIndex: \"studyType\",\n        key: \"studyType\",\n        width: 150\n      }\n      // {\n      //   title: 'Tags',\n      //   key: 'tags',\n      //   dataIndex: 'tags',\n      //   render: tags => (\n      //     <span>\n      //       {tags.map(tag => {\n      //         let color = tag.length > 5 ? 'geekblue' : 'green';\n      //         if (tag === 'loser') {\n      //           color = 'volcano';\n      //         }\n      //         return (\n      //           <Tag color={color} key={tag}>\n      //             {tag.toUpperCase()}\n      //           </Tag>\n      //         );\n      //       })}\n      //     </span>\n      //   ),\n      // },\n    ];\n    return (\n      <div className=\"approveProjectList\">\n        {page === \"listPage\" ? (\n          <Spin spinning={spin}>\n            <Table\n              key=\"2\"\n              className=\"approveProjectList-table\"\n              columns={columns}\n              dataSource={data}\n              scroll={{ x: 1000, y: \"calc(100vh - 220px)\" }}\n            />\n          </Spin>\n        ) : null}\n      </div>\n    );\n  }\n}\nexport default Form.create()(ShowProject);\n"]},"metadata":{},"sourceType":"module"}