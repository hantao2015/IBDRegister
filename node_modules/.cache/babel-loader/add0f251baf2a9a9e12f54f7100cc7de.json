{"ast":null,"code":"import _Spin from \"antd/es/spin\";\nimport _Table from \"antd/es/table\";\nimport _Modal from \"antd/es/modal\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport _Form from \"antd/es/form\";\nimport _Button from \"antd/es/button\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"/Users/mac/Desktop/IBDRegister/src/components/busniess/ApproveList/ApproveList.js\";\nimport React, { Component } from \"react\";\nimport \"./ApproveList.less\";\nimport http from \"../../../utils/api\";\nconst applyDataBaseId = \"620384838453\";\nconst TextArea = _Input.TextArea;\n\nclass ApproveList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [{}],\n      record: {},\n      page: \"listPage\",\n      spin: false,\n      visible: false\n    };\n\n    this.componentDidMount = async () => {\n      await this.getData();\n    };\n\n    this.getData = async () => {\n      this.setState({\n        spin: true\n      });\n      let res;\n\n      try {\n        res = await http().getTable({\n          resid: applyDataBaseId\n        });\n\n        if (res.data.error === 0) {\n          this.setState({\n            data: res.data.data\n          });\n        }\n      } catch (error) {}\n\n      this.setState({\n        spin: false\n      });\n    };\n\n    this.onCheck = () => {\n      this.setState({\n        page: \"checkPage\"\n      });\n    };\n\n    this.onBack = () => {\n      this.setState({\n        page: \"listPage\"\n      });\n    };\n\n    this.onSuggest = () => {\n      this.setState({\n        visible: true\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          data = _this$state.data,\n          record = _this$state.record,\n          page = _this$state.page,\n          spin = _this$state.spin,\n          visible = _this$state.visible;\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const options = [{\n      label: \"单中心研究\",\n      value: \"单中心研究\"\n    }, {\n      label: \"多中心研究\",\n      value: \"多中心研究\"\n    }, {\n      label: \"第三方研究\",\n      value: \"第三方研究\"\n    }, {\n      label: \"所有研究\",\n      value: \"所有研究\"\n    }];\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const checkPage = React.createElement(_Form, Object.assign({}, formItemLayout, {\n      className: \"approveList-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), page === \"checkPage\" ? React.createElement(_Button, {\n      icon: \"rollback\",\n      type: \"primary\",\n      onClick: this.onBack,\n      className: \"approveList-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"\\u8FD4\\u56DE\") : null, React.createElement(\"div\", {\n      className: \"approveList-btns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      className: \"approveList-btn\",\n      type: \"primary\",\n      onClick: this.onBack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"\\u540C\\u610F\"), React.createElement(_Button, {\n      className: \"approveList-btn\",\n      type: \"primary\",\n      onClick: this.onSuggest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"\\b\\u5EFA\\u8BAE\")), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"\\u53C2\\u4E0ECHASE-IBD\\u6570\\u636E\\u5E93\\u5EFA\\u8BBE\\u7533\\u8BF7\\u8868\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"\\u7533\\u8BF7\\u533B\\u7597\\u5355\\u4F4D\"), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"\\u7533\\u8BF7\\u4EBA\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, record.doctor)), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"\\u6240\\u5C5E\\u5355\\u4F4D\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, record.hospital)), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"\\u804C\\u79F0\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, record.post)), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"\\u8054\\u7CFB\\u7535\\u8BDD\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, record.phoneNumber)), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"E-mail\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, record.email)), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"IBD\\u6CBB\\u7597\\u56E2\\u961F\\u540D\\u5355\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, record.teamPeople), \"\\xA0\\xA0\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, record.teamPeople2), \"\\xA0\\xA0\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, record.teamPeople3), \"\\xA0\\xA0\"), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"\\u9009\\u62E9\\u53C2\\u4E0E\\u6570\\u636E\\u5E93\\u7814\\u7A76\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(_Checkbox.Group, {\n      options: options,\n      defaultValue: record.studyType,\n      onChange: this.onChangeCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"\\u8D35\\u9662\\u76EE\\u524D\\u60A3\\u8005\\u6570\\u91CF\"), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"CD\\u60A3\\u8005\\u6570\\u91CF\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, record.CDPatientNumber)), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"UC\\u60A3\\u8005\\u6570\\u91CF\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, record.UCPatientNumber)), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"\\u533B\\u5E08\\u6267\\u7167\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: record.doctorPhoto,\n      alt: \"avatar\",\n      style: {\n        backgroundSize: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(_Modal, {\n      title: \"\\u5EFA\\u8BAE\",\n      visible: visible,\n      width: 500,\n      onOk: this.handleOk,\n      onCancel: this.handleCancel,\n      destroyOnClose: true,\n      footer: [React.createElement(_Button, {\n        key: \"back\",\n        onClick: this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"\\u53D6\\u6D88\"), React.createElement(_Button, {\n        key: \"submit\",\n        type: \"primary\",\n        onClick: () => {\n          this.submitSuggest();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"\\u63D0\\u4EA4\")],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(_Form, Object.assign({}, formItemLayout, {\n      className: \"editNotice-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), getFieldDecorator(\"suggest\", {\n      rules: [{\n        required: true,\n        message: \"请输入建议\",\n        whitespace: true\n      }]\n    })(React.createElement(TextArea, {\n      placeHolder: \"\\u8BF7\\u8F93\\u5165\\u5EFA\\u8BAE\",\n      className: \"editNotice-form-item-textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })))));\n    const columns = [{\n      title: \"序号\",\n      dataIndex: \"name\",\n      key: \"name\"\n    }, // {\n    //   title: 'Name',\n    //   dataIndex: 'name',\n    //   key: 'name',\n    //   render: text => <a>{text}</a>,\n    // },\n    {\n      title: \"申请人\",\n      dataIndex: \"doctor\",\n      key: \"doctor\"\n    }, {\n      title: \"申请时间\",\n      dataIndex: \"applyTime\",\n      key: \"applyTime\"\n    }, {\n      title: \"所属单位\",\n      dataIndex: \"hospital\",\n      key: \"hospital\"\n    }, {\n      title: \"研究类型\",\n      dataIndex: \"studyType\",\n      key: \"studyType\"\n    }, {\n      title: \"审批状态\",\n      dataIndex: \"approveStatus\",\n      key: \"approveStatus\"\n    }, // {\n    //   title: 'Tags',\n    //   key: 'tags',\n    //   dataIndex: 'tags',\n    //   render: tags => (\n    //     <span>\n    //       {tags.map(tag => {\n    //         let color = tag.length > 5 ? 'geekblue' : 'green';\n    //         if (tag === 'loser') {\n    //           color = 'volcano';\n    //         }\n    //         return (\n    //           <Tag color={color} key={tag}>\n    //             {tag.toUpperCase()}\n    //           </Tag>\n    //         );\n    //       })}\n    //     </span>\n    //   ),\n    // },\n    {\n      title: \"操作\",\n      key: \"action\",\n      render: (text, record) => React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: this.onCheck,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"\\u67E5\\u770B/\\u5EFA\\u8BAE\"))\n    }];\n    return React.createElement(\"div\", {\n      className: \"approveList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, page === \"listPage\" ? React.createElement(_Spin, {\n      spinning: spin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      key: \"1\",\n      className: \"approveList-table\",\n      columns: columns,\n      dataSource: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    })) : checkPage);\n  }\n\n}\n\nexport default _Form.create()(ApproveList);","map":{"version":3,"sources":["/Users/mac/Desktop/IBDRegister/src/components/busniess/ApproveList/ApproveList.js"],"names":["React","Component","http","applyDataBaseId","TextArea","ApproveList","state","data","record","page","spin","visible","componentDidMount","getData","setState","res","getTable","resid","error","onCheck","onBack","onSuggest","render","getFieldDecorator","props","form","options","label","value","formItemLayout","labelCol","xs","span","sm","wrapperCol","checkPage","doctor","hospital","post","phoneNumber","email","teamPeople","teamPeople2","teamPeople3","studyType","onChangeCheckbox","CDPatientNumber","UCPatientNumber","doctorPhoto","backgroundSize","handleOk","handleCancel","submitSuggest","rules","required","message","whitespace","columns","title","dataIndex","key","text","create"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAcA,OAAO,oBAAP;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,MAAMC,eAAe,GAAG,cAAxB;MACOC,Q,UAAAA,Q;;AAEP,MAAMC,WAAN,SAA0BL,KAAK,CAACC,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCK,KADwC,GAChC;AACNC,MAAAA,IAAI,EAAE,CAAC,EAAD,CADA;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,IAAI,EAAE,UAHA;AAINC,MAAAA,IAAI,EAAC,KAJC;AAKNC,MAAAA,OAAO,EAAC;AALF,KADgC;;AAAA,SAQxCC,iBARwC,GAQpB,YAAY;AAC9B,YAAM,KAAKC,OAAL,EAAN;AACD,KAVuC;;AAAA,SAWxCA,OAXwC,GAW9B,YAAY;AACpB,WAAKC,QAAL,CAAc;AACZJ,QAAAA,IAAI,EAAC;AADO,OAAd;AAGA,UAAIK,GAAJ;;AACA,UAAI;AACFA,QAAAA,GAAG,GAAG,MAAMb,IAAI,GAAGc,QAAP,CAAgB;AAC1BC,UAAAA,KAAK,EAAEd;AADmB,SAAhB,CAAZ;;AAGA,YAAGY,GAAG,CAACR,IAAJ,CAASW,KAAT,KAAmB,CAAtB,EAAwB;AACxB,eAAKJ,QAAL,CAAc;AACZP,YAAAA,IAAI,EAAEQ,GAAG,CAACR,IAAJ,CAASA;AADH,WAAd;AAGC;AACF,OATD,CASE,OAAOW,KAAP,EAAc,CAAE;;AAClB,WAAKJ,QAAL,CAAc;AACZJ,QAAAA,IAAI,EAAC;AADO,OAAd;AAGD,KA7BuC;;AAAA,SA8BxCS,OA9BwC,GA8B9B,MAAM;AACd,WAAKL,QAAL,CAAc;AACZL,QAAAA,IAAI,EAAE;AADM,OAAd;AAGD,KAlCuC;;AAAA,SAmCxCW,MAnCwC,GAmC/B,MAAM;AACb,WAAKN,QAAL,CAAc;AACZL,QAAAA,IAAI,EAAE;AADM,OAAd;AAGD,KAvCuC;;AAAA,SAwCxCY,SAxCwC,GAwC5B,MAAM;AAChB,WAAKP,QAAL,CAAc;AACZH,QAAAA,OAAO,EAAC;AADI,OAAd;AAGD,KA5CuC;AAAA;;AA6CxCW,EAAAA,MAAM,GAAG;AAAA,wBACqC,KAAKhB,KAD1C;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,MADP,eACOA,MADP;AAAA,UACeC,IADf,eACeA,IADf;AAAA,UACoBC,IADpB,eACoBA,IADpB;AAAA,UACyBC,OADzB,eACyBA,OADzB;AAAA,UAECY,iBAFD,GAEuB,KAAKC,KAAL,CAAWC,IAFlC,CAECF,iBAFD;AAGP,UAAMG,OAAO,GAAG,CACd;AAAEC,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KADc,EAEd;AAAED,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KAFc,EAGd;AAAED,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KAHc,EAId;AAAED,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KAJc,CAAhB;AAMA,UAAMC,cAAc,GAAG;AACrBC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SADI;AAERC,QAAAA,EAAE,EAAE;AAAED,UAAAA,IAAI,EAAE;AAAR;AAFI,OADW;AAKrBE,MAAAA,UAAU,EAAE;AACVH,QAAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SADM;AAEVC,QAAAA,EAAE,EAAE;AAAED,UAAAA,IAAI,EAAE;AAAR;AAFM;AALS,KAAvB;AAUA,UAAMG,SAAS,GACb,6CACMN,cADN;AAEE,MAAA,SAAS,EAAC,kBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAIGpB,IAAI,KAAK,WAAT,GACC;AACE,MAAA,IAAI,EAAE,UADR;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,OAAO,EAAE,KAAKW,MAHhB;AAIE,MAAA,SAAS,EAAC,iBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,GASG,IAbN,EAcE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,OAAO,EAAE,KAAKA,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAQE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,OAAO,EAAE,KAAKC,SAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARF,CAdF,EA8BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EA9BF,EA+BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CA/BF,EAgCE,0BAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOb,MAAM,CAAC4B,MAAd,CADF,CAhCF,EAmCE,0BAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO5B,MAAM,CAAC6B,QAAd,CADF,CAnCF,EAsCE,0BAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO7B,MAAM,CAAC8B,IAAd,CADF,CAtCF,EAyCE,0BAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO9B,MAAM,CAAC+B,WAAd,CADF,CAzCF,EA4CE,0BAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO/B,MAAM,CAACgC,KAAd,CADF,CA5CF,EA+CE,0BAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOhC,MAAM,CAACiC,UAAd,CADF,cAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOjC,MAAM,CAACkC,WAAd,CAFF,cAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOlC,MAAM,CAACmC,WAAd,CAHF,aA/CF,EAoDE,0BAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,8BAAU,KAAV;AACE,MAAA,OAAO,EAAEjB,OADX;AAEE,MAAA,YAAY,EAAElB,MAAM,CAACoC,SAFvB;AAGE,MAAA,QAAQ,EAAE,KAAKC,gBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CApDF,EA2DE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DA3DF,EA6DE,0BAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOrC,MAAM,CAACsC,eAAd,CADF,CA7DF,EAgEE,0BAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOtC,MAAM,CAACuC,eAAd,CADF,CAhEF,EAmEE,0BAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAEvC,MAAM,CAACwC,WADd;AAEE,MAAA,GAAG,EAAC,QAFN;AAGE,MAAA,KAAK,EAAE;AAAEC,QAAAA,cAAc,EAAE;AAAlB,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAnEF,EA0EE;AACI,MAAA,KAAK,EAAC,cADV;AAEI,MAAA,OAAO,EAAEtC,OAFb;AAGI,MAAA,KAAK,EAAE,GAHX;AAII,MAAA,IAAI,EAAE,KAAKuC,QAJf;AAKI,MAAA,QAAQ,EAAE,KAAKC,YALnB;AAMI,MAAA,cAAc,EAAE,IANpB;AAOI,MAAA,MAAM,EAAE,CACN;AAAQ,QAAA,GAAG,EAAC,MAAZ;AAAmB,QAAA,OAAO,EAAE,KAAKA,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADM,EAIN;AAAQ,QAAA,GAAG,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,SAA1B;AAAoC,QAAA,OAAO,EAAE,MAAI;AAC/C,eAAKC,aAAL;AACD,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJM,CAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAkBI,6CAAUvB,cAAV;AAA0B,MAAA,SAAS,EAAC,iBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAEKN,iBAAiB,CAAC,SAAD,EAAY;AAC5B8B,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE,OAFX;AAGEC,QAAAA,UAAU,EAAE;AAHd,OADK;AADqB,KAAZ,CAAjB,CAQE,oBAAC,QAAD;AACD,MAAA,WAAW,EAAC,gCADX;AACmB,MAAA,SAAS,EAAC,+BAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CAFL,CAlBJ,CA1EF,CADF;AA6GA,UAAMC,OAAO,GAAG,CACd;AACEC,MAAAA,KAAK,EAAE,IADT;AAEEC,MAAAA,SAAS,EAAE,MAFb;AAGEC,MAAAA,GAAG,EAAE;AAHP,KADc,EAMd;AACA;AACA;AACA;AACA;AACA;AACA;AACEF,MAAAA,KAAK,EAAE,KADT;AAEEC,MAAAA,SAAS,EAAE,QAFb;AAGEC,MAAAA,GAAG,EAAE;AAHP,KAZc,EAiBd;AACEF,MAAAA,KAAK,EAAE,MADT;AAEEC,MAAAA,SAAS,EAAE,WAFb;AAGEC,MAAAA,GAAG,EAAE;AAHP,KAjBc,EAsBd;AACEF,MAAAA,KAAK,EAAE,MADT;AAEEC,MAAAA,SAAS,EAAE,UAFb;AAGEC,MAAAA,GAAG,EAAE;AAHP,KAtBc,EA2Bd;AACEF,MAAAA,KAAK,EAAE,MADT;AAEEC,MAAAA,SAAS,EAAE,WAFb;AAGEC,MAAAA,GAAG,EAAE;AAHP,KA3Bc,EAgCd;AACEF,MAAAA,KAAK,EAAE,MADT;AAEEC,MAAAA,SAAS,EAAE,eAFb;AAGEC,MAAAA,GAAG,EAAE;AAHP,KAhCc,EAqCd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEF,MAAAA,KAAK,EAAE,IADT;AAEEE,MAAAA,GAAG,EAAE,QAFP;AAGEtC,MAAAA,MAAM,EAAE,CAACuC,IAAD,EAAOrD,MAAP,KACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,OAAO,EAAE,KAAKW,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF;AAJJ,KAzDc,CAAhB;AAmEA,WACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGV,IAAI,KAAK,UAAT,GACC;AAAM,MAAA,QAAQ,EAAEC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AACA,MAAA,GAAG,EAAC,GADJ;AAEE,MAAA,SAAS,EAAC,mBAFZ;AAGE,MAAA,OAAO,EAAE+C,OAHX;AAIE,MAAA,UAAU,EAAElD,IAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADD,GAUC4B,SAXJ,CADF;AAgBD;;AAhQuC;;AAkQ1C,eAAe,MAAK2B,MAAL,GAAczD,WAAd,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  List,\n  Tag,\n  Divider,\n  Table,\n  message,\n  Form,\n  Button,\n  Checkbox,\n  Spin,\n  Modal,\n  Input\n} from \"antd\";\nimport \"./ApproveList.less\";\nimport http from \"../../../utils/api\";\nconst applyDataBaseId = \"620384838453\";\nconst {TextArea} = Input\n\nclass ApproveList extends React.Component {\n  state = {\n    data: [{}],\n    record: {},\n    page: \"listPage\",\n    spin:false,\n    visible:false\n  };\n  componentDidMount = async () => {\n    await this.getData();\n  };\n  getData = async () => {\n    this.setState({\n      spin:true\n    })\n    let res;\n    try {\n      res = await http().getTable({\n        resid: applyDataBaseId\n      });\n      if(res.data.error === 0){\n      this.setState({\n        data: res.data.data\n      });\n      }\n    } catch (error) {}\n    this.setState({\n      spin:false\n    })\n  };\n  onCheck = () => {\n    this.setState({\n      page: \"checkPage\"\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  onSuggest = () => {\n    this.setState({\n      visible:true\n    })\n  }\n  render() {\n    const { data, record, page,spin,visible } = this.state;\n    const { getFieldDecorator } = this.props.form;\n    const options = [\n      { label: \"单中心研究\", value: \"单中心研究\" },\n      { label: \"多中心研究\", value: \"多中心研究\" },\n      { label: \"第三方研究\", value: \"第三方研究\" },\n      { label: \"所有研究\", value: \"所有研究\" }\n    ];\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const checkPage = (\n      <Form\n        {...formItemLayout}\n        className=\"approveList-form\"\n      >\n        {page === \"checkPage\" ? (\n          <Button\n            icon={\"rollback\"}\n            type=\"primary\"\n            onClick={this.onBack}\n            className=\"approveList-btn\"\n          >\n            返回\n          </Button>\n        ) : null}\n        <div className=\"approveList-btns\">\n          <Button\n            className=\"approveList-btn\"\n            type=\"primary\"\n            onClick={this.onBack}\n          >\n            同意\n          </Button>\n          <Button\n            className=\"approveList-btn\"\n            type=\"primary\"\n            onClick={this.onSuggest}\n          >\n            \b建议\n          </Button>\n        </div>\n        <h1>参与CHASE-IBD数据库建设申请表</h1>\n        <h3>申请医疗单位</h3>\n        <Form.Item label={<span>申请人&nbsp;</span>}>\n          <span>{record.doctor}</span>\n        </Form.Item>\n        <Form.Item label={<span>所属单位&nbsp;</span>}>\n          <span>{record.hospital}</span>\n        </Form.Item>\n        <Form.Item label={<span>职称&nbsp;</span>}>\n          <span>{record.post}</span>\n        </Form.Item>\n        <Form.Item label={<span>联系电话&nbsp;</span>}>\n          <span>{record.phoneNumber}</span>\n        </Form.Item>\n        <Form.Item label={<span>E-mail&nbsp;</span>}>\n          <span>{record.email}</span>\n        </Form.Item>\n        <Form.Item label={<span>IBD治疗团队名单&nbsp;</span>}>\n          <span>{record.teamPeople}</span>&nbsp;&nbsp;\n          <span>{record.teamPeople2}</span>&nbsp;&nbsp;\n          <span>{record.teamPeople3}</span>&nbsp;&nbsp;\n        </Form.Item>\n        <Form.Item label={<span>选择参与数据库研究&nbsp;</span>}>\n          <Checkbox.Group\n            options={options}\n            defaultValue={record.studyType}\n            onChange={this.onChangeCheckbox}\n          />\n        </Form.Item>\n        <h3>贵院目前患者数量</h3>\n\n        <Form.Item label={<span>CD患者数量&nbsp;</span>}>\n          <span>{record.CDPatientNumber}</span>\n        </Form.Item>\n        <Form.Item label={<span>UC患者数量&nbsp;</span>}>\n          <span>{record.UCPatientNumber}</span>\n        </Form.Item>\n        <Form.Item label={<span>医师执照&nbsp;</span>}>\n          <img\n            src={record.doctorPhoto}\n            alt=\"avatar\"\n            style={{ backgroundSize: \"100%\" }}\n          />\n        </Form.Item> \n        <Modal\n            title=\"建议\"\n            visible={visible}\n            width={500}\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n            destroyOnClose={true}\n            footer={[\n              <Button key=\"back\" onClick={this.handleCancel}>\n                取消\n              </Button>,\n              <Button key=\"submit\" type=\"primary\" onClick={()=>{\n                this.submitSuggest()\n              }}>\n                提交\n              </Button>,\n            ]}\n          >\n            <Form {...formItemLayout} className=\"editNotice-form\">\n              {/* <h1>消息编辑</h1> */}\n                {getFieldDecorator(\"suggest\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入建议\",\n                      whitespace: true\n                    }\n                  ]\n                })(<TextArea  \n                  placeHolder=\"请输入建议\" className=\"editNotice-form-item-textarea\" />)}\n            </Form>\n          </Modal>\n      </Form>\n    );\n    const columns = [\n      {\n        title: \"序号\",\n        dataIndex: \"name\",\n        key: \"name\"\n      },\n      // {\n      //   title: 'Name',\n      //   dataIndex: 'name',\n      //   key: 'name',\n      //   render: text => <a>{text}</a>,\n      // },\n      {\n        title: \"申请人\",\n        dataIndex: \"doctor\",\n        key: \"doctor\"\n      },\n      {\n        title: \"申请时间\",\n        dataIndex: \"applyTime\",\n        key: \"applyTime\"\n      },\n      {\n        title: \"所属单位\",\n        dataIndex: \"hospital\",\n        key: \"hospital\"\n      },\n      {\n        title: \"研究类型\",\n        dataIndex: \"studyType\",\n        key: \"studyType\"\n      },\n      {\n        title: \"审批状态\",\n        dataIndex: \"approveStatus\",\n        key: \"approveStatus\"\n      },\n      // {\n      //   title: 'Tags',\n      //   key: 'tags',\n      //   dataIndex: 'tags',\n      //   render: tags => (\n      //     <span>\n      //       {tags.map(tag => {\n      //         let color = tag.length > 5 ? 'geekblue' : 'green';\n      //         if (tag === 'loser') {\n      //           color = 'volcano';\n      //         }\n      //         return (\n      //           <Tag color={color} key={tag}>\n      //             {tag.toUpperCase()}\n      //           </Tag>\n      //         );\n      //       })}\n      //     </span>\n      //   ),\n      // },\n      {\n        title: \"操作\",\n        key: \"action\",\n        render: (text, record) => (\n          <span>\n            <a onClick={this.onCheck}>查看/建议</a>\n          </span>\n        )\n      }\n    ];\n    return (\n      <div className=\"approveList\">\n        {page === \"listPage\" ? (\n          <Spin spinning={spin}>\n          <Table\n          key='1'\n            className=\"approveList-table\"\n            columns={columns}\n            dataSource={data}\n          />\n          </Spin>\n        ) : (\n          checkPage\n        )}\n      </div>\n    );\n  }\n}\nexport default Form.create()(ApproveList);\n"]},"metadata":{},"sourceType":"module"}