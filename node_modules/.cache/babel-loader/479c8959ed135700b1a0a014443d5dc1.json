{"ast":null,"code":"import _Input from \"antd/es/input\";\nimport _List from \"antd/es/list\";\nimport _Avatar from \"antd/es/avatar\";\nimport _Popconfirm from \"antd/es/popconfirm\";\nimport _Button from \"antd/es/button\";\nimport _Upload from \"antd/es/upload\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport _Form from \"antd/es/form\";\nimport _Icon from \"antd/es/icon\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/Users/mac/Desktop/IBDRegister/src/components/busniess/ApplyDataBase/ApplyDataBase.js\";\nimport React, { Component } from \"react\";\nimport \"./ApplyDataBase.less\";\nimport http from \"../../../utils/api\";\nconst applyDataBaseId = \"620384838453\";\n\nclass ApplyDataBase extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imageUrl: \"\",\n      applyList: [],\n      showApply: false,\n      page: \"listPage\"\n    };\n\n    this.componentDidMount = async () => {\n      let res;\n      await this.getApplyData();\n    };\n\n    this.getApplyData = async () => {\n      let res;\n\n      try {\n        res = await http().getTable({\n          resid: applyDataBaseId\n        });\n\n        if (res.data.error == 0) {\n          this.setState({\n            applyList: res.data.data\n          });\n        }\n      } catch (error) {\n        _message.error(error.message);\n      }\n    };\n\n    this.onApply = () => {\n      this.setState({\n        page: \"applyPage\"\n      });\n    };\n\n    this.onBack = () => {\n      this.setState({\n        page: \"listPage\"\n      });\n    };\n\n    this.onCheck = () => {\n      this.setState({\n        page: \"checkPage\"\n      });\n    };\n\n    this.onChangeCheckbox = checkedValues => {\n      console.log(\"checkedValues\", checkedValues);\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          this.onSubmit(values);\n        }\n      });\n    };\n\n    this.onSubmitRecord = async record => {\n      let res;\n      record.isSubmit = \"Y\";\n\n      try {\n        res = await http().modifyRecords({\n          resid: applyDataBaseId,\n          data: record\n        });\n\n        if (res.data.error == 0) {\n          _message.success(\"提交成功\");\n        }\n      } catch (error) {\n        _message.error(error.message);\n      }\n    };\n\n    this.onSubmit = async values => {\n      let res;\n      const data = [{\n        doctor: values.doctor,\n        hospital: values.hospital,\n        post: values.post,\n        phoneNumber: values.phone,\n        email: values.email,\n        teamPeople: values.teamPeople,\n        teamPeople2: values.teamPeople2,\n        teamPeople3: values.teamPeople3,\n        studyType: values.study,\n        CDPatientNumber: values.CDNumber,\n        UCPatientNumber: values.UCNumber,\n        doctorPhoto: values.doctorPhotos\n      }];\n\n      try {\n        res = await http().addRecords({\n          resid: applyDataBaseId,\n          data\n        });\n\n        if (res.data.Error == 0) {\n          _message.success(\"申请成功！\");\n        }\n\n        this.setState({\n          showApply: false\n        });\n        console.log(\"res\", res);\n      } catch (error) {\n        _message.error(error.message);\n      }\n    };\n\n    this.renderPage = () => {\n      let page = this.state.page; // switch(page){\n      //   case 'applyPage':\n      //     return (\n      //       this.applyPage\n      //     )\n      //     case 'checkPage':\n      //       return (\n      //         applyPage\n      //       )\n      //       case 'listPage':\n      //         return (\n      //           listPage\n      //         )\n      // }\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const _this$state = this.state,\n          imageUrl = _this$state.imageUrl,\n          applyList = _this$state.applyList,\n          showApply = _this$state.showApply,\n          page = _this$state.page;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const uploadButton = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: this.state.loading ? \"loading\" : \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Upload\"));\n    const options = [{\n      label: \"单中心研究\",\n      value: \"单中心研究\"\n    }, {\n      label: \"多中心研究\",\n      value: \"多中心研究\"\n    }, {\n      label: \"第三方研究\",\n      value: \"第三方研究\"\n    }, {\n      label: \"所有研究\",\n      value: \"所有研究\"\n    }];\n    const checkPage = React.createElement(_Form, Object.assign({}, formItemLayout, {\n      // onSubmit={this.handleSubmit}\n      className: \"applyDataBase-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"\\u53C2\\u4E0ECHASE-IBD\\u6570\\u636E\\u5E93\\u5EFA\\u8BBE\\u7533\\u8BF7\\u8868\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"\\u7533\\u8BF7\\u533B\\u7597\\u5355\\u4F4D\"), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"\\u7533\\u8BF7\\u4EBA\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"aaa\")), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"\\u6240\\u5C5E\\u5355\\u4F4D\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"aaa\")), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"\\u804C\\u79F0\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"aaa\")), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"\\u8054\\u7CFB\\u7535\\u8BDD\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"aaa\")), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"E-mail\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"aaa\")), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"IBD\\u6CBB\\u7597\\u56E2\\u961F\\u540D\\u5355\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"aaa\")), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"\\u9009\\u62E9\\u53C2\\u4E0E\\u6570\\u636E\\u5E93\\u7814\\u7A76\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, getFieldDecorator(\"study\", {\n      rules: []\n    })(React.createElement(_Checkbox.Group, {\n      options: options,\n      onChange: this.onChangeCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }))), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"\\u8D35\\u9662\\u76EE\\u524D\\u60A3\\u8005\\u6570\\u91CF\"), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"CD\\u60A3\\u8005\\u6570\\u91CF\\uFF1A\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"aaa\")), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"UC\\u60A3\\u8005\\u6570\\u91CF\\uFF1A\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"aaa\")), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"\\u533B\\u5E08\\u6267\\u7167\\uFF1A\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, getFieldDecorator(\"doctorPhoto\", {})(React.createElement(_Upload, {\n      name: \"avatar\",\n      listType: \"picture-card\",\n      className: \"avatar-uploader\",\n      showUploadList: false,\n      action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, imageUrl ? React.createElement(\"img\", {\n      src: imageUrl,\n      alt: \"avatar\",\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }) : uploadButton))), React.createElement(_Button, {\n      className: \"applyDataBase-form-save\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"\\u4FDD\\u5B58\"), React.createElement(_Button, {\n      type: \"primary\",\n      className: \"applyDataBase-form-submit\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"\\u63D0\\u4EA4\"), React.createElement(_Button, {\n      icon: \"download\",\n      type: \"primary\",\n      className: \"applyDataBase-form-print\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"\\u6253\\u5370\"));\n    const listPage = React.createElement(_List, {\n      className: \"applyDataBase-content-list\",\n      itemLayout: \"horizontal\",\n      dataSource: applyList,\n      renderItem: item => React.createElement(_List.Item, {\n        actions: [React.createElement(\"a\", {\n          key: \"list-loadmore-edit\",\n          onClick: this.onCheck,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264\n          },\n          __self: this\n        }, \"\\u67E5\\u770B\"), React.createElement(_Popconfirm, {\n          title: \"\\u4F60\\u786E\\u5B9A\\u8981\\u63D0\\u4EA4\\u5417\",\n          onConfirm: () => {\n            this.onSubmitRecord(item);\n          },\n          okText: \"Yes\",\n          cancelText: \"No\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          },\n          __self: this\n        }, \" \", React.createElement(\"a\", {\n          key: \"list-loadmore-edit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, \"\\u63D0\\u4EA4\"))],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(_List.Item.Meta, {\n        avatar: React.createElement(_Avatar, {\n          src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        }),\n        title: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"applyDataBase-content-list-word\",\n          href: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287\n          },\n          __self: this\n        }, \"\\u7533\\u8BF7\\u4EBA:\", item.doctor), React.createElement(\"a\", {\n          className: \"applyDataBase-content-list-word\",\n          href: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }, \"\\u6240\\u5C5E\\u5355\\u4F4D:\", item.hospital)),\n        description: \"\\u8349\\u7A3F\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"\\u7533\\u8BF7\\u65E5\\u671F\\uFF1A\", item.REC_CRTTIME)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    });\n    const applyPage = React.createElement(_Form, Object.assign({}, formItemLayout, {\n      // onSubmit={this.handleSubmit}\n      className: \"applyDataBase-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"\\u53C2\\u4E0ECHASE-IBD\\u6570\\u636E\\u5E93\\u5EFA\\u8BBE\\u7533\\u8BF7\\u8868\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"\\u7533\\u8BF7\\u533B\\u7597\\u5355\\u4F4D\"), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, \"\\u7533\\u8BF7\\u4EBA\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, getFieldDecorator(\"doctor\", {\n      rules: [{\n        required: true,\n        message: \"请输入申请人\",\n        whitespace: true\n      }]\n    })(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, \"\\u6240\\u5C5E\\u5355\\u4F4D\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, getFieldDecorator(\"hospital\", {\n      rules: [{\n        required: true,\n        message: \"请输入所属单位\",\n        whitespace: true\n      }]\n    })(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, \"\\u804C\\u79F0\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, getFieldDecorator(\"post\", {\n      rules: [{\n        required: true,\n        message: \"请输入您的职称！\",\n        whitespace: true\n      }]\n    })(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, \"\\u8054\\u7CFB\\u7535\\u8BDD\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, getFieldDecorator(\"phone\", {\n      rules: [{\n        required: true,\n        message: \"请输入您的联系电话!\",\n        whitespace: true\n      }]\n    })(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, \"E-mail\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, getFieldDecorator(\"email\", {\n      rules: [{\n        required: true,\n        message: \"请输入您的邮箱!\",\n        whitespace: true\n      }]\n    })(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, \"IBD\\u6CBB\\u7597\\u56E2\\u961F\\u540D\\u5355\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, getFieldDecorator(\"teamPeople\", {})(React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }))), getFieldDecorator(\"teamPeople2\", {})(React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }))), getFieldDecorator(\"teamPeople3\", {})(React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    })))), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, \"\\u9009\\u62E9\\u53C2\\u4E0E\\u6570\\u636E\\u5E93\\u7814\\u7A76\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, getFieldDecorator(\"study\", {\n      rules: []\n    })(React.createElement(_Checkbox.Group, {\n      options: options,\n      onChange: this.onChangeCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }))), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, \"\\u8D35\\u9662\\u76EE\\u524D\\u60A3\\u8005\\u6570\\u91CF\"), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, \"CD\\u60A3\\u8005\\u6570\\u91CF\\uFF1A\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, getFieldDecorator(\"CDNumber\", {\n      rules: [{\n        required: true,\n        message: \"请输入贵院的CD患者数量!\",\n        whitespace: true\n      }]\n    })(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, \"UC\\u60A3\\u8005\\u6570\\u91CF\\uFF1A\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, getFieldDecorator(\"UCNumber\", {\n      rules: [{\n        required: true,\n        message: \"请输入贵院的UC患者数量!\",\n        whitespace: true\n      }]\n    })(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, \"\\u533B\\u5E08\\u6267\\u7167\\uFF1A\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, getFieldDecorator(\"doctorPhoto\", {})(React.createElement(_Upload, {\n      name: \"avatar\",\n      listType: \"picture-card\",\n      className: \"avatar-uploader\",\n      showUploadList: false,\n      action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, imageUrl ? React.createElement(\"img\", {\n      src: imageUrl,\n      alt: \"avatar\",\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }) : uploadButton))), React.createElement(_Button, {\n      className: \"applyDataBase-form-save\",\n      htmlType: \"submit\",\n      onClick: this.handleSubmit(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, \"\\u4FDD\\u5B58\"), React.createElement(_Button, {\n      type: \"primary\",\n      className: \"applyDataBase-form-submit\",\n      htmlType: \"submit\",\n      onClick: this.handleSubmit(2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, \"\\u63D0\\u4EA4\"));\n    return React.createElement(\"div\", {\n      className: \"applyDataBase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"applyDataBase-btns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      icon: page === \"applyPage\" || page === \"checkPage\" ? \"rollback\" : \"plus\",\n      type: \"primary\",\n      onClick: page === \"applyPage\" || page === \"checkPage\" ? this.onBack : this.onApply,\n      className: \"applyDataBase-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, page === \"applyPage\" || page === \"checkPage\" ? \"返回\" : \"申请\"), React.createElement(\"a\", {\n      className: \"applyDataBase-photoBtn\",\n      type: \"link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }, \"\\u7533\\u8BF7\\u6D41\\u7A0B\\u56FE\")), React.createElement(\"div\", {\n      className: \"applyDataBase-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, this.state.page === \"applyPage\" ? applyPage : this.state.page === \"checkPage\" ? checkPage : listPage));\n  }\n\n}\n\nexport default _Form.create()(ApplyDataBase);","map":{"version":3,"sources":["/Users/mac/Desktop/IBDRegister/src/components/busniess/ApplyDataBase/ApplyDataBase.js"],"names":["React","Component","http","applyDataBaseId","ApplyDataBase","state","imageUrl","applyList","showApply","page","componentDidMount","res","getApplyData","getTable","resid","data","error","setState","message","onApply","onBack","onCheck","onChangeCheckbox","checkedValues","console","log","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","onSubmit","onSubmitRecord","record","isSubmit","modifyRecords","success","doctor","hospital","post","phoneNumber","phone","email","teamPeople","teamPeople2","teamPeople3","studyType","study","CDPatientNumber","CDNumber","UCPatientNumber","UCNumber","doctorPhoto","doctorPhotos","addRecords","Error","renderPage","render","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","uploadButton","loading","options","label","value","checkPage","rules","handleChange","width","listPage","item","REC_CRTTIME","applyPage","required","whitespace","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./ApplyDataBase.less\";\nimport {\n  Collapse,\n  Icon,\n  Input,\n  Upload,\n  Button,\n  Form,\n  Checkbox,\n  List,\n  Skeleton,\n  Avatar,\n  message,\n  Popconfirm\n} from \"antd\";\nimport http from \"../../../utils/api\";\nconst applyDataBaseId = \"620384838453\";\n\nclass ApplyDataBase extends Component {\n  state = {\n    imageUrl: \"\",\n    applyList: [],\n    showApply: false,\n    page: \"listPage\"\n  };\n  componentDidMount = async () => {\n    let res;\n    await this.getApplyData();\n  };\n  getApplyData = async () => {\n    let res;\n    try {\n      res = await http().getTable({\n        resid: applyDataBaseId\n      });\n      if (res.data.error == 0) {\n        this.setState({\n          applyList: res.data.data\n        });\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  onApply = () => {\n    this.setState({\n      page: \"applyPage\"\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  onCheck = () => {\n    this.setState({\n      page: \"checkPage\"\n    });\n  };\n  onChangeCheckbox = checkedValues => {\n    console.log(\"checkedValues\", checkedValues);\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.onSubmit(values);\n      }\n    });\n  };\n  onSubmitRecord = async record => {\n    let res;\n    record.isSubmit = \"Y\";\n    try {\n      res = await http().modifyRecords({\n        resid: applyDataBaseId,\n        data: record\n      });\n      if (res.data.error == 0) {\n        message.success(\"提交成功\");\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  onSubmit = async values => {\n    let res;\n    const data = [\n      {\n        doctor: values.doctor,\n        hospital: values.hospital,\n        post: values.post,\n        phoneNumber: values.phone,\n        email: values.email,\n        teamPeople: values.teamPeople,\n        teamPeople2: values.teamPeople2,\n        teamPeople3: values.teamPeople3,\n        studyType: values.study,\n        CDPatientNumber: values.CDNumber,\n        UCPatientNumber: values.UCNumber,\n        doctorPhoto: values.doctorPhotos\n      }\n    ];\n    try {\n      res = await http().addRecords({\n        resid: applyDataBaseId,\n        data\n      });\n      if (res.data.Error == 0) {\n        message.success(\"申请成功！\");\n      }\n      this.setState({\n        showApply: false\n      });\n      console.log(\"res\", res);\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  renderPage = () => {\n    let page = this.state.page;\n    // switch(page){\n    //   case 'applyPage':\n    //     return (\n    //       this.applyPage\n    //     )\n    //     case 'checkPage':\n    //       return (\n    //         applyPage\n    //       )\n    //       case 'listPage':\n    //         return (\n    //           listPage\n    //         )\n    // }\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { imageUrl, applyList, showApply, page } = this.state;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const uploadButton = (\n      <div>\n        <Icon type={this.state.loading ? \"loading\" : \"plus\"} />\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n    const options = [\n      { label: \"单中心研究\", value: \"单中心研究\" },\n      { label: \"多中心研究\", value: \"多中心研究\" },\n      { label: \"第三方研究\", value: \"第三方研究\" },\n      { label: \"所有研究\", value: \"所有研究\" }\n    ];\n    const checkPage = (\n      <Form\n        {...formItemLayout}\n        // onSubmit={this.handleSubmit}\n        className=\"applyDataBase-form\"\n      >\n        <h1>参与CHASE-IBD数据库建设申请表</h1>\n        <h3>申请医疗单位</h3>\n        <Form.Item label={<span>申请人&nbsp;</span>}>\n          <span>aaa</span>\n        </Form.Item>\n        <Form.Item label={<span>所属单位&nbsp;</span>}>\n          <span>aaa</span>\n        </Form.Item>\n        <Form.Item label={<span>职称&nbsp;</span>}>\n          <span>aaa</span>\n        </Form.Item>\n        <Form.Item label={<span>联系电话&nbsp;</span>}>\n          <span>aaa</span>\n        </Form.Item>\n        <Form.Item label={<span>E-mail&nbsp;</span>}>\n          <span>aaa</span>\n        </Form.Item>\n        <Form.Item label={<span>IBD治疗团队名单&nbsp;</span>}>\n          <span>aaa</span>\n        </Form.Item>\n        <Form.Item label={<span>选择参与数据库研究&nbsp;</span>}>\n          {getFieldDecorator(\"study\", {\n            rules: []\n          })(\n            <Checkbox.Group\n              options={options}\n              onChange={this.onChangeCheckbox}\n            />\n          )}\n        </Form.Item>\n        <h3>贵院目前患者数量</h3>\n\n        <Form.Item label={<span>CD患者数量：&nbsp;</span>}>\n          <span>aaa</span>\n        </Form.Item>\n        <Form.Item label={<span>UC患者数量：&nbsp;</span>}>\n          <span>aaa</span>\n        </Form.Item>\n        <Form.Item label={<span>医师执照：&nbsp;</span>}>\n          {getFieldDecorator(\"doctorPhoto\", {})(\n            <Upload\n              name=\"avatar\"\n              listType=\"picture-card\"\n              className=\"avatar-uploader\"\n              showUploadList={false}\n              action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n              onChange={this.handleChange}\n            >\n              {imageUrl ? (\n                <img src={imageUrl} alt=\"avatar\" style={{ width: \"100%\" }} />\n              ) : (\n                uploadButton\n              )}\n            </Upload>\n          )}\n        </Form.Item>\n        <Button className=\"applyDataBase-form-save\" htmlType=\"submit\">\n          保存\n        </Button>\n        <Button\n          type=\"primary\"\n          className=\"applyDataBase-form-submit\"\n          htmlType=\"submit\"\n        >\n          提交\n        </Button>\n        <Button\n          icon=\"download\"\n          type=\"primary\"\n          className=\"applyDataBase-form-print\"\n        >\n          打印\n        </Button>\n      </Form>\n    );\n    const listPage = (\n      <List\n        className=\"applyDataBase-content-list\"\n        itemLayout=\"horizontal\"\n        dataSource={applyList}\n        renderItem={item => (\n          <List.Item\n            actions={[\n              <a key=\"list-loadmore-edit\" onClick={this.onCheck}>\n                查看\n              </a>,\n              <Popconfirm\n                title=\"你确定要提交吗\"\n                onConfirm={() => {\n                  this.onSubmitRecord(item);\n                }}\n                okText=\"Yes\"\n                cancelText=\"No\"\n              >\n                {\" \"}\n                <a key=\"list-loadmore-edit\">提交</a>\n              </Popconfirm>\n            ]}\n          >\n            {/* <Skeleton avatar title={false} loading={item.doctor} active> */}\n            <List.Item.Meta\n              avatar={\n                <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n              }\n              title={\n                <React.Fragment>\n                  <a className=\"applyDataBase-content-list-word\" href=\"#\">\n                    申请人:{item.doctor}\n                  </a>\n                  <a className=\"applyDataBase-content-list-word\" href=\"#\">\n                    所属单位:{item.hospital}\n                  </a>\n                </React.Fragment>\n              }\n              description=\"草稿\"\n            />\n            <div>申请日期：{item.REC_CRTTIME}</div>\n            {/* </Skeleton> */}\n          </List.Item>\n        )}\n      />\n    );\n    const applyPage = (\n      <Form\n        {...formItemLayout}\n        // onSubmit={this.handleSubmit}\n        className=\"applyDataBase-form\"\n      >\n        <h1>参与CHASE-IBD数据库建设申请表</h1>\n        <h3>申请医疗单位</h3>\n        <Form.Item label={<span>申请人&nbsp;</span>}>\n          {getFieldDecorator(\"doctor\", {\n            rules: [\n              {\n                required: true,\n                message: \"请输入申请人\",\n                whitespace: true\n              }\n            ]\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label={<span>所属单位&nbsp;</span>}>\n          {getFieldDecorator(\"hospital\", {\n            rules: [\n              {\n                required: true,\n                message: \"请输入所属单位\",\n                whitespace: true\n              }\n            ]\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label={<span>职称&nbsp;</span>}>\n          {getFieldDecorator(\"post\", {\n            rules: [\n              {\n                required: true,\n                message: \"请输入您的职称！\",\n                whitespace: true\n              }\n            ]\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label={<span>联系电话&nbsp;</span>}>\n          {getFieldDecorator(\"phone\", {\n            rules: [\n              {\n                required: true,\n                message: \"请输入您的联系电话!\",\n                whitespace: true\n              }\n            ]\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label={<span>E-mail&nbsp;</span>}>\n          {getFieldDecorator(\"email\", {\n            rules: [\n              {\n                required: true,\n                message: \"请输入您的邮箱!\",\n                whitespace: true\n              }\n            ]\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label={<span>IBD治疗团队名单&nbsp;</span>}>\n          {getFieldDecorator(\"teamPeople\", {})(\n            <React.Fragment>\n              <Input />\n            </React.Fragment>\n          )}\n          {getFieldDecorator(\"teamPeople2\", {})(\n            <React.Fragment>\n              <Input />\n            </React.Fragment>\n          )}\n          {getFieldDecorator(\"teamPeople3\", {})(\n            <React.Fragment>\n              <Input />\n            </React.Fragment>\n          )}\n        </Form.Item>\n        <Form.Item label={<span>选择参与数据库研究&nbsp;</span>}>\n          {getFieldDecorator(\"study\", {\n            rules: []\n          })(\n            <Checkbox.Group\n              options={options}\n              onChange={this.onChangeCheckbox}\n            />\n          )}\n        </Form.Item>\n        <h3>贵院目前患者数量</h3>\n\n        <Form.Item label={<span>CD患者数量：&nbsp;</span>}>\n          {getFieldDecorator(\"CDNumber\", {\n            rules: [\n              {\n                required: true,\n                message: \"请输入贵院的CD患者数量!\",\n                whitespace: true\n              }\n            ]\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label={<span>UC患者数量：&nbsp;</span>}>\n          {getFieldDecorator(\"UCNumber\", {\n            rules: [\n              {\n                required: true,\n                message: \"请输入贵院的UC患者数量!\",\n                whitespace: true\n              }\n            ]\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label={<span>医师执照：&nbsp;</span>}>\n          {getFieldDecorator(\"doctorPhoto\", {})(\n            <Upload\n              name=\"avatar\"\n              listType=\"picture-card\"\n              className=\"avatar-uploader\"\n              showUploadList={false}\n              action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n              onChange={this.handleChange}\n            >\n              {imageUrl ? (\n                <img src={imageUrl} alt=\"avatar\" style={{ width: \"100%\" }} />\n              ) : (\n                uploadButton\n              )}\n            </Upload>\n          )}\n        </Form.Item>\n        <Button className=\"applyDataBase-form-save\" htmlType=\"submit\" \n          onClick={this.handleSubmit(1)}>\n          保存\n        </Button>\n        <Button\n          type=\"primary\"\n          className=\"applyDataBase-form-submit\"\n          htmlType=\"submit\"\n          onClick={this.handleSubmit(2)}\n        >\n          提交\n        </Button>\n      </Form>\n    );\n\n    return (\n      <div className=\"applyDataBase\">\n        <div className=\"applyDataBase-btns\">\n          <Button\n            icon={\n              page === \"applyPage\" || page === \"checkPage\" ? \"rollback\" : \"plus\"\n            }\n            type=\"primary\"\n            onClick={\n              page === \"applyPage\" || page === \"checkPage\"\n                ? this.onBack\n                : this.onApply\n            }\n            className=\"applyDataBase-btn\"\n          >\n            {page === \"applyPage\" || page === \"checkPage\" ? \"返回\" : \"申请\"}\n          </Button>\n          <a className=\"applyDataBase-photoBtn\" type=\"link\">\n            申请流程图\n          </a>\n        </div>\n        <div className=\"applyDataBase-content\">\n          {this.state.page === \"applyPage\"\n            ? applyPage\n            : this.state.page === \"checkPage\"\n            ? checkPage\n            : listPage}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(ApplyDataBase);\n"]},"metadata":{},"sourceType":"module"}