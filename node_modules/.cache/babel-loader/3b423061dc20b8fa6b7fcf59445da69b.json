{"ast":null,"code":"import _Table from \"antd/es/table\";\nimport _Divider from \"antd/es/divider\";\nvar _jsxFileName = \"/Users/mac/Desktop/IBDRegister/src/components/busniess/ApproveList/ApproveList.js\";\nimport React, { Component } from \"react\";\nimport \"./ApproveList.less\";\nimport http from \"../../../utils/api\";\nconst applyProjectId = \"620475440053\";\n\nclass ApproveList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [{}]\n    };\n\n    this.componentDidMount = async () => {\n      await this.getData();\n    };\n\n    this.getData = async () => {\n      let res;\n\n      try {\n        res = await http().getTable({\n          resid: applyProjectId\n        }); // if(res.data.error === 0){\n\n        this.setState({\n          data: res.data.data\n        });\n        console.log(\"re\", res.data.data); // }\n      } catch (error) {}\n    };\n  }\n\n  render() {\n    const data = this.state.data;\n    const checkPage = React.createElement(Form, Object.assign({}, formItemLayout, {\n      // onSubmit={this.handleSubmit}\n      className: \"applyDataBase-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"\\u53C2\\u4E0ECHASE-IBD\\u6570\\u636E\\u5E93\\u5EFA\\u8BBE\\u7533\\u8BF7\\u8868\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"\\u7533\\u8BF7\\u533B\\u7597\\u5355\\u4F4D\"), React.createElement(Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"\\u7533\\u8BF7\\u4EBA\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, record.doctor)), React.createElement(Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"\\u6240\\u5C5E\\u5355\\u4F4D\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, record.hospital)), React.createElement(Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"\\u804C\\u79F0\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, record.post)), React.createElement(Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"\\u8054\\u7CFB\\u7535\\u8BDD\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, record.phoneNumber)), React.createElement(Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"E-mail\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, record.email)), React.createElement(Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"IBD\\u6CBB\\u7597\\u56E2\\u961F\\u540D\\u5355\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, record.teamPeople), \"\\xA0\\xA0\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, record.teamPeople2), \"\\xA0\\xA0\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, record.teamPeople3), \"\\xA0\\xA0\"), React.createElement(Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"\\u9009\\u62E9\\u53C2\\u4E0E\\u6570\\u636E\\u5E93\\u7814\\u7A76\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Checkbox.Group, {\n      options: options,\n      defaultValue: record.studyType,\n      onChange: this.onChangeCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"\\u8D35\\u9662\\u76EE\\u524D\\u60A3\\u8005\\u6570\\u91CF\"), React.createElement(Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"CD\\u60A3\\u8005\\u6570\\u91CF\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, record.CDPatientNumber)), React.createElement(Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"UC\\u60A3\\u8005\\u6570\\u91CF\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, record.UCPatientNumber)), React.createElement(Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"\\u533B\\u5E08\\u6267\\u7167\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: record.doctorPhoto,\n      alt: \"avatar\",\n      style: {\n        backgroundSize: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(Button, {\n      icon: \"download\",\n      type: \"primary\",\n      className: \"applyDataBase-form-print\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"\\u6253\\u5370\"));\n    const columns = [{\n      title: \"序号\",\n      dataIndex: \"name\",\n      key: \"name\"\n    }, // {\n    //   title: 'Name',\n    //   dataIndex: 'name',\n    //   key: 'name',\n    //   render: text => <a>{text}</a>,\n    // },\n    {\n      title: \"申请人\",\n      dataIndex: \"doctor\",\n      key: \"doctor\"\n    }, {\n      title: \"申请时间\",\n      dataIndex: \"applyTime\",\n      key: \"applyTime\"\n    }, {\n      title: \"所属单位\",\n      dataIndex: \"hospital\",\n      key: \"hospital\"\n    }, {\n      title: \"研究类型\",\n      dataIndex: \"studyType\",\n      key: \"studyType\"\n    }, {\n      title: \"审批状态\",\n      dataIndex: \"approveStatus\",\n      key: \"approveStatus\"\n    }, // {\n    //   title: 'Tags',\n    //   key: 'tags',\n    //   dataIndex: 'tags',\n    //   render: tags => (\n    //     <span>\n    //       {tags.map(tag => {\n    //         let color = tag.length > 5 ? 'geekblue' : 'green';\n    //         if (tag === 'loser') {\n    //           color = 'volcano';\n    //         }\n    //         return (\n    //           <Tag color={color} key={tag}>\n    //             {tag.toUpperCase()}\n    //           </Tag>\n    //         );\n    //       })}\n    //     </span>\n    //   ),\n    // },\n    {\n      title: \"操作\",\n      key: \"action\",\n      render: (text, record) => React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"\\u67E5\\u770B\"), React.createElement(_Divider, {\n        type: \"vertical\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"\\u5EFA\\u8BAE\"))\n    }];\n    return page === \"listPage\" ? React.createElement(\"div\", {\n      className: \"approveList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      rowKey: \"1\",\n      className: \"EditNotice\",\n      columns: columns,\n      dataSource: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })) : checkPage;\n  }\n\n}\n\nexport default ApproveList;","map":{"version":3,"sources":["/Users/mac/Desktop/IBDRegister/src/components/busniess/ApproveList/ApproveList.js"],"names":["React","Component","http","applyProjectId","ApproveList","state","data","componentDidMount","getData","res","getTable","resid","setState","console","log","error","render","checkPage","formItemLayout","record","doctor","hospital","post","phoneNumber","email","teamPeople","teamPeople2","teamPeople3","options","studyType","onChangeCheckbox","CDPatientNumber","UCPatientNumber","doctorPhoto","backgroundSize","columns","title","dataIndex","key","text","page"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { List, Tag, Divider, Table, message,FOrm} from \"antd\";\nimport \"./ApproveList.less\";\nimport http from \"../../../utils/api\";\nconst applyProjectId = \"620475440053\";\n\nclass ApproveList extends React.Component {\n  state = {\n    data: [{}]\n  };\n  componentDidMount = async () => {\n    await this.getData();\n  };\n  getData = async () => {\n    let res;\n    try {\n      res = await http().getTable({\n        resid: applyProjectId\n      });\n      // if(res.data.error === 0){\n      this.setState({\n        data: res.data.data\n      });\n      console.log(\"re\", res.data.data);\n      // }\n    } catch (error) {}\n  };\n\n  render() {\n    const { data } = this.state;\n    const checkPage = (\n      <Form\n        {...formItemLayout}\n        // onSubmit={this.handleSubmit}\n        className=\"applyDataBase-form\"\n      >\n        <h1>参与CHASE-IBD数据库建设申请表</h1>\n        <h3>申请医疗单位</h3>\n        <Form.Item label={<span>申请人&nbsp;</span>}>\n          <span>{record.doctor}</span>\n        </Form.Item>\n        <Form.Item label={<span>所属单位&nbsp;</span>}>\n          <span>{record.hospital}</span>\n        </Form.Item>\n        <Form.Item label={<span>职称&nbsp;</span>}>\n          <span>{record.post}</span>\n        </Form.Item>\n        <Form.Item label={<span>联系电话&nbsp;</span>}>\n          <span>{record.phoneNumber}</span>\n        </Form.Item>\n        <Form.Item label={<span>E-mail&nbsp;</span>}>\n          <span>{record.email}</span>\n        </Form.Item>\n        <Form.Item label={<span>IBD治疗团队名单&nbsp;</span>}>\n          <span>{record.teamPeople}</span>&nbsp;&nbsp;\n          <span>{record.teamPeople2}</span>&nbsp;&nbsp;\n          <span>{record.teamPeople3}</span>&nbsp;&nbsp;\n        </Form.Item>\n        <Form.Item label={<span>选择参与数据库研究&nbsp;</span>}>\n          <Checkbox.Group\n            options={options}\n            defaultValue={record.studyType}\n            onChange={this.onChangeCheckbox}\n          />\n        </Form.Item>\n        <h3>贵院目前患者数量</h3>\n\n        <Form.Item label={<span>CD患者数量&nbsp;</span>}>\n          <span>{record.CDPatientNumber}</span>\n        </Form.Item>\n        <Form.Item label={<span>UC患者数量&nbsp;</span>}>\n          <span>{record.UCPatientNumber}</span>\n        </Form.Item>\n        <Form.Item label={<span>医师执照&nbsp;</span>}>\n          <img\n            src={record.doctorPhoto}\n            alt=\"avatar\"\n            style={{ backgroundSize: \"100%\" }}\n          />\n        </Form.Item>\n\n        <Button\n          icon=\"download\"\n          type=\"primary\"\n          className=\"applyDataBase-form-print\"\n        >\n          打印\n        </Button>\n      </Form>\n    );\n    const columns = [\n      {\n        title: \"序号\",\n        dataIndex: \"name\",\n        key: \"name\"\n      },\n      // {\n      //   title: 'Name',\n      //   dataIndex: 'name',\n      //   key: 'name',\n      //   render: text => <a>{text}</a>,\n      // },\n      {\n        title: \"申请人\",\n        dataIndex: \"doctor\",\n        key: \"doctor\"\n      },\n      {\n        title: \"申请时间\",\n        dataIndex: \"applyTime\",\n        key: \"applyTime\"\n      },\n      {\n        title: \"所属单位\",\n        dataIndex: \"hospital\",\n        key: \"hospital\"\n      },\n      {\n        title: \"研究类型\",\n        dataIndex: \"studyType\",\n        key: \"studyType\"\n      },\n      {\n        title: \"审批状态\",\n        dataIndex: \"approveStatus\",\n        key: \"approveStatus\"\n      },\n      // {\n      //   title: 'Tags',\n      //   key: 'tags',\n      //   dataIndex: 'tags',\n      //   render: tags => (\n      //     <span>\n      //       {tags.map(tag => {\n      //         let color = tag.length > 5 ? 'geekblue' : 'green';\n      //         if (tag === 'loser') {\n      //           color = 'volcano';\n      //         }\n      //         return (\n      //           <Tag color={color} key={tag}>\n      //             {tag.toUpperCase()}\n      //           </Tag>\n      //         );\n      //       })}\n      //     </span>\n      //   ),\n      // },\n      {\n        title: \"操作\",\n        key: \"action\",\n        render: (text, record) => (\n          <span>\n            <a>查看</a>\n            <Divider type=\"vertical\" />\n            <a>建议</a>\n          </span>\n        )\n      }\n    ];\n    return page === \"listPage\" ? (\n      <div className=\"approveList\">\n        <Table\n          rowKey=\"1\"\n          className=\"EditNotice\"\n          columns={columns}\n          dataSource={data}\n        />\n      </div>\n    ) : (\n      checkPage\n    );\n  }\n}\nexport default ApproveList;\n"]},"metadata":{},"sourceType":"module"}