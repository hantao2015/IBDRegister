{"ast":null,"code":"import _Table from \"antd/es/table\";\nimport _Divider from \"antd/es/divider\";\nvar _jsxFileName = \"/Users/mac/Desktop/IBDRegister/src/components/busniess/EditNotice/EditNotice.js\";\nimport React, { Component } from 'react';\nimport './EditNotice.less';\nimport http from '../../../utils/api';\nconst applyProjectId = \"620475440053\";\n\nclass EditNotice extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [{}]\n    };\n\n    this.componentDidMount = async () => {\n      await this.getData();\n    };\n\n    this.getData = async () => {\n      let res;\n\n      try {\n        res = await http().getTable({\n          resid: applyProjectId\n        }); // if(res.data.error === 0){\n\n        this.setState({\n          data: res.data.data\n        });\n        console.log(\"re\", res.data.data); // }\n      } catch (error) {}\n    };\n  }\n\n  render() {\n    const data = this.state.data;\n    const columns = [{\n      title: '序号',\n      dataIndex: 'name',\n      key: 'name'\n    }, {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      render: text => React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, text)\n    }, {\n      title: '申请时间',\n      dataIndex: 'applyTime',\n      key: 'applyTime'\n    }, {\n      title: '所属单位',\n      dataIndex: 'hospital',\n      key: 'hospital'\n    }, {\n      title: '申请人',\n      dataIndex: 'doctor',\n      key: 'doctor'\n    }, {\n      title: '研究类型',\n      dataIndex: 'studyType',\n      key: 'studyType'\n    }, {\n      title: '负责人',\n      dataIndex: 'doctor',\n      key: 'doctor'\n    }, // {\n    //   title: 'Tags',\n    //   key: 'tags',\n    //   dataIndex: 'tags',\n    //   render: tags => (\n    //     <span>\n    //       {tags.map(tag => {\n    //         let color = tag.length > 5 ? 'geekblue' : 'green';\n    //         if (tag === 'loser') {\n    //           color = 'volcano';\n    //         }\n    //         return (\n    //           <Tag color={color} key={tag}>\n    //             {tag.toUpperCase()}\n    //           </Tag>\n    //         );\n    //       })}\n    //     </span>\n    //   ),\n    // },\n    {\n      title: '操作',\n      key: 'action',\n      render: (text, record) => React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"\\u67E5\\u770B\"), React.createElement(_Divider, {\n        type: \"vertical\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"\\u5EFA\\u8BAE\"))\n    }];\n    return React.createElement(_Table, {\n      className: \"EditNotice\",\n      columns: columns,\n      dataSource: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default EditNotice;","map":{"version":3,"sources":["/Users/mac/Desktop/IBDRegister/src/components/busniess/EditNotice/EditNotice.js"],"names":["React","Component","http","applyProjectId","EditNotice","state","data","componentDidMount","getData","res","getTable","resid","setState","console","log","error","render","columns","title","dataIndex","key","text","record"],"mappings":"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","sourcesContent":[" import React,{Component} from 'react'\nimport { List ,Tag,Divider,Table, message} from 'antd';\nimport  './EditNotice.less';\nimport http from '../../../utils/api';\nconst applyProjectId = \"620475440053\";\n\n  class EditNotice extends React.Component{\n    state = {\n        data:[{}]\n    }\n    componentDidMount = async() => {\n       await this.getData();\n    }\n    getData = async() => {\n        let res;\n        try {\n            res = await http().getTable({\n                resid:applyProjectId\n            })\n            // if(res.data.error === 0){\n                this.setState({\n                    data:res.data.data\n                })\n                console.log(\"re\",res.data.data)\n            // }\n        } catch (error) {\n            \n        }\n    }\n\n    render(){\n        const {data} = this.state;\n        const columns = [\n            {\n              title: '序号',\n              dataIndex: 'name',\n              key: 'name',\n            },\n            {\n              title: 'Name',\n              dataIndex: 'name',\n              key: 'name',\n              render: text => <a>{text}</a>,\n            },\n            {\n              title: '申请时间',\n              dataIndex: 'applyTime',\n              key: 'applyTime',\n            },\n            {\n              title: '所属单位',\n              dataIndex: 'hospital',\n              key: 'hospital',\n            },\n            {\n              title: '申请人',\n              dataIndex: 'doctor',\n              key: 'doctor',\n            },\n            {\n              title: '研究类型',\n              dataIndex: 'studyType',\n              key: 'studyType',\n            },\n            {\n              title: '负责人',\n              dataIndex: 'doctor',\n              key: 'doctor',\n            },\n            // {\n            //   title: 'Tags',\n            //   key: 'tags',\n            //   dataIndex: 'tags',\n            //   render: tags => (\n            //     <span>\n            //       {tags.map(tag => {\n            //         let color = tag.length > 5 ? 'geekblue' : 'green';\n            //         if (tag === 'loser') {\n            //           color = 'volcano';\n            //         }\n            //         return (\n            //           <Tag color={color} key={tag}>\n            //             {tag.toUpperCase()}\n            //           </Tag>\n            //         );\n            //       })}\n            //     </span>\n            //   ),\n            // },\n            {\n              title: '操作',\n              key: 'action',\n              render: (text, record) => (\n                <span>\n                  <a>查看</a>\n                  <Divider type=\"vertical\" />\n                  <a>建议</a>\n                </span>\n              ),\n            },\n          ];\n        return (\n            <Table className='EditNotice' columns={columns}  dataSource={data} />\n        )\n    }\n\n  }\n  export default EditNotice;"]},"metadata":{},"sourceType":"module"}