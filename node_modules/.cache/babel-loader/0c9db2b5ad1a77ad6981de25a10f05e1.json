{"ast":null,"code":"import _Form from \"antd/es/form\";\nimport _Skeleton from \"antd/es/skeleton\";\nimport _List from \"antd/es/list\";\nimport _Avatar from \"antd/es/avatar\";\nimport _Button from \"antd/es/button\";\nimport _Icon from \"antd/es/icon\";\nvar _jsxFileName = \"/Users/mac/Desktop/ibd-apply/src/components/busniess/ApplyDataBase/ApplyDataBase.js\";\nimport React, { Component } from \"react\";\nimport \"./ApplyDataBase.less\";\nimport http from \"../../../utils/api\";\n\nclass ApplyDataBase extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imageUrl: \"\",\n      applyList: [1, 2]\n    };\n\n    this.componentDidMount = async () => {\n      let res;\n    };\n\n    this.onChangeCheckbox = checkedValues => {\n      console.log(\"checkedValues\", checkedValues);\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const _this$state = this.state,\n          imageUrl = _this$state.imageUrl,\n          applyList = _this$state.applyList;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const uploadButton = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: this.state.loading ? \"loading\" : \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Upload\"));\n    const options = [{\n      label: \"单中心研究\",\n      value: \"单中心研究\"\n    }, {\n      label: \"多中心研究\",\n      value: \"多中心研究\"\n    }, {\n      label: \"第三方研究\",\n      value: \"第三方研究\"\n    }, {\n      label: \"所有研究\",\n      value: \"所有研究\"\n    }];\n    return React.createElement(\"div\", {\n      className: \"applyDataBase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.onApply,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"\\u7533\\u8BF7\"), React.createElement(\"div\", {\n      className: \"applyDataBase-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(_List, {\n      className: \"applyDataBase-content-list\",\n      itemLayout: \"horizontal\",\n      dataSource: applyList,\n      renderItem: item => React.createElement(_List.Item, {\n        actions: [React.createElement(\"a\", {\n          key: \"list-loadmore-edit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"\\u67E5\\u770B\")],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(_Skeleton, {\n        avatar: true,\n        title: false,\n        loading: item,\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(_List.Item.Meta, {\n        avatar: React.createElement(_Avatar, {\n          src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }),\n        title: React.createElement(\"a\", {\n          href: \"https://ant.design\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, item),\n        description: \"Ant Design, a design language for background applications, is refined by Ant UED Team\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"content\"))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default _Form.create()(ApplyDataBase);","map":{"version":3,"sources":["/Users/mac/Desktop/ibd-apply/src/components/busniess/ApplyDataBase/ApplyDataBase.js"],"names":["React","Component","http","ApplyDataBase","state","imageUrl","applyList","componentDidMount","res","onChangeCheckbox","checkedValues","console","log","render","getFieldDecorator","props","form","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","uploadButton","loading","options","label","value","onApply","item","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./ApplyDataBase.less\";\nimport {\n  Collapse,\n  Icon,\n  Input,\n  Upload,\n  Button,\n  Form,\n  Checkbox,\n  List,\n  Skeleton,\n  Avatar\n} from \"antd\";\nimport http from \"../../../utils/api\";\n\nclass ApplyDataBase extends Component {\n  state = {\n    imageUrl: \"\",\n    applyList: [1, 2]\n  };\n  componentDidMount = async () => {\n    let res;\n  };\n  onChangeCheckbox = checkedValues => {\n    console.log(\"checkedValues\", checkedValues);\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { imageUrl, applyList } = this.state;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const uploadButton = (\n      <div>\n        <Icon type={this.state.loading ? \"loading\" : \"plus\"} />\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n    const options = [\n      { label: \"单中心研究\", value: \"单中心研究\" },\n      { label: \"多中心研究\", value: \"多中心研究\" },\n      { label: \"第三方研究\", value: \"第三方研究\" },\n      { label: \"所有研究\", value: \"所有研究\" }\n    ];\n    return (\n      <div className='applyDataBase'>\n       <Button type='primary' onClick={this.onApply}>申请</Button> \n      <div className=\"applyDataBase-content\">\n        <List\n          className=\"applyDataBase-content-list\"\n          itemLayout=\"horizontal\"\n          dataSource={applyList}\n          renderItem={item => (\n            <List.Item actions={[<a key=\"list-loadmore-edit\">查看</a>]}>\n              <Skeleton avatar title={false} loading={item} active>\n                <List.Item.Meta\n                  avatar={\n                    <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n                  }\n                  title={<a href=\"https://ant.design\">{item}</a>}\n                  description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\n                />\n                <div>content</div>\n              </Skeleton>\n            </List.Item>\n          )}\n        />\n        {/* <Form\n          {...formItemLayout}\n          onSubmit={this.handleSubmit}\n          className=\"applyDataBase-form\"\n        >\n          <h1>参与CHASE-IBD数据库建设申请表</h1>\n          <h3>申请医疗单位</h3>\n          <Form.Item label={<span>申请人&nbsp;</span>}>\n            {getFieldDecorator(\"doctor\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"Please input your nickname!\",\n                  whitespace: true\n                }\n              ]\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>所属单位&nbsp;</span>}>\n            {getFieldDecorator(\"hospital\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"Please input your nickname!\",\n                  whitespace: true\n                }\n              ]\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>职称&nbsp;</span>}>\n            {getFieldDecorator(\"post\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"Please input your nickname!\",\n                  whitespace: true\n                }\n              ]\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>联系电话&nbsp;</span>}>\n            {getFieldDecorator(\"phone\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"Please input your nickname!\",\n                  whitespace: true\n                }\n              ]\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>E-mail&nbsp;</span>}>\n            {getFieldDecorator(\"email\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"Please input your nickname!\",\n                  whitespace: true\n                }\n              ]\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>IBD治疗团队名单&nbsp;</span>}>\n            {getFieldDecorator(\"teamPeople\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"Please input your nickname!\",\n                  whitespace: true\n                }\n              ]\n            })(\n              <React.Fragment>\n                <Input />\n                <Input />\n                <Input />\n              </React.Fragment>\n            )}\n          </Form.Item>\n          <Form.Item label={<span>选择参与数据库研究&nbsp;</span>}>\n            {getFieldDecorator(\"study\", {\n              rules: []\n            })(\n              <Checkbox.Group\n                options={options}\n                onChange={this.onChangeCheckbox}\n              />\n            )}\n          </Form.Item>\n          <h3>贵院目前患者数量</h3>\n\n          <Form.Item label={<span>CD患者数量：&nbsp;</span>}>\n            {getFieldDecorator(\"CDNumber\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"Please input your nickname!\",\n                  whitespace: true\n                }\n              ]\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>UC患者数量：&nbsp;</span>}>\n            {getFieldDecorator(\"UCNumber\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"Please input your nickname!\",\n                  whitespace: true\n                }\n              ]\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={<span>医师执照：&nbsp;</span>}>\n            {getFieldDecorator(\"UCNumber\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"Please input your nickname!\",\n                  whitespace: true\n                }\n              ]\n            })(\n              <Upload\n                name=\"avatar\"\n                listType=\"picture-card\"\n                className=\"avatar-uploader\"\n                showUploadList={false}\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                onChange={this.handleChange}\n              >\n                {imageUrl ? (\n                  <img src={imageUrl} alt=\"avatar\" style={{ width: \"100%\" }} />\n                ) : (\n                  uploadButton\n                )}\n              </Upload>\n            )}\n          </Form.Item>\n        </Form> */}\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(ApplyDataBase);\n"]},"metadata":{},"sourceType":"module"}