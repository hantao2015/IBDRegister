{"ast":null,"code":"import _List from \"antd/es/list\";\nimport _Avatar from \"antd/es/avatar\";\nimport _Upload from \"antd/es/upload\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport _Form from \"antd/es/form\";\nimport _Input from \"antd/es/input\";\nimport _Button from \"antd/es/button\";\nimport _Icon from \"antd/es/icon\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/Users/mac/Desktop/IBDRegister/src/components/busniess/ApplyDataBase/ApplyDataBase.js\";\nimport React, { Component } from \"react\";\nimport \"./ApplyDataBase.less\";\nimport http from \"../../../utils/api\";\nconst applyDataBaseId = '620384838453';\n\nclass ApplyDataBase extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imageUrl: \"\",\n      applyList: [],\n      showApply: false\n    };\n\n    this.componentDidMount = async () => {\n      let res;\n      await this.getApplyData();\n    };\n\n    this.getApplyData = async () => {\n      let res;\n\n      try {\n        res = await http().getTable({\n          resid: applyDataBaseId\n        });\n\n        if (res.data.error == 0) {\n          this.setState({\n            applyList: res.data.data\n          });\n        }\n      } catch (error) {\n        _message.error(error.message);\n      }\n    };\n\n    this.onApply = () => {\n      this.setState({\n        showApply: true\n      });\n    };\n\n    this.onBack = () => {\n      this.setState({\n        showApply: false\n      });\n    };\n\n    this.onChangeCheckbox = checkedValues => {\n      console.log(\"checkedValues\", checkedValues);\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          this.onSubmit(values);\n        }\n      });\n    };\n\n    this.onSubmitRecord = async record => {\n      let res;\n      record.isSubmit = 'Y';\n\n      try {\n        res = await http().modifyRecords({\n          resid: applyDataBaseId,\n          data: record\n        });\n\n        if (res.data.error == 0) {\n          _message.success(\"提交成功\");\n        }\n      } catch (error) {\n        _message.error(error.message);\n      }\n    };\n\n    this.onSubmit = async values => {\n      let res;\n      const data = [{\n        doctor: values.doctor,\n        hospital: values.hospital,\n        post: values.post,\n        phoneNumber: values.phone,\n        email: values.email,\n        teamPeople: values.teamPeople,\n        teamPeople2: values.teamPeople2,\n        teamPeople3: values.teamPeople3,\n        studyType: values.study,\n        CDPatientNumber: values.CDNumber,\n        UCPatientNumber: values.UCNumber,\n        doctorPhoto: values.doctorPhotos\n      }];\n\n      try {\n        res = await http().addRecords({\n          resid: applyDataBaseId,\n          data\n        });\n\n        if (res.data.Error == 0) {\n          _message.success(\"申请成功！\");\n        }\n\n        this.setState({\n          showApply: false\n        });\n        console.log(\"res\", res);\n      } catch (error) {\n        _message.error(error.message);\n      }\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const _this$state = this.state,\n          imageUrl = _this$state.imageUrl,\n          applyList = _this$state.applyList,\n          showApply = _this$state.showApply;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const uploadButton = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: this.state.loading ? \"loading\" : \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Upload\"));\n    const options = [{\n      label: \"单中心研究\",\n      value: \"单中心研究\"\n    }, {\n      label: \"多中心研究\",\n      value: \"多中心研究\"\n    }, {\n      label: \"第三方研究\",\n      value: \"第三方研究\"\n    }, {\n      label: \"所有研究\",\n      value: \"所有研究\"\n    }];\n    return React.createElement(\"div\", {\n      className: \"applyDataBase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"applyDataBase-btns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      icon: showApply ? \"rollback\" : \"plus\",\n      type: \"primary\",\n      onClick: showApply ? this.onBack : this.onApply,\n      className: \"applyDataBase-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, showApply ? \"返回\" : \"申请\"), React.createElement(\"a\", {\n      className: \"applyDataBase-photoBtn\",\n      type: \"link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"\\u7533\\u8BF7\\u6D41\\u7A0B\\u56FE\")), React.createElement(\"div\", {\n      className: \"applyDataBase-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, showApply ? React.createElement(_Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      className: \"applyDataBase-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"\\u53C2\\u4E0ECHASE-IBD\\u6570\\u636E\\u5E93\\u5EFA\\u8BBE\\u7533\\u8BF7\\u8868\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"\\u7533\\u8BF7\\u533B\\u7597\\u5355\\u4F4D\"), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"\\u7533\\u8BF7\\u4EBA\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, getFieldDecorator(\"doctor\", {\n      rules: [{\n        required: true,\n        message: \"请输入申请人\",\n        whitespace: true\n      }]\n    })(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"\\u6240\\u5C5E\\u5355\\u4F4D\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, getFieldDecorator(\"hospital\", {\n      rules: [{\n        required: true,\n        message: \"请输入所属单位\",\n        whitespace: true\n      }]\n    })(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"\\u804C\\u79F0\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, getFieldDecorator(\"post\", {\n      rules: [{\n        required: true,\n        message: \"请输入您的职称！\",\n        whitespace: true\n      }]\n    })(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"\\u8054\\u7CFB\\u7535\\u8BDD\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, getFieldDecorator(\"phone\", {\n      rules: [{\n        required: true,\n        message: \"请输入您的联系电话!\",\n        whitespace: true\n      }]\n    })(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"E-mail\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, getFieldDecorator(\"email\", {\n      rules: [{\n        required: true,\n        message: \"请输入您的邮箱!\",\n        whitespace: true\n      }]\n    })(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"IBD\\u6CBB\\u7597\\u56E2\\u961F\\u540D\\u5355\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, getFieldDecorator(\"teamPeople\", {})(React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }))), getFieldDecorator(\"teamPeople2\", {})(React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }))), getFieldDecorator(\"teamPeople3\", {})(React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    })))), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"\\u9009\\u62E9\\u53C2\\u4E0E\\u6570\\u636E\\u5E93\\u7814\\u7A76\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, getFieldDecorator(\"study\", {\n      rules: []\n    })(React.createElement(_Checkbox.Group, {\n      options: options,\n      onChange: this.onChangeCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }))), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"\\u8D35\\u9662\\u76EE\\u524D\\u60A3\\u8005\\u6570\\u91CF\"), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"CD\\u60A3\\u8005\\u6570\\u91CF\\uFF1A\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, getFieldDecorator(\"CDNumber\", {\n      rules: [{\n        required: true,\n        message: \"请输入贵院的CD患者数量!\",\n        whitespace: true\n      }]\n    })(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"UC\\u60A3\\u8005\\u6570\\u91CF\\uFF1A\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, getFieldDecorator(\"UCNumber\", {\n      rules: [{\n        required: true,\n        message: \"请输入贵院的UC患者数量!\",\n        whitespace: true\n      }]\n    })(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"\\u533B\\u5E08\\u6267\\u7167\\uFF1A\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, getFieldDecorator(\"doctorPhoto\", {})(React.createElement(_Upload, {\n      name: \"avatar\",\n      listType: \"picture-card\",\n      className: \"avatar-uploader\",\n      showUploadList: false,\n      action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, imageUrl ? React.createElement(\"img\", {\n      src: imageUrl,\n      alt: \"avatar\",\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }) : uploadButton))), React.createElement(_Button, {\n      className: \"applyDataBase-form-save\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"\\u4FDD\\u5B58\"), React.createElement(_Button, {\n      type: \"primary\",\n      className: \"applyDataBase-form-submit\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"\\u63D0\\u4EA4\"), React.createElement(_Button, {\n      icon: \"download\",\n      type: \"primary\",\n      className: \"applyDataBase-form-print\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"\\u6253\\u5370\")) : React.createElement(_List, {\n      className: \"applyDataBase-content-list\",\n      itemLayout: \"horizontal\",\n      dataSource: applyList,\n      renderItem: item => React.createElement(_List.Item, {\n        actions: [React.createElement(\"a\", {\n          key: \"list-loadmore-edit\",\n          onClick: this.onCheck,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327\n          },\n          __self: this\n        }, \"\\u67E5\\u770B\"), React.createElement(Popconfirm, {\n          title: \"Are you sure delete this task?\",\n          onConfirm: confirm,\n          onCancel: cancel,\n          okText: \"Yes\",\n          cancelText: \"No\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          },\n          __self: this\n        }, \" \", React.createElement(\"a\", {\n          key: \"list-loadmore-edit\",\n          onClick: () => {\n            this.onSubmitRecord(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }, \"\\u63D0\\u4EA4\"))],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(_List.Item.Meta, {\n        avatar: React.createElement(_Avatar, {\n          src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343\n          },\n          __self: this\n        }),\n        title: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"applyDataBase-content-list-word\",\n          href: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346\n          },\n          __self: this\n        }, \"\\u7533\\u8BF7\\u4EBA:\", item.doctor), React.createElement(\"a\", {\n          className: \"applyDataBase-content-list-word\",\n          href: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347\n          },\n          __self: this\n        }, \"\\u6240\\u5C5E\\u5355\\u4F4D:\", item.hospital)),\n        description: \"\\u8349\\u7A3F\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, \"\\u7533\\u8BF7\\u65E5\\u671F\\uFF1A\", item.REC_CRTTIME)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default _Form.create()(ApplyDataBase);","map":{"version":3,"sources":["/Users/mac/Desktop/IBDRegister/src/components/busniess/ApplyDataBase/ApplyDataBase.js"],"names":["React","Component","http","applyDataBaseId","ApplyDataBase","state","imageUrl","applyList","showApply","componentDidMount","res","getApplyData","getTable","resid","data","error","setState","message","onApply","onBack","onChangeCheckbox","checkedValues","console","log","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","onSubmit","onSubmitRecord","record","isSubmit","modifyRecords","success","doctor","hospital","post","phoneNumber","phone","email","teamPeople","teamPeople2","teamPeople3","studyType","study","CDPatientNumber","CDNumber","UCPatientNumber","UCNumber","doctorPhoto","doctorPhotos","addRecords","Error","render","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","uploadButton","loading","options","label","value","rules","required","whitespace","handleChange","width","item","onCheck","confirm","cancel","REC_CRTTIME","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./ApplyDataBase.less\";\nimport {\n  Collapse,\n  Icon,\n  Input,\n  Upload,\n  Button,\n  Form,\n  Checkbox,\n  List,\n  Skeleton,\n  Avatar,\n  message\n} from \"antd\";\nimport http from \"../../../utils/api\";\nconst applyDataBaseId = '620384838453';\n\nclass ApplyDataBase extends Component {\n  state = {\n    imageUrl: \"\",\n    applyList: [],\n    showApply: false\n  };\n  componentDidMount = async () => {\n    let res;\n    await this.getApplyData();\n  };\n  getApplyData = async() => {\n    let res;\n    try {\n      res = await http().getTable({\n        resid:applyDataBaseId\n      })\n      if(res.data.error == 0){\n        this.setState({\n          applyList:res.data.data\n        })\n      }\n    } catch (error) {\n      message.error(error.message)\n    }\n  }\n  onApply = () => {\n    this.setState({\n      showApply: true\n    });\n  };\n  onBack = () => {\n    this.setState({\n      showApply: false\n    });\n  };\n  onChangeCheckbox = checkedValues => {\n    console.log(\"checkedValues\", checkedValues);\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.onSubmit(values);\n      }\n    });\n  };\n  onSubmitRecord = async(record) => {\n    let res;\n    record.isSubmit = 'Y'\n    try {\n      res = await http().modifyRecords({\n        resid:applyDataBaseId,\n        data:record\n      })\n      if(res.data.error == 0){\n        message.success(\"提交成功\")\n      }\n    } catch (error) {\n      message.error(error.message)\n    }\n  }\n  onSubmit = async values => {\n    let res;\n    const data = [\n      {\n        doctor: values.doctor,\n        hospital: values.hospital,\n        post: values.post,\n        phoneNumber: values.phone,\n        email: values.email,\n        teamPeople:values.teamPeople,\n        teamPeople2:values.teamPeople2,\n        teamPeople3:values.teamPeople3,\n        studyType: values.study,\n        CDPatientNumber: values.CDNumber,\n        UCPatientNumber: values.UCNumber,\n        doctorPhoto: values.doctorPhotos\n      }\n    ];\n    try {\n      res = await http().addRecords({\n        resid: applyDataBaseId,\n        data\n      });\n      if (res.data.Error == 0) {\n        message.success(\"申请成功！\");\n      }\n      this.setState({\n        showApply:false\n      })\n      console.log(\"res\", res);\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { imageUrl, applyList, showApply } = this.state;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const uploadButton = (\n      <div>\n        <Icon type={this.state.loading ? \"loading\" : \"plus\"} />\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n    const options = [\n      { label: \"单中心研究\", value: \"单中心研究\" },\n      { label: \"多中心研究\", value: \"多中心研究\" },\n      { label: \"第三方研究\", value: \"第三方研究\" },\n      { label: \"所有研究\", value: \"所有研究\" }\n    ];\n    return (\n      <div className=\"applyDataBase\">\n        <div className=\"applyDataBase-btns\">\n          <Button\n            icon={showApply ? \"rollback\" : \"plus\"}\n            type=\"primary\"\n            onClick={showApply ? this.onBack : this.onApply}\n            className=\"applyDataBase-btn\"\n          >\n            {showApply ? \"返回\" : \"申请\"}\n          </Button>\n          <a className=\"applyDataBase-photoBtn\" type=\"link\">\n            申请流程图\n          </a>\n        </div>\n        <div className=\"applyDataBase-content\">\n          {showApply ? (\n            <Form\n              {...formItemLayout}\n              onSubmit={this.handleSubmit}\n              className=\"applyDataBase-form\"\n            >\n              <h1>参与CHASE-IBD数据库建设申请表</h1>\n              <h3>申请医疗单位</h3>\n              <Form.Item label={<span>申请人&nbsp;</span>}>\n                {getFieldDecorator(\"doctor\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入申请人\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label={<span>所属单位&nbsp;</span>}>\n                {getFieldDecorator(\"hospital\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入所属单位\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label={<span>职称&nbsp;</span>}>\n                {getFieldDecorator(\"post\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入您的职称！\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label={<span>联系电话&nbsp;</span>}>\n                {getFieldDecorator(\"phone\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入您的联系电话!\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label={<span>E-mail&nbsp;</span>}>\n                {getFieldDecorator(\"email\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入您的邮箱!\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label={<span>IBD治疗团队名单&nbsp;</span>}>\n                {getFieldDecorator(\"teamPeople\", {})(\n                  <React.Fragment>\n                    <Input />\n                  </React.Fragment>\n                )}\n                {getFieldDecorator(\"teamPeople2\", {})(\n                  <React.Fragment>\n                    <Input />\n                  </React.Fragment>\n                )}\n                {getFieldDecorator(\"teamPeople3\", {})(\n                  <React.Fragment>\n                    <Input />\n                  </React.Fragment>\n                )}\n              </Form.Item>\n              <Form.Item label={<span>选择参与数据库研究&nbsp;</span>}>\n                {getFieldDecorator(\"study\", {\n                  rules: []\n                })(\n                  <Checkbox.Group\n                    options={options}\n                    onChange={this.onChangeCheckbox}\n                  />\n                )}\n              </Form.Item>\n              <h3>贵院目前患者数量</h3>\n\n              <Form.Item label={<span>CD患者数量：&nbsp;</span>}>\n                {getFieldDecorator(\"CDNumber\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入贵院的CD患者数量!\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label={<span>UC患者数量：&nbsp;</span>}>\n                {getFieldDecorator(\"UCNumber\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入贵院的UC患者数量!\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label={<span>医师执照：&nbsp;</span>}>\n                {getFieldDecorator(\"doctorPhoto\", {})(\n                  <Upload\n                    name=\"avatar\"\n                    listType=\"picture-card\"\n                    className=\"avatar-uploader\"\n                    showUploadList={false}\n                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                    onChange={this.handleChange}\n                  >\n                    {imageUrl ? (\n                      <img\n                        src={imageUrl}\n                        alt=\"avatar\"\n                        style={{ width: \"100%\" }}\n                      />\n                    ) : (\n                      uploadButton\n                    )}\n                  </Upload>\n                )}\n              </Form.Item>\n              <Button className=\"applyDataBase-form-save\">保存</Button>\n              <Button\n                type=\"primary\"\n                className=\"applyDataBase-form-submit\"\n                htmlType=\"submit\"\n              >\n                提交\n              </Button>\n              <Button\n                icon=\"download\"\n                type=\"primary\"\n                className=\"applyDataBase-form-print\"\n              >\n                打印\n              </Button>\n            </Form>\n          ) : (\n            <List\n              className=\"applyDataBase-content-list\"\n              itemLayout=\"horizontal\"\n              dataSource={applyList}\n              renderItem={item => (\n                <List.Item\n                  actions={[\n                    <a key=\"list-loadmore-edit\" onClick={this.onCheck}>查看</a>,\n                    <Popconfirm\n                    title=\"Are you sure delete this task?\"\n                    onConfirm={confirm}\n                    onCancel={cancel}\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                  > <a key=\"list-loadmore-edit\" onClick={() => {\n                      this.onSubmitRecord(item)\n                    }}>提交</a>\n                    </Popconfirm>\n                  ]}\n                >\n                  {/* <Skeleton avatar title={false} loading={item.doctor} active> */}\n                    <List.Item.Meta\n                      avatar={\n                        <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n                      }\n                      title={<React.Fragment>\n                        <a className='applyDataBase-content-list-word' href=\"#\">申请人:{item.doctor}</a>\n                        <a className='applyDataBase-content-list-word' href=\"#\">所属单位:{item.hospital}</a>\n                      </React.Fragment>}\n                      description=\"草稿\"\n                    />\n                    <div>申请日期：{item.REC_CRTTIME}</div>\n                  {/* </Skeleton> */}\n                </List.Item>\n              )}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(ApplyDataBase);\n"]},"metadata":{},"sourceType":"module"}