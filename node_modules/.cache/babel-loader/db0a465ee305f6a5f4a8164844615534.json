{"ast":null,"code":"import _Form from \"antd/es/form\";\nimport _Spin from \"antd/es/spin\";\nimport _Button from \"antd/es/button\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/Users/mac/Desktop/IBDRegister/src/components/busniess/ApplyDataBase/ApplyDataBase.js\";\nimport React, { Component } from \"react\";\nimport \"./ApplyDataBase.less\";\nimport http from \"../../../utils/api\";\nimport ShowImage from \"./ShowImage\";\nimport applyDataBaseImage from \"../../../assets/images/applyDataBase.jpg\";\nconst applyDataBaseId = \"620384838453\";\n\nconst uploadFile = (file, url) => {\n  return new Promise((resolve, reject) => {\n    let fd = new FormData();\n    fd.append(\"file\", file, file.name);\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", url);\n\n    xhr.onload = () => {\n      const data = JSON.parse(xhr.response);\n\n      if (xhr.status === 200 && (data.error === 0 || data.error === \"0\")) {\n        const imgUrl = data.data;\n        resolve(imgUrl);\n      } else {\n        reject(data);\n      }\n    };\n\n    xhr.send(fd);\n  });\n};\n\nclass ApplyDataBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageUrl: \"\",\n      applyList: [],\n      page: \"listPage\",\n      record: {},\n      loading: false\n    };\n\n    this.componentDidMount = async () => {\n      let res;\n      await this.getApplyData();\n    };\n\n    this.getApplyData = async () => {\n      let res;\n      this.setState({\n        loading: true\n      });\n\n      try {\n        res = await http().getTable({\n          resid: applyDataBaseId\n        });\n        console.log(\"res.data.data\", res.data.data);\n        let data = [];\n        res.data.data.map(item => {\n          let studyType = item.studyType && item.studyType.split(\",\");\n          item.studyType = studyType;\n          data.push(item);\n        });\n\n        if (res.data.error == 0) {\n          this.setState({\n            applyList: data\n          });\n        }\n      } catch (error) {\n        _message.error(error.message);\n      }\n\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.onApply = () => {\n      this.setState({\n        page: \"applyPage\"\n      });\n    };\n\n    this.onBack = () => {\n      this.setState({\n        page: \"listPage\"\n      });\n    };\n\n    this.onCheck = item => {\n      this.setState({\n        page: \"checkPage\",\n        record: item\n      });\n    };\n\n    this.showImage = () => {\n      this.setState({\n        page: \"showImagePage\"\n      });\n    };\n\n    this.onChangeCheckbox = checkedValues => {// console.log(\"checkedValues\", study);\n    };\n\n    this.handleSubmit = (e, type) => {\n      // console.log(\"e\",e,type)\n      // e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          this.onSubmit(values, type);\n        }\n      });\n    };\n\n    this.onSubmitRecord = async record => {\n      let res;\n      record.isSubmit = \"Y\";\n\n      try {\n        res = await http().modifyRecords({\n          resid: applyDataBaseId,\n          data: [record]\n        });\n\n        if (res.data.Error == 0) {\n          _message.success(\"提交成功\");\n        }\n      } catch (error) {\n        _message.error(error.message);\n      }\n    };\n\n    this.handleUploadFile = async fileInfo => {\n      const file = fileInfo.file;\n      const bucketname = \"realsun\";\n      const type = \"\";\n      const fileUrl = \"http://ivf.realsun.me:9001/api/AliyunOss/PutOneImageObject?bucketname=\".concat(encodeURIComponent(bucketname), \"&srctype=\").concat(encodeURIComponent(type));\n\n      try {\n        await uploadFile(file, fileUrl).then(imageUrl => {\n          this.setState({\n            imageUrl\n          });\n        });\n      } catch (err) {\n        return _message.error(err.message);\n      }\n    };\n\n    this.onSubmit = async (values, type) => {\n      let res;\n      let obj = {};\n      let study = values.study && values.study.toString();\n\n      if (type === 1) {\n        obj = {\n          doctor: values.doctor,\n          hospital: values.hospital,\n          post: values.post,\n          phoneNumber: values.phone,\n          email: values.email,\n          teamPeople: values.teamPeople,\n          teamPeople2: values.teamPeople2,\n          teamPeople3: values.teamPeople3,\n          studyType: values.study,\n          CDPatientNumber: values.CDNumber,\n          UCPatientNumber: values.UCNumber,\n          doctorPhoto: this.state.imageUrl,\n          studyType: study\n        };\n      } else {\n        obj = {\n          doctor: values.doctor,\n          hospital: values.hospital,\n          post: values.post,\n          phoneNumber: values.phone,\n          email: values.email,\n          teamPeople: values.teamPeople,\n          teamPeople2: values.teamPeople2,\n          teamPeople3: values.teamPeople3,\n          studyType: values.study,\n          CDPatientNumber: values.CDNumber,\n          UCPatientNumber: values.UCNumber,\n          doctorPhoto: this.state.imageUrl,\n          studyType: study,\n          isSubmit: \"Y\"\n        };\n      }\n\n      try {\n        res = await http().addRecords({\n          resid: applyDataBaseId,\n          data: [obj]\n        });\n\n        if (res.data.Error == 0) {\n          _message.success(\"申请成功！\");\n        }\n\n        this.setState({\n          page: \"listPage\"\n        });\n        this.getApplyData();\n      } catch (error) {\n        _message.error(error.message);\n      }\n    };\n\n    this.getBase64 = (img, callback) => {\n      const reader = new FileReader();\n      reader.addEventListener(\"load\", () => callback(reader.result));\n      reader.readAsDataURL(img);\n    };\n\n    this.handleChange = info => {\n      console.log(\"info\", info);\n\n      if (info.file.status === \"uploading\") {\n        return;\n      }\n\n      if (info.file.status === \"done\") {\n        // Get this url from response in real world.\n        this.getBase64(info.file.originFileObj, imageUrl => this.setState({\n          imageUrl\n        }));\n      }\n    };\n  }\n\n  render() {\n    const prop = this.props;\n    return React.createElement(\"div\", {\n      className: \"applyDataBase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"applyDataBase-btns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      icon: prop.page === \"applyPage\" || prop.page === \"checkPage\" || prop.page === \"schedulePage\" ? \"rollback\" : \"plus\",\n      type: \"primary\",\n      onClick: prop.page === \"applyPage\" || prop.page === \"checkPage\" || prop.page === \"schedulePage\" ? this.props.onBack : this.props.onApply,\n      className: \"applyDataBase-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, prop.page === \"applyPage\" || prop.page === \"checkPage\" || prop.page === \"schedulePage\" ? \"返回\" : prop.addText || \"申请\"), React.createElement(\"a\", {\n      className: \"applyDataBase-photoBtn\",\n      type: \"link\",\n      onClick: prop.page === \"showImagePage\" ? this.props.onBack : this.props.showImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, prop.isShowImage ? \"\" : prop.page === \"showImagePage\" ? \"返回\" : prop.page === \"listPage\" ? \"申请流程图\" : \"\")), React.createElement(_Spin, {\n      spinning: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"applyDataBase-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, (() => {\n      switch (prop.page) {\n        case \"listPage\":\n          return prop.pages.listPage;\n\n        case \"applyPage\":\n          return prop.pages.applyPage;\n\n        case \"checkPage\":\n          return prop.pages.checkPage;\n\n        case \"showImagePage\":\n          return prop.pages.showImagePage;\n\n        case \"schedulePage\":\n          return prop.pages.schedulePage;\n      }\n    })())));\n  }\n\n}\n\nexport default _Form.create()(ApplyDataBase);","map":{"version":3,"sources":["/Users/mac/Desktop/IBDRegister/src/components/busniess/ApplyDataBase/ApplyDataBase.js"],"names":["React","Component","http","ShowImage","applyDataBaseImage","applyDataBaseId","uploadFile","file","url","Promise","resolve","reject","fd","FormData","append","name","xhr","XMLHttpRequest","open","onload","data","JSON","parse","response","status","error","imgUrl","send","ApplyDataBase","constructor","props","state","imageUrl","applyList","page","record","loading","componentDidMount","res","getApplyData","setState","getTable","resid","console","log","map","item","studyType","split","push","message","onApply","onBack","onCheck","showImage","onChangeCheckbox","checkedValues","handleSubmit","e","type","form","validateFieldsAndScroll","err","values","onSubmit","onSubmitRecord","isSubmit","modifyRecords","Error","success","handleUploadFile","fileInfo","bucketname","fileUrl","encodeURIComponent","then","obj","study","toString","doctor","hospital","post","phoneNumber","phone","email","teamPeople","teamPeople2","teamPeople3","CDPatientNumber","CDNumber","UCPatientNumber","UCNumber","doctorPhoto","addRecords","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","handleChange","info","originFileObj","render","prop","addText","isShowImage","pages","listPage","applyPage","checkPage","showImagePage","schedulePage","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./ApplyDataBase.less\";\nimport {\n  Collapse,\n  Icon,\n  Input,\n  Upload,\n  Button,\n  Form,\n  Checkbox,\n  List,\n  Skeleton,\n  Avatar,\n  message,\n  Popconfirm,\n  Spin\n} from \"antd\";\nimport http from \"../../../utils/api\";\nimport ShowImage from \"./ShowImage\";\nimport applyDataBaseImage from \"../../../assets/images/applyDataBase.jpg\";\nconst applyDataBaseId = \"620384838453\";\n\nconst uploadFile = (file, url) => {\n  return new Promise((resolve, reject) => {\n    let fd = new FormData();\n    fd.append(\"file\", file, file.name);\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", url);\n    xhr.onload = () => {\n      const data = JSON.parse(xhr.response);\n      if (xhr.status === 200 && (data.error === 0 || data.error === \"0\")) {\n        const imgUrl = data.data;\n        resolve(imgUrl);\n      } else {\n        reject(data);\n      }\n    };\n    xhr.send(fd);\n  });\n};\nclass ApplyDataBase extends Component {\n  state = {\n    imageUrl: \"\",\n    applyList: [],\n    page: \"listPage\",\n    record: {},\n    loading: false\n  };\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount = async () => {\n    let res;\n\n    await this.getApplyData();\n  };\n  //获取申请记录\n  getApplyData = async () => {\n    let res;\n    this.setState({\n      loading: true\n    });\n    try {\n      res = await http().getTable({\n        resid: applyDataBaseId\n      });\n      console.log(\"res.data.data\", res.data.data);\n      let data = [];\n\n      res.data.data.map(item => {\n        let studyType = item.studyType && item.studyType.split(\",\");\n        item.studyType = studyType;\n        data.push(item);\n      });\n      if (res.data.error == 0) {\n        this.setState({\n          applyList: data\n        });\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n    this.setState({\n      loading: false\n    });\n  };\n  onApply = () => {\n    this.setState({\n      page: \"applyPage\"\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  onCheck = item => {\n    this.setState({\n      page: \"checkPage\",\n      record: item\n    });\n  };\n  showImage = () => {\n    this.setState({\n      page: \"showImagePage\"\n    });\n  };\n  onChangeCheckbox = checkedValues => {\n    // console.log(\"checkedValues\", study);\n  };\n  handleSubmit = (e, type) => {\n    // console.log(\"e\",e,type)\n    // e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.onSubmit(values, type);\n      }\n    });\n  };\n  //提交列表中的一条记录\n  onSubmitRecord = async record => {\n    let res;\n    record.isSubmit = \"Y\";\n    try {\n      res = await http().modifyRecords({\n        resid: applyDataBaseId,\n        data: [record]\n      });\n      if (res.data.Error == 0) {\n        message.success(\"提交成功\");\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n\n  //上传文件\n  handleUploadFile = async fileInfo => {\n    const file = fileInfo.file;\n    const bucketname = \"realsun\";\n    const type = \"\";\n    const fileUrl = `http://ivf.realsun.me:9001/api/AliyunOss/PutOneImageObject?bucketname=${encodeURIComponent(\n      bucketname\n    )}&srctype=${encodeURIComponent(type)}`;\n    try {\n      await uploadFile(file, fileUrl).then(imageUrl => {\n        this.setState({\n          imageUrl\n        });\n      });\n    } catch (err) {\n      return message.error(err.message);\n    }\n  };\n  //提交表单\n  onSubmit = async (values, type) => {\n    let res;\n    let obj = {};\n    let study = values.study && values.study.toString();\n    if (type === 1) {\n      obj = {\n        doctor: values.doctor,\n        hospital: values.hospital,\n        post: values.post,\n        phoneNumber: values.phone,\n        email: values.email,\n        teamPeople: values.teamPeople,\n        teamPeople2: values.teamPeople2,\n        teamPeople3: values.teamPeople3,\n        studyType: values.study,\n        CDPatientNumber: values.CDNumber,\n        UCPatientNumber: values.UCNumber,\n        doctorPhoto: this.state.imageUrl,\n        studyType: study\n      };\n    } else {\n      obj = {\n        doctor: values.doctor,\n        hospital: values.hospital,\n        post: values.post,\n        phoneNumber: values.phone,\n        email: values.email,\n        teamPeople: values.teamPeople,\n        teamPeople2: values.teamPeople2,\n        teamPeople3: values.teamPeople3,\n        studyType: values.study,\n        CDPatientNumber: values.CDNumber,\n        UCPatientNumber: values.UCNumber,\n        doctorPhoto: this.state.imageUrl,\n        studyType: study,\n        isSubmit: \"Y\"\n      };\n    }\n    try {\n      res = await http().addRecords({\n        resid: applyDataBaseId,\n        data: [obj]\n      });\n      if (res.data.Error == 0) {\n        message.success(\"申请成功！\");\n      }\n      this.setState({\n        page: \"listPage\"\n      });\n      this.getApplyData();\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  getBase64 = (img, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => callback(reader.result));\n    reader.readAsDataURL(img);\n  };\n  handleChange = info => {\n    console.log(\"info\", info);\n    if (info.file.status === \"uploading\") {\n      return;\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      this.getBase64(info.file.originFileObj, imageUrl =>\n        this.setState({\n          imageUrl\n        })\n      );\n    }\n  };\n\n  render() {\n    const prop = this.props;\n   \n\n    return (\n      <div className=\"applyDataBase\">\n        <div className=\"applyDataBase-btns\">\n          <Button\n            icon={\n              prop.page === \"applyPage\" ||\n              prop.page === \"checkPage\" ||\n              prop.page === \"schedulePage\"\n                ? \"rollback\"\n                : \"plus\"\n            }\n            type=\"primary\"\n            onClick={\n              prop.page === \"applyPage\" ||\n              prop.page === \"checkPage\" ||\n              prop.page === \"schedulePage\"\n                ? this.props.onBack\n                : this.props.onApply\n            }\n            className=\"applyDataBase-btn\"\n          >\n            {prop.page === \"applyPage\" ||\n            prop.page === \"checkPage\" ||\n            prop.page === \"schedulePage\"\n              ? \"返回\"\n              : prop.addText || \"申请\"}\n          </Button>\n          <a\n            className=\"applyDataBase-photoBtn\"\n            type=\"link\"\n            onClick={\n              prop.page === \"showImagePage\"\n                ? this.props.onBack\n                : this.props.showImage\n            }\n          >\n            {prop.isShowImage\n              ? \"\"\n              : prop.page === \"showImagePage\"\n              ? \"返回\"\n              : prop.page === \"listPage\"\n              ? \"申请流程图\"\n              : \"\"}\n          </a>\n        </div>\n        <Spin spinning={loading}>\n          <div className=\"applyDataBase-content\">\n            {(() => {\n              switch (prop.page) {\n                case \"listPage\":\n                  return prop.pages.listPage;\n                case \"applyPage\":\n                  return prop.pages.applyPage;\n                case \"checkPage\":\n                  return prop.pages.checkPage;\n                case \"showImagePage\":\n                  return prop.pages.showImagePage;\n                case \"schedulePage\":\n                  return prop.pages.schedulePage;\n              }\n            })()}\n          </div>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(ApplyDataBase);\n"]},"metadata":{},"sourceType":"module"}