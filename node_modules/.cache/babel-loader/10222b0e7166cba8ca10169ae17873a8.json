{"ast":null,"code":"import _Spin from \"antd/es/spin\";\nimport _Modal from \"antd/es/modal\";\nimport _Form from \"antd/es/form\";\nimport _Input from \"antd/es/input\";\nimport _Table from \"antd/es/table\";\nimport _Button from \"antd/es/button\";\nimport _Divider from \"antd/es/divider\";\nvar _jsxFileName = \"/Users/mac/Desktop/IBDRegister/src/components/busniess/EditNotice/EditNotice.js\";\nimport React, { Component } from \"react\";\nimport \"./EditNotice.less\";\nimport ApplyDataBase from \"../ApplyDataBase\";\nimport http from \"../../../utils/api\";\nimport TextArea from \"antd/lib/input/TextArea\";\nconst noticeId = \"620317621824\";\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\n\nconst columns = props => {\n  const onCheck = props.onCheck;\n  return [{\n    title: \"序号\",\n    dataIndex: \"name\",\n    key: \"name\"\n  }, {\n    title: \"标题\",\n    dataIndex: \"title\",\n    key: \"title\",\n    render: text => React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, text)\n  }, {\n    title: \"消息内容\",\n    dataIndex: \"content\",\n    key: \"content\"\n  }, {\n    title: \"发布者\",\n    dataIndex: \"doctor\",\n    key: \"doctor\"\n  }, {\n    title: \"文件\",\n    dataIndex: \"file\",\n    key: \"file\"\n  }, {\n    title: \"状态\",\n    dataIndex: \"status\",\n    key: \"status\"\n  }, {\n    title: \"操作\",\n    key: \"action\",\n    render: (text, record) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      onClick: () => {\n        onCheck();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"\\u67E5\\u770B\"), React.createElement(_Divider, {\n      type: \"vertical\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"\\u4FEE\\u6539\"), React.createElement(_Divider, {\n      type: \"vertical\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"\\u53D1\\u5E03\"))\n  }];\n};\n\nclass EditNotice extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      record: {},\n      page: \"listPage\",\n      //当前页面\n      spin: false,\n      //是否显示加载\n      visible: false,\n      //是否显示添加模态框\n      checkVisible: false //是否显示查看模态框 \n\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.save = async e => {\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          this.onSubmit(values);\n        }\n      });\n    };\n\n    this.onSubmit = async values => {\n      let res;\n      console.log(\"values\", values);\n      let data = [values];\n\n      try {\n        res = await http().addRecords({\n          resid: noticeId,\n          data\n        });\n        this.setState({\n          // page: \"listPage\",\n          visible: false\n        });\n        await this.getData();\n      } catch (error) {}\n    };\n\n    this.publish = () => {\n      this.setState({\n        page: \"listPage\"\n      });\n    };\n\n    this.renderContent = () => {\n      let page = this.state.page;\n\n      switch (page) {\n        case \"listPage\":\n          return this.renderListPage();\n\n        case \"addPage\":\n          return this.renderAddPage();\n\n        case \"checkPage\":\n          return this.renderCheckPage();\n      }\n    };\n\n    this.renderListPage = () => {\n      let data = this.state.data;\n      let spin = this.state.spin;\n      const getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(\"div\", {\n        className: \"editNotice\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        className: \"editNotice-add\",\n        onClick: this.onAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"\\u6DFB\\u52A0\\u65B0\\u901A\\u77E5\"), React.createElement(_Spin, {\n        spinning: spin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(_Table, {\n        className: \"EditNotice\",\n        columns: columns({\n          onCheck: this.onCheck\n        }),\n        dataSource: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(_Modal, {\n        title: \"\\u6DFB\\u52A0\\u65B0\\u901A\\u77E5\",\n        visible: this.state.visible,\n        width: 700,\n        onOk: this.handleOk,\n        onCancel: this.handleCancel,\n        destroyOnClose: true,\n        footer: [React.createElement(_Button, {\n          key: \"back\",\n          onClick: this.handleCancel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, \"\\u53D6\\u6D88\"), React.createElement(_Button, {\n          key: \"submit\",\n          type: \"primary\",\n          onClick: this.save,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, \"\\u4FDD\\u5B58\"), React.createElement(_Button, {\n          key: \"submit\",\n          type: \"primary\",\n          onClick: this.publish,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, \"\\u53D1\\u5E03\")],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(_Form, Object.assign({}, formItemLayout, {\n        // onSubmit={this.handleSubmit}\n        className: \"editNotice-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"\\u6D88\\u606F\\u7F16\\u8F91\"), React.createElement(_Form.Item, {\n        className: \"editNotice-form-item\",\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, \"\\u6807\\u9898\\xA0\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, getFieldDecorator(\"title\", {\n        rules: [{\n          required: true,\n          message: \"请输入标题\",\n          whitespace: true\n        }]\n      })(React.createElement(_Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }))), React.createElement(_Form.Item, {\n        className: \"editNotice-form-item\",\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, \"\\u6D88\\u606F\\u5185\\u5BB9\\xA0\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, getFieldDecorator(\"content\", {\n        rules: [{\n          required: true,\n          message: \"请输入消息内容\",\n          whitespace: true\n        }]\n      })(React.createElement(TextArea, {\n        className: \"editNotice-form-item-textarea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }))))), React.createElement(_Modal, {\n        title: \"\\u6DFB\\u52A0\\u65B0\\u901A\\u77E5\",\n        visible: this.state.checkVisible,\n        width: 700,\n        onOk: this.handleOk,\n        onCancel: this.handleCancel,\n        destroyOnClose: true,\n        footer: [React.createElement(_Button, {\n          key: \"back\",\n          onClick: this.handleCancel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, \"\\u5173\\u95ED\")],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(_Form, Object.assign({}, formItemLayout, {\n        // onSubmit={this.handleSubmit}\n        className: \"editNotice-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"\\u6D88\\u606F\\u7F16\\u8F91\"), React.createElement(_Form.Item, {\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, \"\\u6D88\\u606F\\u6807\\u9898\\xA0\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, record.doctor)), React.createElement(_Form.Item, {\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        }, \"\\u6D88\\u606F\\u5185\\u5BB9\\xA0\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, record.hospital)), React.createElement(_Form.Item, {\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }, \"\\u6587\\u4EF6\\xA0\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, record.post)), React.createElement(_Form.Item, {\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }, \"\\u533B\\u5E08\\u6267\\u7167\\xA0\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: record.doctorPhoto,\n        alt: \"avatar\",\n        style: {\n          backgroundSize: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      })), React.createElement(_Button, {\n        icon: \"download\",\n        type: \"primary\",\n        className: \"applyDataBase-form-print\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"\\u6253\\u5370\")))));\n    };\n\n    this.renderCheckPage = () => {\n      const getFieldDecorator = this.props.form.getFieldDecorator;\n      let record = this.state.record;\n      return React.createElement(\"div\", {\n        className: \"editNotice\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        className: \"editNotice-add\",\n        onClick: this.onBack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"\\u8FD4\\u56DE\"));\n    };\n\n    this.renderAddPage = () => {\n      const getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(\"div\", {\n        className: \"editNotice\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        className: \"editNotice-add\",\n        onClick: this.onBack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, \"\\u8FD4\\u56DE\"));\n    };\n\n    this.componentDidMount = async () => {\n      await this.getData();\n    };\n\n    this.getData = async () => {\n      let res;\n      this.setState({\n        spin: true\n      });\n\n      try {\n        res = await http().getTable({\n          resid: noticeId\n        }); // if(res.data.error === 0){\n\n        this.setState({\n          data: res.data.data\n        });\n        console.log(\"re\", res.data.data); // }\n      } catch (error) {}\n\n      this.setState({\n        spin: false\n      });\n    };\n\n    this.onAdd = () => {\n      this.setState({\n        // page: \"addPage\",\n        visible: true\n      });\n    };\n\n    this.onBack = () => {\n      this.setState({\n        page: \"listPage\"\n      });\n    };\n\n    this.onCheck = () => {\n      console.log(\"aaa\");\n      this.setState({\n        page: \"checkPage\"\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          data = _this$state.data,\n          record = _this$state.record,\n          page = _this$state.page;\n    return this.renderContent();\n  }\n\n}\n\nexport default _Form.create()(EditNotice);","map":{"version":3,"sources":["/Users/mac/Desktop/IBDRegister/src/components/busniess/EditNotice/EditNotice.js"],"names":["React","Component","ApplyDataBase","http","TextArea","noticeId","formItemLayout","labelCol","xs","span","sm","wrapperCol","columns","props","onCheck","title","dataIndex","key","render","text","record","EditNotice","state","data","page","spin","visible","checkVisible","handleCancel","setState","save","e","form","validateFieldsAndScroll","err","values","onSubmit","res","console","log","addRecords","resid","getData","error","publish","renderContent","renderListPage","renderAddPage","renderCheckPage","getFieldDecorator","onAdd","handleOk","rules","required","message","whitespace","doctor","hospital","post","doctorPhoto","backgroundSize","onBack","componentDidMount","getTable","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  List,\n  Tag,\n  Divider,\n  Table,\n  message,\n  Popconfirm,\n  Button,\n  Form,\n  Input,\n  Spin,\n  Modal\n} from \"antd\";\nimport \"./EditNotice.less\";\nimport ApplyDataBase from \"../ApplyDataBase\";\nimport http from \"../../../utils/api\";\nimport TextArea from \"antd/lib/input/TextArea\";\nconst noticeId = \"620317621824\";\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 }\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 }\n  }\n};\nconst columns = props => {\n  const { onCheck } = props;\n  return [\n    {\n      title: \"序号\",\n      dataIndex: \"name\",\n      key: \"name\"\n    },\n    {\n      title: \"标题\",\n      dataIndex: \"title\",\n      key: \"title\",\n      render: text => <a>{text}</a>\n    },\n    {\n      title: \"消息内容\",\n      dataIndex: \"content\",\n      key: \"content\"\n    },\n    {\n      title: \"发布者\",\n      dataIndex: \"doctor\",\n      key: \"doctor\"\n    },\n    {\n      title: \"文件\",\n      dataIndex: \"file\",\n      key: \"file\"\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      key: \"status\"\n    },\n    {\n      title: \"操作\",\n      key: \"action\",\n      render: (text, record) => (\n        <span>\n          <a\n            onClick={() => {\n              onCheck();\n            }}\n          >\n            查看\n          </a>\n          <Divider type=\"vertical\" />\n          <a>修改</a>\n          <Divider type=\"vertical\" />\n          <a>发布</a>\n        </span>\n      )\n    }\n  ];\n};\n\nclass EditNotice extends React.Component {\n  state = {\n    data: [],\n    record: {}, \n    page: \"listPage\", //当前页面\n    spin:false,  //是否显示加载\n    visible:false,  //是否显示添加模态框\n    checkVisible:false,  //是否显示查看模态框 \n  };\n  handleCancel = () => {\n    this.setState({\n      visible:false\n    })\n  }\n  save = async e => {\n    this.props.form.validateFieldsAndScroll((err, values) => {\n     if(!err){\n       this.onSubmit(values)\n     }\n  })\n}\n  onSubmit = async values => {\n    let res;\n    console.log(\"values\",values)\n     let data = [\n      values\n     ];\n    try {\n      res = await http().addRecords({\n        resid: noticeId,\n        data\n      });\n      \n      this.setState({\n        // page: \"listPage\",\n        visible:false\n      });\n     await this.getData();\n    } catch (error) {}\n  \n    }\n \n  publish = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  renderContent = () => {\n    let page = this.state.page;\n    switch (page) {\n      case \"listPage\":\n        return this.renderListPage();\n      case \"addPage\":\n        return this.renderAddPage();\n      case \"checkPage\":\n        return this.renderCheckPage();\n    }\n  };\n  renderListPage = () => {\n    let data = this.state.data;\n    let spin = this.state.spin;\n    const {getFieldDecorator} = this.props.form;\n    return (\n      <div className=\"editNotice\">\n        <Button type=\"primary\" className=\"editNotice-add\" onClick={this.onAdd}>\n          添加新通知\n        </Button>\n        <Spin spinning={spin}>\n        <Table\n          className=\"EditNotice\"\n          columns={columns({ onCheck: this.onCheck })}\n          dataSource={data}\n        />\n        <Modal  title=\"添加新通知\"\n          visible={this.state.visible}\n          width={700}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          destroyOnClose={true}\n          footer={[\n            <Button key=\"back\" onClick={this.handleCancel}>\n              取消\n            </Button>,\n            <Button key=\"submit\" type=\"primary\"  onClick={this.save}>\n              保存\n            </Button>,\n            <Button key=\"submit\" type=\"primary\"  onClick={this.publish}>\n              发布\n            </Button>\n          ]}>\n\n<Form\n          {...formItemLayout}\n          // onSubmit={this.handleSubmit}\n          className=\"editNotice-form\"\n        >\n          <h1>消息编辑</h1>\n          <Form.Item\n            className=\"editNotice-form-item\"\n            label={<span>标题&nbsp;</span>}\n          >\n            {getFieldDecorator(\"title\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入标题\",\n                  whitespace: true\n                }\n              ]\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            className=\"editNotice-form-item\"\n            label={<span>消息内容&nbsp;</span>}\n          >\n            {getFieldDecorator(\"content\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入消息内容\",\n                  whitespace: true\n                }\n              ]\n            })(<TextArea className=\"editNotice-form-item-textarea\" />)}\n          </Form.Item>\n          {/* <div className=\"editNotice-form-btns\">\n            <Button type=\"primary\" htmlType=\"submit\" onClick={this.save}>\n              保存\n            </Button>\n            <Button type=\"primary\" htmlType=\"submit\" onClick={this.publish}>\n              发布\n            </Button>\n          </div> */}\n        </Form>\n          </Modal>\n          <Modal  title=\"添加新通知\"\n          visible={this.state.checkVisible}\n          width={700}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          destroyOnClose={true}\n          footer={[\n            <Button key=\"back\" onClick={this.handleCancel}>\n              关闭\n            </Button>,\n           \n          ]}>\n <Form\n          {...formItemLayout}\n          // onSubmit={this.handleSubmit}\n          className=\"editNotice-form\"\n        >\n          <h1>消息编辑</h1>\n          <Form.Item label={<span>消息标题&nbsp;</span>}>\n            <span>{record.doctor}</span>\n          </Form.Item>\n          <Form.Item label={<span>消息内容&nbsp;</span>}>\n            <span>{record.hospital}</span>\n          </Form.Item>\n          <Form.Item label={<span>文件&nbsp;</span>}>\n            <span>{record.post}</span>\n          </Form.Item>\n          <Form.Item label={<span>医师执照&nbsp;</span>}>\n            <img\n              src={record.doctorPhoto}\n              alt=\"avatar\"\n              style={{ backgroundSize: \"100%\" }}\n            />\n          </Form.Item>\n\n          <Button\n            icon=\"download\"\n            type=\"primary\"\n            className=\"applyDataBase-form-print\"\n          >\n            打印\n          </Button>\n        </Form>\n            </Modal>\n        </Spin>\n      </div>\n    );\n  };\n  renderCheckPage = () => {\n    const { getFieldDecorator } = this.props.form;\n    let record = this.state.record;\n    return (\n      <div className=\"editNotice\">\n        <Button type=\"primary\" className=\"editNotice-add\" onClick={this.onBack}>\n          返回\n        </Button>\n       \n      </div>\n    );\n  };\n  renderAddPage = () => {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div className=\"editNotice\">\n        <Button type=\"primary\" className=\"editNotice-add\" onClick={this.onBack}>\n          返回\n        </Button>\n       \n      </div>\n    );\n  };\n  componentDidMount = async () => {\n    await this.getData();\n  };\n  getData = async () => {\n    let res;\n    this.setState({\n      spin:true\n    })\n    try {\n      res = await http().getTable({\n        resid: noticeId\n      });\n      // if(res.data.error === 0){\n      this.setState({\n        data: res.data.data\n      });\n      console.log(\"re\", res.data.data);\n      // }\n    } catch (error) {}\n    this.setState({\n      spin:false\n    })\n  };\n  onAdd = () => {\n    this.setState({\n      // page: \"addPage\",\n      visible:true\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  onCheck = () => {\n    console.log(\"aaa\");\n    this.setState({\n      page: \"checkPage\"\n    });\n  };\n  render() {\n    const { data, record, page } = this.state;\n\n    return this.renderContent();\n  }\n}\nexport default Form.create()(EditNotice);\n"]},"metadata":{},"sourceType":"module"}