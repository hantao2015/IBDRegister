{"ast":null,"code":"import _Upload from \"antd/es/upload\";\nimport _Input from \"antd/es/input\";\nimport _List from \"antd/es/list\";\nimport _Popconfirm from \"antd/es/popconfirm\";\nimport _Button from \"antd/es/button\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport _Form from \"antd/es/form\";\nimport _Icon from \"antd/es/icon\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/Users/mac/Desktop/IBDRegister/src/components/busniess/ApplyDataBase/ApplyDataBase.js\";\nimport React, { Component } from \"react\";\nimport \"./ApplyDataBase.less\";\nimport http from \"../../../utils/api\";\nconst applyDataBaseId = \"620384838453\";\n\nclass ApplyDataBase extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imageUrl: \"\",\n      applyList: [],\n      showApply: false,\n      page: \"listPage\",\n      record: {}\n    };\n\n    this.componentDidMount = async () => {\n      let res;\n      await this.getApplyData();\n    };\n\n    this.getApplyData = async () => {\n      let res;\n\n      try {\n        res = await http().getTable({\n          resid: applyDataBaseId\n        });\n        console.log(\"res.data.data\", res.data.data);\n        let data = [];\n        res.data.data.map(item => {\n          let studyType = item.studyType && item.studyType.split(\",\");\n          item.studyType = studyType;\n          data.push(item);\n        });\n\n        if (res.data.error == 0) {\n          this.setState({\n            applyList: data\n          });\n        }\n      } catch (error) {\n        _message.error(error.message);\n      }\n    };\n\n    this.onApply = () => {\n      this.setState({\n        page: \"applyPage\"\n      });\n    };\n\n    this.onBack = () => {\n      this.setState({\n        page: \"listPage\"\n      });\n    };\n\n    this.onCheck = item => {\n      this.setState({\n        page: \"checkPage\",\n        record: item\n      });\n    };\n\n    this.onChangeCheckbox = checkedValues => {// console.log(\"checkedValues\", study);\n    };\n\n    this.handleSubmit = (e, type) => {\n      // console.log(\"e\",e,type)\n      // e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          this.onSubmit(values, type);\n        }\n      });\n    };\n\n    this.onSubmitRecord = async record => {\n      let res;\n      record.isSubmit = \"Y\";\n\n      try {\n        res = await http().modifyRecords({\n          resid: applyDataBaseId,\n          data: record\n        });\n\n        if (res.data.error == 0) {\n          _message.success(\"提交成功\");\n        }\n      } catch (error) {\n        _message.error(error.message);\n      }\n    };\n\n    this.handleUploadFile = () => {};\n\n    this.onSubmit = async (values, type) => {\n      let res;\n      let obj = {};\n      let study = values.study && values.study.toString();\n      console.log(\"teamPeople\", values.doctorPhoto);\n\n      if (type === 1) {\n        obj = {\n          doctor: values.doctor,\n          hospital: values.hospital,\n          post: values.post,\n          phoneNumber: values.phone,\n          email: values.email,\n          teamPeople: values.teamPeople,\n          teamPeople2: values.teamPeople2,\n          teamPeople3: values.teamPeople3,\n          studyType: values.study,\n          CDPatientNumber: values.CDNumber,\n          UCPatientNumber: values.UCNumber,\n          doctorPhoto: values.doctorPhotos,\n          studyType: study\n        };\n      } else {\n        obj = {\n          doctor: values.doctor,\n          hospital: values.hospital,\n          post: values.post,\n          phoneNumber: values.phone,\n          email: values.email,\n          teamPeople: values.teamPeople,\n          teamPeople2: values.teamPeople2,\n          teamPeople3: values.teamPeople3,\n          studyType: values.study,\n          CDPatientNumber: values.CDNumber,\n          UCPatientNumber: values.UCNumber,\n          doctorPhoto: values.doctorPhotos,\n          studyType: study,\n          isSubmit: \"Y\"\n        };\n      }\n\n      try {\n        res = await http().addRecords({\n          resid: applyDataBaseId,\n          data: [obj]\n        });\n\n        if (res.data.Error == 0) {\n          _message.success(\"申请成功！\");\n        }\n\n        this.setState({\n          page: \"listPage\"\n        });\n        this.getApplyData();\n      } catch (error) {\n        _message.error(error.message);\n      }\n    };\n\n    this.getBase64 = (img, callback) => {\n      const reader = new FileReader();\n      reader.addEventListener('load', () => callback(reader.result));\n      reader.readAsDataURL(img);\n    };\n\n    this.handleChange = info => {\n      if (info.file.status === 'uploading') {\n        this.setState({\n          loading: true\n        });\n        return;\n      }\n\n      if (info.file.status === 'done') {\n        // Get this url from response in real world.\n        this.getBase64(info.file.originFileObj, imageUrl => this.setState({\n          imageUrl,\n          loading: false\n        }));\n      }\n    };\n\n    this.renderPage = () => {\n      let page = this.state.page; // switch(page){\n      //   case 'applyPage':\n      //     return (\n      //       this.applyPage\n      //     )\n      //     case 'checkPage':\n      //       return (\n      //         applyPage\n      //       )\n      //       case 'listPage':\n      //         return (\n      //           listPage\n      //         )\n      // }\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const _this$state = this.state,\n          imageUrl = _this$state.imageUrl,\n          applyList = _this$state.applyList,\n          showApply = _this$state.showApply,\n          page = _this$state.page,\n          record = _this$state.record;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const uploadButton = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: this.state.loading ? \"loading\" : \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Upload\"));\n    const options = [{\n      label: \"单中心研究\",\n      value: \"单中心研究\"\n    }, {\n      label: \"多中心研究\",\n      value: \"多中心研究\"\n    }, {\n      label: \"第三方研究\",\n      value: \"第三方研究\"\n    }, {\n      label: \"所有研究\",\n      value: \"所有研究\"\n    }];\n    const checkPage = React.createElement(_Form, Object.assign({}, formItemLayout, {\n      // onSubmit={this.handleSubmit}\n      className: \"applyDataBase-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"\\u53C2\\u4E0ECHASE-IBD\\u6570\\u636E\\u5E93\\u5EFA\\u8BBE\\u7533\\u8BF7\\u8868\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"\\u7533\\u8BF7\\u533B\\u7597\\u5355\\u4F4D\"), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"\\u7533\\u8BF7\\u4EBA\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, record.doctor)), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"\\u6240\\u5C5E\\u5355\\u4F4D\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, record.hospital)), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"\\u804C\\u79F0\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, record.post)), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"\\u8054\\u7CFB\\u7535\\u8BDD\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, record.phoneNumber)), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"E-mail\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, record.email)), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"IBD\\u6CBB\\u7597\\u56E2\\u961F\\u540D\\u5355\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, record.teamPeople), \"\\xA0\\xA0\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, record.teamPeople2), \"\\xA0\\xA0\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, record.teamPeople3), \"\\xA0\\xA0\"), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"\\u9009\\u62E9\\u53C2\\u4E0E\\u6570\\u636E\\u5E93\\u7814\\u7A76\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(_Checkbox.Group, {\n      options: options,\n      defaultValue: record.studyType,\n      onChange: this.onChangeCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"\\u8D35\\u9662\\u76EE\\u524D\\u60A3\\u8005\\u6570\\u91CF\"), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"CD\\u60A3\\u8005\\u6570\\u91CF\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, record.CDPatientNumber)), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"UC\\u60A3\\u8005\\u6570\\u91CF\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, record.UCPatientNumber)), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"\\u533B\\u5E08\\u6267\\u7167\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, getFieldDecorator(\"doctorPhoto\", {})(imageUrl ? React.createElement(\"img\", {\n      src: imageUrl,\n      alt: \"avatar\",\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }) : uploadButton)), React.createElement(_Button, {\n      icon: \"download\",\n      type: \"primary\",\n      className: \"applyDataBase-form-print\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"\\u6253\\u5370\"));\n    const listPage = React.createElement(_List, {\n      className: \"applyDataBase-content-list\",\n      itemLayout: \"horizontal\",\n      dataSource: applyList,\n      renderItem: item => React.createElement(_List.Item, {\n        actions: [React.createElement(\"a\", {\n          key: \"list-loadmore-edit\",\n          onClick: () => {\n            this.onCheck(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304\n          },\n          __self: this\n        }, \"\\u67E5\\u770B\"), React.createElement(_Popconfirm, {\n          title: \"\\u4F60\\u786E\\u5B9A\\u8981\\u63D0\\u4EA4\\u5417\",\n          onConfirm: () => {\n            this.onSubmitRecord(item);\n          },\n          okText: \"Yes\",\n          cancelText: \"No\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          key: \"list-loadmore-edit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }, \"\\u63D0\\u4EA4\"))],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(_List.Item.Meta, {\n        // avatar={\n        //   <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n        // }\n        title: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"applyDataBase-content-list-word\",\n          href: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331\n          },\n          __self: this\n        }, \"\\u7533\\u8BF7\\u4EBA:\", item.doctor), React.createElement(\"a\", {\n          className: \"applyDataBase-content-list-word\",\n          href: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }, \"\\u6240\\u5C5E\\u5355\\u4F4D:\", item.hospital)),\n        description: \"\\u8349\\u7A3F\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"\\u7533\\u8BF7\\u65E5\\u671F\\uFF1A\", item.REC_CRTTIME)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    });\n    const applyPage = React.createElement(_Form, Object.assign({}, formItemLayout, {\n      // onSubmit={this.handleSubmit}\n      className: \"applyDataBase-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, \"\\u53C2\\u4E0ECHASE-IBD\\u6570\\u636E\\u5E93\\u5EFA\\u8BBE\\u7533\\u8BF7\\u8868\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, \"\\u7533\\u8BF7\\u533B\\u7597\\u5355\\u4F4D\"), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, \"\\u7533\\u8BF7\\u4EBA\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, getFieldDecorator(\"doctor\", {\n      rules: [{\n        required: true,\n        message: \"请输入申请人\",\n        whitespace: true\n      }]\n    })(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, \"\\u6240\\u5C5E\\u5355\\u4F4D\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, getFieldDecorator(\"hospital\", {\n      rules: [{\n        required: true,\n        message: \"请输入所属单位\",\n        whitespace: true\n      }]\n    })(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, \"\\u804C\\u79F0\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, getFieldDecorator(\"post\", {\n      rules: [{\n        required: true,\n        message: \"请输入您的职称！\",\n        whitespace: true\n      }]\n    })(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, \"\\u8054\\u7CFB\\u7535\\u8BDD\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, getFieldDecorator(\"phone\", {\n      rules: [{\n        required: true,\n        message: \"请输入您的联系电话!\",\n        whitespace: true\n      }]\n    })(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, \"E-mail\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, getFieldDecorator(\"email\", {\n      rules: [{\n        required: true,\n        message: \"请输入您的邮箱!\",\n        whitespace: true\n      }]\n    })(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, \"IBD\\u6CBB\\u7597\\u56E2\\u961F\\u540D\\u5355\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, getFieldDecorator(\"teamPeople\")(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    })), getFieldDecorator(\"teamPeople2\", {})(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    })), getFieldDecorator(\"teamPeople3\", {})(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, \"\\u9009\\u62E9\\u53C2\\u4E0E\\u6570\\u636E\\u5E93\\u7814\\u7A76\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, getFieldDecorator(\"study\", {\n      rules: []\n    })(React.createElement(_Checkbox.Group, {\n      options: options,\n      onChange: this.onChangeCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }))), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, \"\\u8D35\\u9662\\u76EE\\u524D\\u60A3\\u8005\\u6570\\u91CF\"), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, \"CD\\u60A3\\u8005\\u6570\\u91CF\\uFF1A\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, getFieldDecorator(\"CDNumber\", {\n      rules: [{\n        required: true,\n        message: \"请输入贵院的CD患者数量!\",\n        whitespace: true\n      }]\n    })(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, \"UC\\u60A3\\u8005\\u6570\\u91CF\\uFF1A\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, getFieldDecorator(\"UCNumber\", {\n      rules: [{\n        required: true,\n        message: \"请输入贵院的UC患者数量!\",\n        whitespace: true\n      }]\n    })(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, \"\\u533B\\u5E08\\u6267\\u7167\\uFF1A\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, getFieldDecorator(\"doctorPhoto\", {})(React.createElement(_Upload, {\n      name: \"avatar\",\n      listType: \"picture-card\",\n      className: \"avatar-uploader\",\n      showUploadList: false,\n      customRequest: this.handleUploadFile,\n      fileList: fileList,\n      onRemove: this.handleRemoveFile,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, imageUrl ? React.createElement(\"img\", {\n      src: imageUrl,\n      alt: \"avatar\",\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }) : uploadButton))), React.createElement(_Button, {\n      className: \"applyDataBase-form-save\",\n      htmlType: \"submit\",\n      onClick: () => {\n        this.handleSubmit(this, 1);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, \"\\u4FDD\\u5B58\"), React.createElement(_Button, {\n      type: \"primary\",\n      className: \"applyDataBase-form-submit\",\n      htmlType: \"submit\",\n      onClick: () => {\n        this.handleSubmit(this, 2);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, \"\\u63D0\\u4EA4\"));\n    return React.createElement(\"div\", {\n      className: \"applyDataBase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"applyDataBase-btns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      icon: page === \"applyPage\" || page === \"checkPage\" ? \"rollback\" : \"plus\",\n      type: \"primary\",\n      onClick: page === \"applyPage\" || page === \"checkPage\" ? this.onBack : this.onApply,\n      className: \"applyDataBase-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }, page === \"applyPage\" || page === \"checkPage\" ? \"返回\" : \"申请\"), React.createElement(\"a\", {\n      className: \"applyDataBase-photoBtn\",\n      type: \"link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, \"\\u7533\\u8BF7\\u6D41\\u7A0B\\u56FE\")), React.createElement(\"div\", {\n      className: \"applyDataBase-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }, page === \"applyPage\" ? applyPage : this.state.page === \"checkPage\" ? checkPage : listPage));\n  }\n\n}\n\nexport default _Form.create()(ApplyDataBase);","map":{"version":3,"sources":["/Users/mac/Desktop/IBDRegister/src/components/busniess/ApplyDataBase/ApplyDataBase.js"],"names":["React","Component","http","applyDataBaseId","ApplyDataBase","state","imageUrl","applyList","showApply","page","record","componentDidMount","res","getApplyData","getTable","resid","console","log","data","map","item","studyType","split","push","error","setState","message","onApply","onBack","onCheck","onChangeCheckbox","checkedValues","handleSubmit","e","type","props","form","validateFieldsAndScroll","err","values","onSubmit","onSubmitRecord","isSubmit","modifyRecords","success","handleUploadFile","obj","study","toString","doctorPhoto","doctor","hospital","post","phoneNumber","phone","email","teamPeople","teamPeople2","teamPeople3","CDPatientNumber","CDNumber","UCPatientNumber","UCNumber","doctorPhotos","addRecords","Error","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","handleChange","info","file","status","loading","originFileObj","renderPage","render","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","uploadButton","options","label","value","checkPage","width","listPage","REC_CRTTIME","applyPage","rules","required","whitespace","fileList","handleRemoveFile","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./ApplyDataBase.less\";\nimport {\n  Collapse,\n  Icon,\n  Input,\n  Upload,\n  Button,\n  Form,\n  Checkbox,\n  List,\n  Skeleton,\n  Avatar,\n  message,\n  Popconfirm\n} from \"antd\";\nimport http from \"../../../utils/api\";\nconst applyDataBaseId = \"620384838453\";\n\nclass ApplyDataBase extends Component {\n  state = {\n    imageUrl: \"\",\n    applyList: [],\n    showApply: false,\n    page: \"listPage\",\n    record: {}\n  };\n  componentDidMount = async () => {\n    let res;\n    await this.getApplyData();\n  };\n  getApplyData = async () => {\n    let res;\n    try {\n      res = await http().getTable({\n        resid: applyDataBaseId\n      });\n      console.log(\"res.data.data\", res.data.data);\n      let data = [];\n\n      res.data.data.map(item => {\n        let studyType = item.studyType && item.studyType.split(\",\");\n        item.studyType = studyType;\n        data.push(item);\n      });\n      if (res.data.error == 0) {\n        this.setState({\n          applyList: data\n        });\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  onApply = () => {\n    this.setState({\n      page: \"applyPage\"\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  onCheck = item => {\n    this.setState({\n      page: \"checkPage\",\n      record: item\n    });\n  };\n  onChangeCheckbox = checkedValues => {\n    // console.log(\"checkedValues\", study);\n  };\n  handleSubmit = (e, type) => {\n    // console.log(\"e\",e,type)\n    // e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.onSubmit(values, type);\n      }\n    });\n  };\n  onSubmitRecord = async record => {\n    let res;\n    record.isSubmit = \"Y\";\n    try {\n      res = await http().modifyRecords({\n        resid: applyDataBaseId,\n        data: record\n      });\n      if (res.data.error == 0) {\n        message.success(\"提交成功\");\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  //上传文件\n  handleUploadFile = () => {\n    \n  }\n  //提交表单\n  onSubmit = async (values, type) => {\n    let res;\n    let obj = {};\n    let study = values.study&&values.study.toString();\n\n    console.log(\"teamPeople\", values.doctorPhoto);\n    if (type === 1) {\n      obj = {\n        doctor: values.doctor,\n        hospital: values.hospital,\n        post: values.post,\n        phoneNumber: values.phone,\n        email: values.email,\n        teamPeople: values.teamPeople,\n        teamPeople2: values.teamPeople2,\n        teamPeople3: values.teamPeople3,\n        studyType: values.study,\n        CDPatientNumber: values.CDNumber,\n        UCPatientNumber: values.UCNumber,\n        doctorPhoto: values.doctorPhotos,\n        studyType: study\n      };\n    } else {\n      obj = {\n        doctor: values.doctor,\n        hospital: values.hospital,\n        post: values.post,\n        phoneNumber: values.phone,\n        email: values.email,\n        teamPeople: values.teamPeople,\n        teamPeople2: values.teamPeople2,\n        teamPeople3: values.teamPeople3,\n        studyType: values.study,\n        CDPatientNumber: values.CDNumber,\n        UCPatientNumber: values.UCNumber,\n        doctorPhoto: values.doctorPhotos,\n        studyType: study,\n        isSubmit: \"Y\"\n      };\n    }\n    try {\n      res = await http().addRecords({\n        resid: applyDataBaseId,\n        data: [obj]\n      });\n      if (res.data.Error == 0) {\n        message.success(\"申请成功！\");\n      }\n      this.setState({\n        page: \"listPage\"\n      });\n      this.getApplyData();\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n   getBase64 = (img, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n  }\n  handleChange = info => {\n    if (info.file.status === 'uploading') {\n      this.setState({ loading: true });\n      return;\n    }\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      this.getBase64(info.file.originFileObj, imageUrl =>\n        this.setState({\n          imageUrl,\n          loading: false,\n        }),\n      );\n    }\n  };\n\n  renderPage = () => {\n    let page = this.state.page;\n    // switch(page){\n    //   case 'applyPage':\n    //     return (\n    //       this.applyPage\n    //     )\n    //     case 'checkPage':\n    //       return (\n    //         applyPage\n    //       )\n    //       case 'listPage':\n    //         return (\n    //           listPage\n    //         )\n    // }\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { imageUrl, applyList, showApply, page, record } = this.state;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const uploadButton = (\n      <div>\n        <Icon type={this.state.loading ? \"loading\" : \"plus\"} />\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n    const options = [\n      { label: \"单中心研究\", value: \"单中心研究\" },\n      { label: \"多中心研究\", value: \"多中心研究\" },\n      { label: \"第三方研究\", value: \"第三方研究\" },\n      { label: \"所有研究\", value: \"所有研究\" }\n    ];\n    const checkPage = (\n      <Form\n        {...formItemLayout}\n        // onSubmit={this.handleSubmit}\n        className=\"applyDataBase-form\"\n      >\n        <h1>参与CHASE-IBD数据库建设申请表</h1>\n        <h3>申请医疗单位</h3>\n        <Form.Item label={<span>申请人&nbsp;</span>}>\n          <span>{record.doctor}</span>\n        </Form.Item>\n        <Form.Item label={<span>所属单位&nbsp;</span>}>\n          <span>{record.hospital}</span>\n        </Form.Item>\n        <Form.Item label={<span>职称&nbsp;</span>}>\n          <span>{record.post}</span>\n        </Form.Item>\n        <Form.Item label={<span>联系电话&nbsp;</span>}>\n          <span>{record.phoneNumber}</span>\n        </Form.Item>\n        <Form.Item label={<span>E-mail&nbsp;</span>}>\n          <span>{record.email}</span>\n        </Form.Item>\n        <Form.Item label={<span>IBD治疗团队名单&nbsp;</span>}>\n          <span>{record.teamPeople}</span>&nbsp;&nbsp;\n          <span>{record.teamPeople2}</span>&nbsp;&nbsp;\n          <span>{record.teamPeople3}</span>&nbsp;&nbsp;\n        </Form.Item>\n        <Form.Item label={<span>选择参与数据库研究&nbsp;</span>}>\n          <Checkbox.Group\n            options={options}\n            defaultValue={record.studyType}\n            onChange={this.onChangeCheckbox}\n          />\n        </Form.Item>\n        <h3>贵院目前患者数量</h3>\n\n        <Form.Item label={<span>CD患者数量&nbsp;</span>}>\n          <span>{record.CDPatientNumber}</span>\n        </Form.Item>\n        <Form.Item label={<span>UC患者数量&nbsp;</span>}>\n          <span>{record.UCPatientNumber}</span>\n        </Form.Item>\n        <Form.Item label={<span>医师执照&nbsp;</span>}>\n          {getFieldDecorator(\"doctorPhoto\", {})(\n              imageUrl ? (\n                <img src={imageUrl} alt=\"avatar\" style={{ width: \"100%\" }} />\n              ) : (\n                uploadButton\n              )\n          )}\n        </Form.Item>\n\n        <Button\n          icon=\"download\"\n          type=\"primary\"\n          className=\"applyDataBase-form-print\"\n        >\n          打印\n        </Button>\n      </Form>\n    );\n    const listPage = (\n      <List\n        className=\"applyDataBase-content-list\"\n        itemLayout=\"horizontal\"\n        dataSource={applyList}\n        renderItem={item => (\n          <List.Item\n            actions={[\n              <a\n                key=\"list-loadmore-edit\"\n                onClick={() => {\n                  this.onCheck(item);\n                }}\n              >\n                查看\n              </a>,\n              <Popconfirm\n                title=\"你确定要提交吗\"\n                onConfirm={() => {\n                  this.onSubmitRecord(item);\n                }}\n                okText=\"Yes\"\n                cancelText=\"No\"\n              >\n                <a key=\"list-loadmore-edit\">提交</a>\n              </Popconfirm>\n            ]}\n          >\n            {/* <Skeleton avatar title={false} loading={item.doctor} active> */}\n            <List.Item.Meta\n              // avatar={\n              //   <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n              // }\n              title={\n                <React.Fragment>\n                  <a className=\"applyDataBase-content-list-word\" href=\"#\">\n                    申请人:{item.doctor}\n                  </a>\n                  <a className=\"applyDataBase-content-list-word\" href=\"#\">\n                    所属单位:{item.hospital}\n                  </a>\n                </React.Fragment>\n              }\n              description=\"草稿\"\n            />\n            <div>申请日期：{item.REC_CRTTIME}</div>\n            {/* </Skeleton> */}\n          </List.Item>\n        )}\n      />\n    );\n    const applyPage = (\n      <Form\n        {...formItemLayout}\n        // onSubmit={this.handleSubmit}\n        className=\"applyDataBase-form\"\n      >\n        <h1>参与CHASE-IBD数据库建设申请表</h1>\n        <h3>申请医疗单位</h3>\n        <Form.Item label={<span>申请人&nbsp;</span>}>\n          {getFieldDecorator(\"doctor\", {\n            rules: [\n              {\n                required: true,\n                message: \"请输入申请人\",\n                whitespace: true\n              }\n            ]\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label={<span>所属单位&nbsp;</span>}>\n          {getFieldDecorator(\"hospital\", {\n            rules: [\n              {\n                required: true,\n                message: \"请输入所属单位\",\n                whitespace: true\n              }\n            ]\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label={<span>职称&nbsp;</span>}>\n          {getFieldDecorator(\"post\", {\n            rules: [\n              {\n                required: true,\n                message: \"请输入您的职称！\",\n                whitespace: true\n              }\n            ]\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label={<span>联系电话&nbsp;</span>}>\n          {getFieldDecorator(\"phone\", {\n            rules: [\n              {\n                required: true,\n                message: \"请输入您的联系电话!\",\n                whitespace: true\n              }\n            ]\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label={<span>E-mail&nbsp;</span>}>\n          {getFieldDecorator(\"email\", {\n            rules: [\n              {\n                required: true,\n                message: \"请输入您的邮箱!\",\n                whitespace: true\n              }\n            ]\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label={<span>IBD治疗团队名单&nbsp;</span>}>\n          {getFieldDecorator(\"teamPeople\")(<Input />)}\n          {getFieldDecorator(\"teamPeople2\", {})(<Input />)}\n          {getFieldDecorator(\"teamPeople3\", {})(<Input />)}\n        </Form.Item>\n        <Form.Item label={<span>选择参与数据库研究&nbsp;</span>}>\n          {getFieldDecorator(\"study\", {\n            rules: []\n          })(\n            <Checkbox.Group\n              options={options}\n              onChange={this.onChangeCheckbox}\n            />\n          )}\n        </Form.Item>\n        <h3>贵院目前患者数量</h3>\n\n        <Form.Item label={<span>CD患者数量：&nbsp;</span>}>\n          {getFieldDecorator(\"CDNumber\", {\n            rules: [\n              {\n                required: true,\n                message: \"请输入贵院的CD患者数量!\",\n                whitespace: true\n              }\n            ]\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label={<span>UC患者数量：&nbsp;</span>}>\n          {getFieldDecorator(\"UCNumber\", {\n            rules: [\n              {\n                required: true,\n                message: \"请输入贵院的UC患者数量!\",\n                whitespace: true\n              }\n            ]\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label={<span>医师执照：&nbsp;</span>}>\n          {getFieldDecorator(\"doctorPhoto\", {})(\n            <Upload\n              name=\"avatar\"\n              listType=\"picture-card\"\n              className=\"avatar-uploader\"\n              showUploadList={false}\n              customRequest={this.handleUploadFile}\n              fileList={fileList}\n              onRemove={this.handleRemoveFile}\n              onChange={this.handleChange}\n            >\n              {imageUrl ? (\n                <img src={imageUrl} alt=\"avatar\" style={{ width: \"100%\" }} />\n              ) : (\n                uploadButton\n              )}\n            </Upload>\n          )}\n        </Form.Item>\n        <Button\n          className=\"applyDataBase-form-save\"\n          htmlType=\"submit\"\n          onClick={() => {\n            this.handleSubmit(this, 1);\n          }}\n        >\n          保存\n        </Button>\n        <Button\n          type=\"primary\"\n          className=\"applyDataBase-form-submit\"\n          htmlType=\"submit\"\n          onClick={() => {\n            this.handleSubmit(this, 2);\n          }}\n        >\n          提交\n        </Button>\n      </Form>\n    );\n\n    return (\n      <div className=\"applyDataBase\">\n        <div className=\"applyDataBase-btns\">\n          <Button\n            icon={\n              page === \"applyPage\" || page === \"checkPage\" ? \"rollback\" : \"plus\"\n            }\n            type=\"primary\"\n            onClick={\n              page === \"applyPage\" || page === \"checkPage\"\n                ? this.onBack\n                : this.onApply\n            }\n            className=\"applyDataBase-btn\"\n          >\n            {page === \"applyPage\" || page === \"checkPage\" ? \"返回\" : \"申请\"}\n          </Button>\n          <a className=\"applyDataBase-photoBtn\" type=\"link\">\n            申请流程图\n          </a>\n        </div>\n        <div className=\"applyDataBase-content\">\n          {page === \"applyPage\"\n            ? applyPage\n            : this.state.page === \"checkPage\"\n            ? checkPage\n            : listPage}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(ApplyDataBase);\n"]},"metadata":{},"sourceType":"module"}