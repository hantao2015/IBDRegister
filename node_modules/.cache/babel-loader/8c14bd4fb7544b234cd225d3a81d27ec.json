{"ast":null,"code":"import _Spin from \"antd/es/spin\";\nimport _Modal from \"antd/es/modal\";\nimport _Form from \"antd/es/form\";\nimport _Input from \"antd/es/input\";\nimport _Button from \"antd/es/button\";\nimport _Icon from \"antd/es/icon\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/Users/mac/Desktop/IBDRegister/src/components/busniess/UploadFile/UploadFile.js\";\nimport React, { Component } from \"react\";\nimport \"./UploadFile.less\";\nimport http from \"../../../utils/api\";\n\nconst uploadFile = (file, url) => {\n  return new Promise((resolve, reject) => {\n    let fd = new FormData();\n    fd.append(\"file\", file, file.name);\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", url);\n\n    xhr.onload = () => {\n      const data = JSON.parse(xhr.response);\n\n      if (xhr.status === 200 && (data.error === 0 || data.error === \"0\")) {\n        const imgUrl = data.data;\n        resolve(imgUrl);\n      } else {\n        reject(data);\n      }\n    };\n\n    xhr.send(fd);\n  });\n};\n\nclass UploadFile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.getApplyData = async () => {\n      let res;\n      this.setState({\n        loading: true\n      });\n\n      try {\n        res = await http().getTable({// resid: applyDataBaseId\n        });\n        let data = [];\n        res.data && res.data.data && res.data.data.map(item => {\n          let studyType = item.studyType && item.studyType.split(\",\");\n          item.studyType = studyType;\n          data.push(item);\n        });\n\n        if (res.data.error == 0) {\n          this.setState({\n            applyList: data\n          });\n        }\n      } catch (error) {\n        _message.error(error.message);\n      }\n\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.handleSubmit = (e, type) => {\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          this.onSubmit(values, type);\n        }\n      });\n    };\n\n    this.handleUploadFile = async fileInfo => {\n      const file = fileInfo.file;\n      const bucketname = \"realsun\";\n      const type = \"\";\n      const fileUrl = \"http://ivf.realsun.me:9001/api/AliyunOss/PutOneImageObject?bucketname=\".concat(encodeURIComponent(bucketname), \"&srctype=\").concat(encodeURIComponent(type));\n\n      try {\n        await uploadFile(file, fileUrl).then(imageUrl => {\n          this.setState({\n            imageUrl\n          });\n        });\n      } catch (err) {\n        return _message.error(err.message);\n      }\n    };\n\n    this.onSubmit = async (values, type) => {\n      let res;\n      let obj = {};\n      let study = values.study && values.study.toString();\n\n      if (type === 1) {\n        obj = {\n          doctor: values.doctor,\n          hospital: values.hospital,\n          post: values.post,\n          phoneNumber: values.phone,\n          email: values.email,\n          teamPeople: values.teamPeople,\n          teamPeople2: values.teamPeople2,\n          teamPeople3: values.teamPeople3,\n          studyType: values.study,\n          CDPatientNumber: values.CDNumber,\n          UCPatientNumber: values.UCNumber,\n          doctorPhoto: this.state.imageUrl,\n          studyType: study\n        };\n      } else {\n        obj = {\n          doctor: values.doctor,\n          hospital: values.hospital,\n          post: values.post,\n          phoneNumber: values.phone,\n          email: values.email,\n          teamPeople: values.teamPeople,\n          teamPeople2: values.teamPeople2,\n          teamPeople3: values.teamPeople3,\n          studyType: values.study,\n          CDPatientNumber: values.CDNumber,\n          UCPatientNumber: values.UCNumber,\n          doctorPhoto: this.state.imageUrl,\n          studyType: study,\n          isSubmit: \"Y\"\n        };\n      }\n\n      try {\n        res = await http().addRecords({\n          // resid: applyDataBaseId,\n          data: [obj]\n        });\n\n        if (res.data.Error == 0) {\n          _message.success(\"申请成功！\");\n        }\n\n        this.setState({\n          page: \"listPage\"\n        });\n        this.getApplyData();\n      } catch (error) {\n        _message.error(error.message);\n      }\n    };\n\n    this.getBase64 = (img, callback) => {\n      const reader = new FileReader();\n      reader.addEventListener(\"load\", () => callback(reader.result));\n      reader.readAsDataURL(img);\n    };\n\n    this.handleChange = info => {\n      console.log(\"info\", info);\n\n      if (info.file.status === \"uploading\") {\n        return;\n      }\n\n      if (info.file.status === \"done\") {\n        // Get this url from response in real world.\n        this.getBase64(info.file.originFileObj, imageUrl => this.setState({\n          imageUrl\n        }));\n      }\n    };\n  }\n\n  componentDidMount() {} // this.getApplyData();\n  //获取申请记录\n\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const _this$state = this.state,\n          imageUrl = _this$state.imageUrl,\n          applyList = _this$state.applyList,\n          loading = _this$state.loading,\n          page = _this$state.page,\n          record = _this$state.record;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const uploadButton = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: this.state.loading ? \"loading\" : \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Upload\"));\n    return React.createElement(\"div\", {\n      className: \"editNotice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      className: \"editNotice-add\",\n      onClick: this.onAdd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"\\u6DFB\\u52A0\\u65B0\\u901A\\u77E5\"), React.createElement(_Spin, {\n      spinning: spin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(Table, {\n      key: \"3\",\n      className: \"editNotice-table\",\n      columns: columns({\n        onEdit: record => {\n          this.onEdit(record);\n        },\n        onPublish: (record, type) => {\n          this.onPublish(record, type);\n        },\n        data: data\n      }),\n      scroll: {\n        x: 1000,\n        y: \"calc(100vh - 260px)\"\n      },\n      dataSource: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(_Modal, {\n      title: \"\\u6DFB\\u52A0\\u65B0\\u901A\\u77E5\",\n      visible: this.state.visible,\n      width: 700,\n      onOk: this.handleOk,\n      onCancel: this.handleCancel,\n      destroyOnClose: true,\n      footer: [React.createElement(_Button, {\n        key: \"back\",\n        onClick: this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"\\u53D6\\u6D88\"), React.createElement(_Button, {\n        key: \"submit\",\n        type: \"primary\",\n        onClick: () => {\n          this.save(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"\\u4FDD\\u5B58\"), React.createElement(_Button, {\n        key: \"submit\",\n        type: \"primary\",\n        onClick: this.publish,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"\\u53D1\\u5E03\")],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(_Form, Object.assign({}, formItemLayout, {\n      className: \"editNotice-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }), React.createElement(_Form.Item, {\n      className: \"editNotice-form-item\",\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"\\u6807\\u9898\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, getFieldDecorator(\"title\", {\n      rules: [{\n        required: true,\n        message: \"请输入标题\",\n        whitespace: true\n      }]\n    })(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      className: \"editNotice-form-item\",\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"\\u6D88\\u606F\\u5185\\u5BB9\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, getFieldDecorator(\"content\", {\n      rules: [{\n        required: true,\n        message: \"请输入消息内容\",\n        whitespace: true\n      }]\n    })(React.createElement(TextArea, {\n      className: \"editNotice-form-item-textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }))))), React.createElement(_Modal, {\n      title: \"\\u4FEE\\u6539\\u901A\\u77E5\",\n      visible: this.state.editVisible,\n      width: 700,\n      onOk: this.handleOk,\n      onCancel: this.handleCancel,\n      destroyOnClose: true,\n      footer: [React.createElement(_Button, {\n        key: \"back\",\n        onClick: this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, \"\\u53D6\\u6D88\"), React.createElement(_Button, {\n        key: \"submit\",\n        type: \"primary\",\n        onClick: () => {\n          this.save(2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"\\u4FDD\\u5B58\")],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(_Form, Object.assign({}, formItemLayout, {\n      className: \"editNotice-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }), React.createElement(_Form.Item, {\n      className: \"editNotice-form-item\",\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"\\u6807\\u9898\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, getFieldDecorator(\"title\", {\n      rules: [{\n        required: true,\n        message: \"请输入标题\",\n        whitespace: true\n      }],\n      initialValue: record.title\n    })(React.createElement(_Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      className: \"editNotice-form-item\",\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, \"\\u6D88\\u606F\\u5185\\u5BB9\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, getFieldDecorator(\"content\", {\n      rules: [{\n        required: true,\n        message: \"请输入消息内容\",\n        whitespace: true\n      }],\n      initialValue: record.content\n    })(React.createElement(TextArea, {\n      className: \"editNotice-form-item-textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default _Form.create()(UploadFile);","map":{"version":3,"sources":["/Users/mac/Desktop/IBDRegister/src/components/busniess/UploadFile/UploadFile.js"],"names":["React","Component","http","uploadFile","file","url","Promise","resolve","reject","fd","FormData","append","name","xhr","XMLHttpRequest","open","onload","data","JSON","parse","response","status","error","imgUrl","send","UploadFile","state","getApplyData","res","setState","loading","getTable","map","item","studyType","split","push","applyList","message","handleSubmit","e","type","props","form","validateFieldsAndScroll","err","values","onSubmit","handleUploadFile","fileInfo","bucketname","fileUrl","encodeURIComponent","then","imageUrl","obj","study","toString","doctor","hospital","post","phoneNumber","phone","email","teamPeople","teamPeople2","teamPeople3","CDPatientNumber","CDNumber","UCPatientNumber","UCNumber","doctorPhoto","isSubmit","addRecords","Error","success","page","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","handleChange","info","console","log","originFileObj","componentDidMount","render","getFieldDecorator","record","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","uploadButton","onAdd","spin","columns","onEdit","onPublish","x","y","visible","handleOk","handleCancel","save","publish","rules","required","whitespace","editVisible","initialValue","title","content","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./UploadFile.less\";\nimport {\n  Collapse,\n  Icon,\n  Input,\n  Upload,\n  Button,\n  Form,\n  Checkbox,\n  List,\n  Skeleton,\n  Avatar,\n  message,\n  Popconfirm,\n  Spin,\n  Tag,\n  Modal,\n  Steps,\n  Popover\n} from \"antd\";\nimport http from \"../../../utils/api\";\n\n\nconst uploadFile = (file, url) => {\n  return new Promise((resolve, reject) => {\n    let fd = new FormData();\n    fd.append(\"file\", file, file.name);\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", url);\n    xhr.onload = () => {\n      const data = JSON.parse(xhr.response);\n      if (xhr.status === 200 && (data.error === 0 || data.error === \"0\")) {\n        const imgUrl = data.data;\n        resolve(imgUrl);\n      } else {\n        reject(data);\n      }\n    };\n    xhr.send(fd);\n  });\n};\nclass UploadFile extends Component {\n  state = {\n  };\n  componentDidMount() {\n    // this.getApplyData();\n  }\n\n  //获取申请记录\n  getApplyData = async () => {\n    let res;\n    this.setState({\n      loading: true\n    });\n    try {\n      res = await http().getTable({\n        // resid: applyDataBaseId\n      });\n      let data = [];\n      res.data &&\n        res.data.data &&\n        res.data.data.map(item => {\n          let studyType = item.studyType && item.studyType.split(\",\");\n          item.studyType = studyType;\n          data.push(item);\n        });\n      if (res.data.error == 0) {\n        this.setState({\n          applyList: data\n        });\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n    this.setState({\n      loading: false\n    });\n  };\n\n  handleSubmit = (e, type) => {\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.onSubmit(values, type);\n      }\n    });\n  };\n\n  //上传文件\n  handleUploadFile = async fileInfo => {\n    const file = fileInfo.file;\n    const bucketname = \"realsun\";\n    const type = \"\";\n    const fileUrl = `http://ivf.realsun.me:9001/api/AliyunOss/PutOneImageObject?bucketname=${encodeURIComponent(\n      bucketname\n    )}&srctype=${encodeURIComponent(type)}`;\n    try {\n      await uploadFile(file, fileUrl).then(imageUrl => {\n        this.setState({\n          imageUrl\n        });\n      });\n    } catch (err) {\n      return message.error(err.message);\n    }\n  };\n  //提交表单\n  onSubmit = async (values, type) => {\n    let res;\n    let obj = {};\n    let study = values.study && values.study.toString();\n    if (type === 1) {\n      obj = {\n        doctor: values.doctor,\n        hospital: values.hospital,\n        post: values.post,\n        phoneNumber: values.phone,\n        email: values.email,\n        teamPeople: values.teamPeople,\n        teamPeople2: values.teamPeople2,\n        teamPeople3: values.teamPeople3,\n        studyType: values.study,\n        CDPatientNumber: values.CDNumber,\n        UCPatientNumber: values.UCNumber,\n        doctorPhoto: this.state.imageUrl,\n        studyType: study\n      };\n    } else {\n      obj = {\n        doctor: values.doctor,\n        hospital: values.hospital,\n        post: values.post,\n        phoneNumber: values.phone,\n        email: values.email,\n        teamPeople: values.teamPeople,\n        teamPeople2: values.teamPeople2,\n        teamPeople3: values.teamPeople3,\n        studyType: values.study,\n        CDPatientNumber: values.CDNumber,\n        UCPatientNumber: values.UCNumber,\n        doctorPhoto: this.state.imageUrl,\n        studyType: study,\n        isSubmit: \"Y\"\n      };\n    }\n    try {\n      res = await http().addRecords({\n        // resid: applyDataBaseId,\n        data: [obj]\n      });\n      if (res.data.Error == 0) {\n        message.success(\"申请成功！\");\n      }\n      this.setState({\n        page: \"listPage\"\n      });\n      this.getApplyData();\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  getBase64 = (img, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => callback(reader.result));\n    reader.readAsDataURL(img);\n  };\n  handleChange = info => {\n    console.log(\"info\", info);\n    if (info.file.status === \"uploading\") {\n      return;\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      this.getBase64(info.file.originFileObj, imageUrl =>\n        this.setState({\n          imageUrl\n        })\n      );\n    }\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { imageUrl, applyList, loading, page, record } = this.state;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const uploadButton = (\n      <div>\n        <Icon type={this.state.loading ? \"loading\" : \"plus\"} />\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n\n    return (\n      <div className=\"editNotice\">\n        <Button type=\"primary\" className=\"editNotice-add\" onClick={this.onAdd}>\n          添加新通知\n        </Button>\n        <Spin spinning={spin}>\n          <Table\n            key=\"3\"\n            className=\"editNotice-table\"\n            columns={columns({\n              onEdit: record => {\n                this.onEdit(record);\n              },\n              onPublish: (record, type) => {\n                this.onPublish(record, type);\n              },\n              data: data\n            })}\n            scroll={{ x: 1000, y: \"calc(100vh - 260px)\" }}\n            dataSource={data}\n          />\n          <Modal\n            title=\"添加新通知\"\n            visible={this.state.visible}\n            width={700}\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n            destroyOnClose={true}\n            footer={[\n              <Button key=\"back\" onClick={this.handleCancel}>\n                取消\n              </Button>,\n              <Button\n                key=\"submit\"\n                type=\"primary\"\n                onClick={() => {\n                  this.save(1);\n                }}\n              >\n                保存\n              </Button>,\n              <Button key=\"submit\" type=\"primary\" onClick={this.publish}>\n                发布\n              </Button>\n            ]}\n          >\n            <Form {...formItemLayout} className=\"editNotice-form\">\n              {/* <h1>消息编辑</h1> */}\n              <Form.Item\n                className=\"editNotice-form-item\"\n                label={<span>标题&nbsp;</span>}\n              >\n                {getFieldDecorator(\"title\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入标题\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                className=\"editNotice-form-item\"\n                label={<span>消息内容&nbsp;</span>}\n              >\n                {getFieldDecorator(\"content\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入消息内容\",\n                      whitespace: true\n                    }\n                  ]\n                })(<TextArea className=\"editNotice-form-item-textarea\" />)}\n              </Form.Item>\n            </Form>\n          </Modal>\n          <Modal\n            title=\"修改通知\"\n            visible={this.state.editVisible}\n            width={700}\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n            destroyOnClose={true}\n            footer={[\n              <Button key=\"back\" onClick={this.handleCancel}>\n                取消\n              </Button>,\n              <Button\n                key=\"submit\"\n                type=\"primary\"\n                onClick={() => {\n                  this.save(2);\n                }}\n              >\n                保存\n              </Button>\n            ]}\n          >\n            <Form {...formItemLayout} className=\"editNotice-form\">\n              {/* <h1>消息编辑</h1> */}\n              <Form.Item\n                className=\"editNotice-form-item\"\n                label={<span>标题&nbsp;</span>}\n              >\n                {getFieldDecorator(\"title\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入标题\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: record.title\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                className=\"editNotice-form-item\"\n                label={<span>消息内容&nbsp;</span>}\n              >\n                {getFieldDecorator(\"content\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入消息内容\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: record.content\n                })(<TextArea className=\"editNotice-form-item-textarea\" />)}\n              </Form.Item>\n            </Form>\n          </Modal>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(UploadFile);\n"]},"metadata":{},"sourceType":"module"}