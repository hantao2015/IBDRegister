{"ast":null,"code":"import _Spin from \"antd/es/spin\";\nimport _Empty from \"antd/es/empty\";\nimport _Icon from \"antd/es/icon\";\nimport _Alert from \"antd/es/alert\";\nimport _toArray from \"/Users/mac/Desktop/IBDRegister/node_modules/@babel/runtime/helpers/esm/toArray\";\nimport _Collapse from \"antd/es/collapse\";\nvar _jsxFileName = \"/Users/mac/Desktop/IBDRegister/src/components/busniess/NoticeList/NoticeList.js\";\nimport React, { Component } from \"react\";\nimport \"./NoticeList.less\";\nimport http from \"../../../utils/api\";\nconst Panel = _Collapse.Panel;\nconst noticeId = \"620317621824\";\n\nclass NoticeList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      collapsed: false,\n      imageUrl: \"\",\n      userInfo: {},\n      currentNotice: [],\n      historyNotice: [],\n      showSpin: false\n    };\n\n    this.componentDidMount = async () => {\n      let res;\n      this.setState({\n        showSpin: true\n      });\n\n      try {\n        res = await http().getTable({\n          resid: noticeId\n        });\n\n        const _res$data$data = _toArray(res.data.data),\n              current = _res$data$data[0],\n              history = _res$data$data.slice(1);\n\n        this.setState({\n          currentNotice: current,\n          historyNotice: history\n        });\n      } catch (error) {}\n\n      this.setState({\n        showSpin: false\n      });\n    };\n  }\n\n  render() {\n    const customPanelStyle = {\n      background: \"#f7f7f7\",\n      borderRadius: 4,\n      marginBottom: 24,\n      border: 0,\n      overflow: \"hidden\"\n    };\n    const _this$state = this.state,\n          currentNotice = _this$state.currentNotice,\n          historyNotice = _this$state.historyNotice,\n          showSpin = _this$state.showSpin;\n    return React.createElement(\"div\", {\n      className: \"noticeList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(_Spin, {\n      spinning: showSpin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"\\u6700\\u65B0\\u901A\\u77E5\"), React.createElement(_Alert, {\n      message: currentNotice.title,\n      description: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, currentNotice.content), React.createElement(\"span\", {\n        className: \"noticeList-time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, currentNotice.noticeDate)),\n      type: \"info\",\n      showIcon: true // closeText=\"Close\"\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"noticeList-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \" \"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"\\u5386\\u53F2\\u901A\\u77E5\"), historyNotice.length > 0 ? React.createElement(_Collapse, {\n      bordered: false,\n      className: \"noticeList-Collapse\",\n      defaultActiveKey: [\"0\"],\n      expandIcon: ({\n        isActive\n      }) => React.createElement(_Icon, {\n        type: \"caret-right\",\n        rotate: isActive ? 90 : 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, historyNotice.map((item, index) => {\n      return React.createElement(Panel, {\n        header: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, item.title), React.createElement(\"span\", {\n          className: \"noticeList-time\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, item.noticeDate)),\n        key: index,\n        style: customPanelStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, item.content));\n    })) : React.createElement(_Empty, {\n      image: _Empty.PRESENTED_IMAGE_SIMPLE,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default NoticeList;","map":{"version":3,"sources":["/Users/mac/Desktop/IBDRegister/src/components/busniess/NoticeList/NoticeList.js"],"names":["React","Component","http","Panel","noticeId","NoticeList","state","collapsed","imageUrl","userInfo","currentNotice","historyNotice","showSpin","componentDidMount","res","setState","getTable","resid","data","current","history","error","render","customPanelStyle","background","borderRadius","marginBottom","border","overflow","title","content","noticeDate","length","isActive","map","item","index","PRESENTED_IMAGE_SIMPLE"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./NoticeList.less\";\nimport { Collapse, Icon, Alert, Empty, Button, Spin } from \"antd\";\nimport http from \"../../../utils/api\";\nconst { Panel } = Collapse;\nconst noticeId = \"620317621824\";\n\nclass NoticeList extends Component {\n  state = {\n    collapsed: false,\n    imageUrl: \"\",\n    userInfo: {},\n    currentNotice: [],\n    historyNotice: [],\n    showSpin:false\n  };\n  componentDidMount = async () => {\n    let res;\n    this.setState({\n      showSpin:true\n    })\n    try {\n      res = await http().getTable({\n        resid: noticeId\n      });\n      const [current, ...history] = res.data.data;\n      this.setState({\n        currentNotice: current,\n        historyNotice: history\n      });\n    } catch (error) {}\n    this.setState({\n      showSpin:false\n    })\n  };\n  render() {\n    const customPanelStyle = {\n      background: \"#f7f7f7\",\n      borderRadius: 4,\n      marginBottom: 24,\n      border: 0,\n      overflow: \"hidden\"\n    };\n    const { currentNotice, historyNotice,showSpin } = this.state;\n    return (\n      <div className=\"noticeList\">\n        <Spin spinning={showSpin}>\n        <h2>最新通知</h2>\n        <Alert\n          message={currentNotice.title}\n          description={<div><span>{currentNotice.content}</span><span className='noticeList-time'>{currentNotice.noticeDate}</span></div>}\n          type=\"info\"\n          showIcon\n          // closeText=\"Close\"\n        />\n        <div className=\"noticeList-line\"> </div>\n        <h3>历史通知</h3>\n        {historyNotice.length > 0 ? (\n          <Collapse\n            bordered={false}\n            className='noticeList-Collapse'\n            defaultActiveKey={[\"0\"]}\n            expandIcon={({ isActive }) => (\n              <Icon type=\"caret-right\" rotate={isActive ? 90 : 0} />\n            )}\n          >\n            {historyNotice.map((item,index) => {\n              return (\n                <Panel header={<div><span>{item.title}</span><span className='noticeList-time'>{item.noticeDate}</span></div>} key={index} style={customPanelStyle}>\n                  <p>{item.content}</p>\n                </Panel>\n              );\n            })}\n          </Collapse>\n        ) : (\n          <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n        )}\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default NoticeList;\n"]},"metadata":{},"sourceType":"module"}