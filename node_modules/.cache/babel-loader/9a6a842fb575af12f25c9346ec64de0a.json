{"ast":null,"code":"import _Table from \"antd/es/table\";\nvar _jsxFileName = \"/Users/mac/Desktop/IBDRegister/src/components/busniess/ApproveProjectList/ApproveProjectList.js\";\nimport React, { Component } from \"react\";\nimport \"./ApproveProjectList.less\";\nimport http from \"../../../utils/api\";\nconst applyProjectId = \"620475440053\";\n\nclass ApproveProjectList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [{}],\n      page: \"listPage\",\n      spin: false\n    };\n\n    this.componentDidMount = async () => {\n      await this.getData();\n    };\n\n    this.onCheck = record => {\n      this.setState({\n        page: \"checkPage\"\n      });\n    };\n\n    this.getData = async () => {\n      this.setState({\n        spin: true\n      });\n      let res;\n\n      try {\n        res = await http().getTable({\n          resid: applyProjectId\n        });\n\n        if (res.data.error === 0) {\n          this.setState({\n            data: res.data.data\n          });\n        }\n      } catch (error) {}\n\n      this.setState({\n        spin: false\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          data = _this$state.data,\n          spin = _this$state.spin,\n          page = _this$state.page;\n    const columns = [{\n      title: \"序号\",\n      dataIndex: \"name\",\n      key: \"name\"\n    }, {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n      render: text => React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, text)\n    }, {\n      title: \"申请时间\",\n      dataIndex: \"applyTime\",\n      key: \"applyTime\"\n    }, {\n      title: \"所属单位\",\n      dataIndex: \"hospital\",\n      key: \"hospital\"\n    }, {\n      title: \"申请人\",\n      dataIndex: \"doctor\",\n      key: \"doctor\"\n    }, {\n      title: \"研究类型\",\n      dataIndex: \"studyType\",\n      key: \"studyType\"\n    }, {\n      title: \"负责人\",\n      dataIndex: \"doctor\",\n      key: \"doctor\"\n    }, // {\n    //   title: 'Tags',\n    //   key: 'tags',\n    //   dataIndex: 'tags',\n    //   render: tags => (\n    //     <span>\n    //       {tags.map(tag => {\n    //         let color = tag.length > 5 ? 'geekblue' : 'green';\n    //         if (tag === 'loser') {\n    //           color = 'volcano';\n    //         }\n    //         return (\n    //           <Tag color={color} key={tag}>\n    //             {tag.toUpperCase()}\n    //           </Tag>\n    //         );\n    //       })}\n    //     </span>\n    //   ),\n    // },\n    {\n      title: \"操作\",\n      key: \"action\",\n      render: (text, record) => React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: this.onCheck(record),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"\\u67E5\\u770B/\\u5EFA\\u8BAE\"))\n    }];\n    return React.createElement(\"div\", {\n      className: \"approveProjectList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, page === \"listPage\" ? React.createElement(Spin, {\n      spinning: spin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      key: \"2\",\n      className: \"EditNotice\",\n      columns: columns,\n      dataSource: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })) : checkPage);\n  }\n\n}\n\nexport default ApproveProjectList;","map":{"version":3,"sources":["/Users/mac/Desktop/IBDRegister/src/components/busniess/ApproveProjectList/ApproveProjectList.js"],"names":["React","Component","http","applyProjectId","ApproveProjectList","state","data","page","spin","componentDidMount","getData","onCheck","record","setState","res","getTable","resid","error","render","columns","title","dataIndex","key","text","checkPage"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { List, Tag, Divider, Table, message } from \"antd\";\nimport \"./ApproveProjectList.less\";\nimport http from \"../../../utils/api\";\nconst applyProjectId = \"620475440053\";\n\nclass ApproveProjectList extends React.Component {\n  state = {\n    data: [{}],\n    page: \"listPage\",\n    spin: false\n  };\n  componentDidMount = async () => {\n    await this.getData();\n  };\n  onCheck = record => {\n    this.setState({\n      page: \"checkPage\"\n    });\n  };\n  getData = async () => {\n    this.setState({\n      spin: true\n    });\n    let res;\n    try {\n      res = await http().getTable({\n        resid: applyProjectId\n      });\n      if(res.data.error === 0){\n      this.setState({\n        data: res.data.data\n      });\n      }\n    } catch (error) {}\n    this.setState({\n      spin: false\n    });\n  };\n\n  render() {\n    const { data ,spin,page} = this.state;\n    const columns = [\n      {\n        title: \"序号\",\n        dataIndex: \"name\",\n        key: \"name\"\n      },\n      {\n        title: \"Name\",\n        dataIndex: \"name\",\n        key: \"name\",\n        render: text => <a>{text}</a>\n      },\n      {\n        title: \"申请时间\",\n        dataIndex: \"applyTime\",\n        key: \"applyTime\"\n      },\n      {\n        title: \"所属单位\",\n        dataIndex: \"hospital\",\n        key: \"hospital\"\n      },\n      {\n        title: \"申请人\",\n        dataIndex: \"doctor\",\n        key: \"doctor\"\n      },\n      {\n        title: \"研究类型\",\n        dataIndex: \"studyType\",\n        key: \"studyType\"\n      },\n      {\n        title: \"负责人\",\n        dataIndex: \"doctor\",\n        key: \"doctor\"\n      },\n      // {\n      //   title: 'Tags',\n      //   key: 'tags',\n      //   dataIndex: 'tags',\n      //   render: tags => (\n      //     <span>\n      //       {tags.map(tag => {\n      //         let color = tag.length > 5 ? 'geekblue' : 'green';\n      //         if (tag === 'loser') {\n      //           color = 'volcano';\n      //         }\n      //         return (\n      //           <Tag color={color} key={tag}>\n      //             {tag.toUpperCase()}\n      //           </Tag>\n      //         );\n      //       })}\n      //     </span>\n      //   ),\n      // },\n      {\n        title: \"操作\",\n        key: \"action\",\n        render: (text, record) => (\n          <span>\n            <a onClick={this.onCheck(record)}>查看/建议</a>\n          </span>\n        )\n      }\n    ];\n    return (\n      <div className=\"approveProjectList\">\n        {page === \"listPage\" ? (\n          <Spin spinning={spin}>\n            <Table\n              key=\"2\"\n              className=\"EditNotice\"\n              columns={columns}\n              dataSource={data}\n            />\n          </Spin>\n        ) : (\n          checkPage\n        )}\n      </div>\n    );\n  }\n}\nexport default ApproveProjectList;\n"]},"metadata":{},"sourceType":"module"}