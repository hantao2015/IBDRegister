{"ast":null,"code":"import _Spin from \"antd/es/spin\";\nimport _Modal from \"antd/es/modal\";\nimport _Form from \"antd/es/form\";\nimport _Input from \"antd/es/input\";\nimport _Table from \"antd/es/table\";\nimport _Button from \"antd/es/button\";\nimport _Divider from \"antd/es/divider\";\nvar _jsxFileName = \"/Users/mac/Desktop/IBDRegister/src/components/busniess/EditNotice/EditNotice.js\";\nimport React, { Component } from \"react\";\nimport \"./EditNotice.less\";\nimport ApplyDataBase from \"../ApplyDataBase\";\nimport http from \"../../../utils/api\";\nimport TextArea from \"antd/lib/input/TextArea\";\nconst noticeId = \"620317621824\";\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\n\nconst columns = props => {\n  const onEdit = props.onEdit;\n  return [{\n    title: \"序号\",\n    dataIndex: \"name\",\n    key: \"name\"\n  }, {\n    title: \"标题\",\n    dataIndex: \"title\",\n    key: \"title\",\n    render: text => React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, text)\n  }, {\n    title: \"消息内容\",\n    dataIndex: \"content\",\n    key: \"content\"\n  }, {\n    title: \"发布者\",\n    dataIndex: \"doctor\",\n    key: \"doctor\"\n  }, {\n    title: \"文件\",\n    dataIndex: \"file\",\n    key: \"file\"\n  }, {\n    title: \"状态\",\n    dataIndex: \"status\",\n    key: \"status\"\n  }, {\n    title: \"操作\",\n    key: \"action\",\n    render: (text, record) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      onClick: () => {\n        onEdit();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"\\u4FEE\\u6539\"), React.createElement(_Divider, {\n      type: \"vertical\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"\\u53D1\\u5E03\"))\n  }];\n};\n\nclass EditNotice extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      record: {},\n      page: \"listPage\",\n      //当前页面\n      spin: false,\n      //是否显示加载\n      visible: false,\n      //是否显示添加模态框\n      editVisible: false //是否显示查看模态框 \n\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        visible: false,\n        editVisible: false\n      });\n    };\n\n    this.save = async e => {\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          this.onSubmit(values);\n        }\n      });\n    };\n\n    this.onSubmit = async values => {\n      let res;\n      console.log(\"values\", values);\n      let data = [values];\n\n      try {\n        res = await http().addRecords({\n          resid: noticeId,\n          data\n        });\n        this.setState({\n          // page: \"listPage\",\n          visible: false\n        });\n        await this.getData();\n      } catch (error) {}\n    };\n\n    this.publish = () => {\n      this.setState({\n        page: \"listPage\"\n      });\n    };\n\n    this.renderContent = () => {\n      let page = this.state.page;\n\n      switch (page) {\n        case \"listPage\":\n          return this.renderListPage();\n\n        case \"addPage\":\n          return this.renderAddPage();\n\n        case \"checkPage\":\n          return this.renderCheckPage();\n      }\n    };\n\n    this.renderListPage = () => {\n      let data = this.state.data;\n      let _this$state = this.state,\n          spin = _this$state.spin,\n          record = _this$state.record;\n      const getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(\"div\", {\n        className: \"editNotice\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        className: \"editNotice-add\",\n        onClick: this.onAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"\\u6DFB\\u52A0\\u65B0\\u901A\\u77E5\"), React.createElement(_Spin, {\n        spinning: spin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(_Table, {\n        className: \"EditNotice\",\n        columns: columns({\n          onEdit: this.onEdit\n        }),\n        dataSource: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(_Modal, {\n        title: \"\\u6DFB\\u52A0\\u65B0\\u901A\\u77E5\",\n        visible: this.state.visible,\n        width: 700,\n        onOk: this.handleOk,\n        onCancel: this.handleCancel,\n        destroyOnClose: true,\n        footer: [React.createElement(_Button, {\n          key: \"back\",\n          onClick: this.handleCancel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, \"\\u53D6\\u6D88\"), React.createElement(_Button, {\n          key: \"submit\",\n          type: \"primary\",\n          onClick: this.save,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, \"\\u4FDD\\u5B58\"), React.createElement(_Button, {\n          key: \"submit\",\n          type: \"primary\",\n          onClick: this.publish,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, \"\\u53D1\\u5E03\")],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(_Form, Object.assign({}, formItemLayout, {\n        // onSubmit={this.handleSubmit}\n        className: \"editNotice-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"\\u6D88\\u606F\\u7F16\\u8F91\"), React.createElement(_Form.Item, {\n        className: \"editNotice-form-item\",\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, \"\\u6807\\u9898\\xA0\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, getFieldDecorator(\"title\", {\n        rules: [{\n          required: true,\n          message: \"请输入标题\",\n          whitespace: true\n        }]\n      })(React.createElement(_Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }))), React.createElement(_Form.Item, {\n        className: \"editNotice-form-item\",\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, \"\\u6D88\\u606F\\u5185\\u5BB9\\xA0\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, getFieldDecorator(\"content\", {\n        rules: [{\n          required: true,\n          message: \"请输入消息内容\",\n          whitespace: true\n        }]\n      })(React.createElement(TextArea, {\n        className: \"editNotice-form-item-textarea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }))))), React.createElement(_Modal, {\n        title: \"\\u4FEE\\u6539\\u901A\\u77E5\",\n        visible: this.state.editVisible,\n        width: 700,\n        onOk: this.handleOk,\n        onCancel: this.handleCancel,\n        destroyOnClose: true,\n        footer: [React.createElement(_Button, {\n          key: \"back\",\n          onClick: this.handleCancel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, \"\\u5173\\u95ED\")],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(_Form, Object.assign({}, formItemLayout, {\n        // onSubmit={this.handleSubmit}\n        className: \"editNotice-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"\\u6D88\\u606F\\u7F16\\u8F91\"), React.createElement(_Form.Item, {\n        className: \"editNotice-form-item\",\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }, \"\\u6807\\u9898\\xA0\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, getFieldDecorator(\"title\", {\n        rules: [{\n          required: true,\n          message: \"请输入标题\",\n          whitespace: true\n        }],\n        initialValue: record.title\n      })(React.createElement(_Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }))), React.createElement(_Form.Item, {\n        className: \"editNotice-form-item\",\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }, \"\\u6D88\\u606F\\u5185\\u5BB9\\xA0\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, getFieldDecorator(\"content\", {\n        rules: [{\n          required: true,\n          message: \"请输入消息内容\",\n          whitespace: true\n        }],\n        initialValue: record.content\n      })(React.createElement(TextArea, {\n        className: \"editNotice-form-item-textarea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      })))))));\n    };\n\n    this.componentDidMount = async () => {\n      await this.getData();\n    };\n\n    this.getData = async () => {\n      let res;\n      this.setState({\n        spin: true\n      });\n\n      try {\n        res = await http().getTable({\n          resid: noticeId\n        }); // if(res.data.error === 0){\n\n        this.setState({\n          data: res.data.data\n        });\n        console.log(\"re\", res.data.data); // }\n      } catch (error) {}\n\n      this.setState({\n        spin: false\n      });\n    };\n\n    this.onAdd = () => {\n      this.setState({\n        // page: \"addPage\",\n        visible: true\n      });\n    };\n\n    this.onBack = () => {\n      this.setState({\n        page: \"listPage\"\n      });\n    };\n\n    this.onEdit = () => {\n      this.setState({\n        editVisible: true\n      });\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          data = _this$state2.data,\n          record = _this$state2.record,\n          page = _this$state2.page;\n    return this.renderContent();\n  }\n\n}\n\nexport default _Form.create()(EditNotice);","map":{"version":3,"sources":["/Users/mac/Desktop/IBDRegister/src/components/busniess/EditNotice/EditNotice.js"],"names":["React","Component","ApplyDataBase","http","TextArea","noticeId","formItemLayout","labelCol","xs","span","sm","wrapperCol","columns","props","onEdit","title","dataIndex","key","render","text","record","EditNotice","state","data","page","spin","visible","editVisible","handleCancel","setState","save","e","form","validateFieldsAndScroll","err","values","onSubmit","res","console","log","addRecords","resid","getData","error","publish","renderContent","renderListPage","renderAddPage","renderCheckPage","getFieldDecorator","onAdd","handleOk","rules","required","message","whitespace","initialValue","content","componentDidMount","getTable","onBack","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  List,\n  Tag,\n  Divider,\n  Table,\n  message,\n  Popconfirm,\n  Button,\n  Form,\n  Input,\n  Spin,\n  Modal\n} from \"antd\";\nimport \"./EditNotice.less\";\nimport ApplyDataBase from \"../ApplyDataBase\";\nimport http from \"../../../utils/api\";\nimport TextArea from \"antd/lib/input/TextArea\";\nconst noticeId = \"620317621824\";\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 }\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 }\n  }\n};\nconst columns = props => {\n  const { onEdit } = props;\n  return [\n    {\n      title: \"序号\",\n      dataIndex: \"name\",\n      key: \"name\"\n    },\n    {\n      title: \"标题\",\n      dataIndex: \"title\",\n      key: \"title\",\n      render: text => <a>{text}</a>\n    },\n    {\n      title: \"消息内容\",\n      dataIndex: \"content\",\n      key: \"content\"\n    },\n    {\n      title: \"发布者\",\n      dataIndex: \"doctor\",\n      key: \"doctor\"\n    },\n    {\n      title: \"文件\",\n      dataIndex: \"file\",\n      key: \"file\"\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      key: \"status\"\n    },\n    {\n      title: \"操作\",\n      key: \"action\",\n      render: (text, record) => (\n        <span>\n          <a \n            onClick={() => {\n              onEdit();\n            }}>修改</a>\n          <Divider type=\"vertical\" />\n          <a>发布</a>\n        </span>\n      )\n    }\n  ];\n};\n\nclass EditNotice extends React.Component {\n  state = {\n    data: [],\n    record: {}, \n    page: \"listPage\", //当前页面\n    spin:false,  //是否显示加载\n    visible:false,  //是否显示添加模态框\n    editVisible:false,  //是否显示查看模态框 \n  };\n  handleCancel = () => {\n    this.setState({\n      visible:false,\n      editVisible:false\n    })\n  }\n  save = async e => {\n    this.props.form.validateFieldsAndScroll((err, values) => {\n     if(!err){\n       this.onSubmit(values)\n     }\n  })\n}\n  onSubmit = async values => {\n    let res;\n    console.log(\"values\",values)\n     let data = [\n      values\n     ];\n    try {\n      res = await http().addRecords({\n        resid: noticeId,\n        data\n      });\n      \n      this.setState({\n        // page: \"listPage\",\n        visible:false\n      });\n     await this.getData();\n    } catch (error) {}\n  \n    }\n \n  publish = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  renderContent = () => {\n    let page = this.state.page;\n    switch (page) {\n      case \"listPage\":\n        return this.renderListPage();\n      case \"addPage\":\n        return this.renderAddPage();\n      case \"checkPage\":\n        return this.renderCheckPage();\n    }\n  };\n  renderListPage = () => {\n    let data = this.state.data;\n    let {spin,record} = this.state;\n    const {getFieldDecorator} = this.props.form;\n    return (\n      <div className=\"editNotice\">\n        <Button type=\"primary\" className=\"editNotice-add\" onClick={this.onAdd}>\n          添加新通知\n        </Button>\n        <Spin spinning={spin}>\n        <Table\n          className=\"EditNotice\"\n          columns={columns({ onEdit: this.onEdit })}\n          dataSource={data}\n        />\n        <Modal  title=\"添加新通知\"\n          visible={this.state.visible}\n          width={700}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          destroyOnClose={true}\n          footer={[\n            <Button key=\"back\" onClick={this.handleCancel}>\n              取消\n            </Button>,\n            <Button key=\"submit\" type=\"primary\"  onClick={this.save}>\n              保存\n            </Button>,\n            <Button key=\"submit\" type=\"primary\"  onClick={this.publish}>\n              发布\n            </Button>\n          ]}>\n\n<Form\n          {...formItemLayout}\n          // onSubmit={this.handleSubmit}\n          className=\"editNotice-form\"\n        >\n          <h1>消息编辑</h1>\n          <Form.Item\n            className=\"editNotice-form-item\"\n            label={<span>标题&nbsp;</span>}\n          >\n            {getFieldDecorator(\"title\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入标题\",\n                  whitespace: true\n                }\n              ]\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            className=\"editNotice-form-item\"\n            label={<span>消息内容&nbsp;</span>}\n          >\n            {getFieldDecorator(\"content\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入消息内容\",\n                  whitespace: true\n                }\n              ]\n            })(<TextArea className=\"editNotice-form-item-textarea\" />)}\n          </Form.Item>\n          {/* <div className=\"editNotice-form-btns\">\n            <Button type=\"primary\" htmlType=\"submit\" onClick={this.save}>\n              保存\n            </Button>\n            <Button type=\"primary\" htmlType=\"submit\" onClick={this.publish}>\n              发布\n            </Button>\n          </div> */}\n        </Form>\n          </Modal>\n          <Modal  title=\"修改通知\"\n          visible={this.state.editVisible}\n          width={700}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          destroyOnClose={true}\n          footer={[\n            <Button key=\"back\" onClick={this.handleCancel}>\n              关闭\n            </Button>,\n           \n          ]}>\n <Form\n          {...formItemLayout}\n          // onSubmit={this.handleSubmit}\n          className=\"editNotice-form\"\n        >\n          <h1>消息编辑</h1>\n          <Form.Item\n            className=\"editNotice-form-item\"\n            label={<span>标题&nbsp;</span>}\n          >\n            {getFieldDecorator(\"title\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入标题\",\n                  whitespace: true\n                }\n              ],\n              initialValue:record.title\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            className=\"editNotice-form-item\"\n            label={<span>消息内容&nbsp;</span>}\n          >\n            {getFieldDecorator(\"content\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入消息内容\",\n                  whitespace: true\n                }\n              ],\n              initialValue:record.content\n            })(<TextArea className=\"editNotice-form-item-textarea\" />)}\n          </Form.Item>\n        </Form>\n            </Modal>\n        </Spin>\n      </div>\n    );\n  };\n  // renderCheckPage = () => {\n  //   const { getFieldDecorator } = this.props.form;\n  //   let record = this.state.record;\n  //   return (\n  //     <div className=\"editNotice\">\n  //       <Button type=\"primary\" className=\"editNotice-add\" onClick={this.onBack}>\n  //         返回\n  //       </Button>\n       \n  //     </div>\n  //   );\n  // };\n  // renderAddPage = () => {\n  //   const { getFieldDecorator } = this.props.form;\n  //   return (\n  //     <div className=\"editNotice\">\n  //       <Button type=\"primary\" className=\"editNotice-add\" onClick={this.onBack}>\n  //         返回\n  //       </Button>\n       \n  //     </div>\n  //   );\n  // };\n  componentDidMount = async () => {\n    await this.getData();\n  };\n  getData = async () => {\n    let res;\n    this.setState({\n      spin:true\n    })\n    try {\n      res = await http().getTable({\n        resid: noticeId\n      });\n      // if(res.data.error === 0){\n      this.setState({\n        data: res.data.data\n      });\n      console.log(\"re\", res.data.data);\n      // }\n    } catch (error) {}\n    this.setState({\n      spin:false\n    })\n  };\n  onAdd = () => {\n    this.setState({\n      // page: \"addPage\",\n      visible:true\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  onEdit = () => {\n    this.setState({\n      editVisible:true\n    });\n  };\n  render() {\n    const { data, record, page } = this.state;\n\n    return this.renderContent();\n  }\n}\nexport default Form.create()(EditNotice);\n"]},"metadata":{},"sourceType":"module"}