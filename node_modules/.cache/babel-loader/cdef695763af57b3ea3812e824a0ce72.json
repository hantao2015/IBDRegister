{"ast":null,"code":"import _Spin from \"antd/es/spin\";\nimport _Table from \"antd/es/table\";\nimport _Tag from \"antd/es/tag\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport _Form from \"antd/es/form\";\nimport _Button from \"antd/es/button\";\nimport _message from \"antd/es/message\";\nimport _defineProperty from \"/Users/mac/Desktop/IBDRegister/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"/Users/mac/Desktop/IBDRegister/src/components/busniess/ApproveList/ApproveList.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport \"./ApproveList.less\";\nimport http from \"../../../utils/api\";\nconst applyDataBaseId = \"621790784304\"; //数据库申请表-审核\n\nconst TextArea = _Input.TextArea;\n\nclass ApproveList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [{}],\n      record: {},\n      page: \"listPage\",\n      spin: false,\n      visible: false\n    };\n\n    this.componentDidMount = async () => {\n      await this.getData();\n    };\n\n    this.getData = async () => {\n      // this.setState({\n      //   spin: true\n      // });\n      let res;\n\n      try {\n        res = await http().getTable({\n          resid: applyDataBaseId\n        });\n\n        if (res.data.error === 0) {\n          let data = [];\n          res.data.data.map((item, index) => {\n            item.number = index + 1;\n            data.push(item);\n          });\n          this.setState({\n            data\n          });\n          this.setState({\n            data: res.data.data\n          });\n        }\n      } catch (error) {} // this.setState({\n      //   spin: false\n      // });\n\n    };\n\n    this.onCheck = record => {\n      this.setState({\n        page: \"checkPage\",\n        record\n      });\n    };\n\n    this.onBack = () => {\n      this.setState({\n        page: \"listPage\"\n      });\n    };\n\n    this.onPassOrReject = async type => {\n      let res;\n      let data;\n\n      if (type === 1) {\n        data = [_objectSpread({}, this.state.record, {\n          isPass: \"Y\"\n        })];\n      } else {\n        data = [_objectSpread({}, this.state.record, {\n          isPass: \"N\"\n        })];\n      }\n\n      try {\n        res = await http().modifyRecords({\n          resid: applyDataBaseId,\n          data\n        });\n\n        if (res.data.Error === 0) {\n          _message.success(\"操作成功\");\n        }\n\n        this.setState({\n          page: \"listPage\"\n        });\n        await this.getData();\n      } catch (error) {\n        _message.error(error.message);\n      }\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          data = _this$state.data,\n          record = _this$state.record,\n          page = _this$state.page,\n          spin = _this$state.spin,\n          visible = _this$state.visible;\n    const options = [{\n      label: \"单中心研究\",\n      value: \"单中心研究\"\n    }, {\n      label: \"多中心研究\",\n      value: \"多中心研究\"\n    }, {\n      label: \"第三方研究\",\n      value: \"第三方研究\"\n    }, {\n      label: \"所有研究\",\n      value: \"所有研究\"\n    }];\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const checkPage = React.createElement(_Form, Object.assign({}, formItemLayout, {\n      className: \"approveList-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), page === \"checkPage\" ? React.createElement(_Button, {\n      icon: \"rollback\",\n      type: \"primary\",\n      onClick: this.onBack,\n      className: \"approveList-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"\\u8FD4\\u56DE\") : null, React.createElement(\"div\", {\n      className: \"approveList-btns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, record.isPass ? null : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \" \", React.createElement(_Button, {\n      className: \"approveList-btn\",\n      type: \"primary\",\n      onClick: () => {\n        this.onPassOrReject(1);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"\\u540C\\u610F\"))), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"\\u53C2\\u4E0ECHASE-IBD\\u6570\\u636E\\u5E93\\u5EFA\\u8BBE\\u7533\\u8BF7\\u8868\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"\\u7533\\u8BF7\\u533B\\u7597\\u5355\\u4F4D\"), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"\\u7533\\u8BF7\\u4EBA\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, record.doctor)), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"\\u6240\\u5C5E\\u5355\\u4F4D\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, record.hospital)), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"\\u804C\\u79F0\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, record.post)), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"\\u8054\\u7CFB\\u7535\\u8BDD\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, record.phoneNumber)), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"E-mail\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, record.email)), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"IBD\\u6CBB\\u7597\\u56E2\\u961F\\u540D\\u5355\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, record.teamPeople), \"\\xA0\\xA0\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, record.teamPeople2), \"\\xA0\\xA0\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, record.teamPeople3), \"\\xA0\\xA0\"), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"\\u9009\\u62E9\\u53C2\\u4E0E\\u6570\\u636E\\u5E93\\u7814\\u7A76\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(_Checkbox.Group, {\n      options: options,\n      defaultValue: record.studyType,\n      onChange: this.onChangeCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"\\u8D35\\u9662\\u76EE\\u524D\\u60A3\\u8005\\u6570\\u91CF\"), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"CD\\u60A3\\u8005\\u6570\\u91CF\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, record.CDPatientNumber)), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"UC\\u60A3\\u8005\\u6570\\u91CF\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, record.UCPatientNumber)), React.createElement(_Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"\\u533B\\u5E08\\u6267\\u7167\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: record.doctorPhoto,\n      alt: \"avatar\",\n      style: {\n        width: \"200px\",\n        height: \"200px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    })));\n    const columns = [{\n      title: \"序号\",\n      dataIndex: \"number\",\n      key: \"number\",\n      width: 80\n    }, {\n      title: \"申请人\",\n      dataIndex: \"doctor\",\n      key: \"doctor\",\n      width: 150\n    }, {\n      title: \"申请时间\",\n      dataIndex: \"applyDate\",\n      key: \"applyDate\",\n      width: 150\n    }, {\n      title: \"所属单位\",\n      dataIndex: \"hospital\",\n      key: \"hospital\",\n      width: 150\n    }, {\n      title: \"研究类型\",\n      dataIndex: \"studyType\",\n      key: \"studyType\",\n      width: 150\n    }, {\n      title: \"审批状态\",\n      dataIndex: \"approveStatus\",\n      key: \"approveStatus\",\n      width: 150,\n      render: data => {\n        return React.createElement(_Tag, {\n          color: data === \"审核中\" ? \"blue\" : data === \"通过\" ? \"geekblue\" : \"green\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        }, data);\n      }\n    }, // {\n    //   title: 'Tags',\n    //   key: 'tags',\n    //   dataIndex: 'tags',\n    //   render: tags => (\n    //     <span>\n    //       {tags.map(tag => {\n    //         let color = tag.length > 5 ? 'geekblue' : 'green';\n    //         if (tag === 'loser') {\n    //           color = 'volcano';\n    //         }\n    //         return (\n    //           <Tag color={color} key={tag}>\n    //             {tag.toUpperCase()}\n    //           </Tag>\n    //         );\n    //       })}\n    //     </span>\n    //   ),\n    // },\n    {\n      title: \"操作\",\n      key: \"action\",\n      width: 150,\n      render: (text, record) => React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: () => {\n          this.onCheck(record);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"\\u67E5\\u770B/\\u5EFA\\u8BAE\"))\n    }];\n    return React.createElement(\"div\", {\n      className: \"approveList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, page === \"listPage\" ? React.createElement(_Spin, {\n      spinning: spin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      key: \"1\",\n      className: \"approveList-table\",\n      columns: columns,\n      dataSource: data,\n      scroll: {\n        x: 1000,\n        y: \"calc(100vh - 220px)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    })) : checkPage);\n  }\n\n}\n\nexport default ApproveList;","map":{"version":3,"sources":["/Users/mac/Desktop/IBDRegister/src/components/busniess/ApproveList/ApproveList.js"],"names":["React","Component","http","applyDataBaseId","TextArea","ApproveList","state","data","record","page","spin","visible","componentDidMount","getData","res","getTable","resid","error","map","item","index","number","push","setState","onCheck","onBack","onPassOrReject","type","isPass","modifyRecords","Error","success","message","render","options","label","value","formItemLayout","labelCol","xs","span","sm","wrapperCol","checkPage","doctor","hospital","post","phoneNumber","email","teamPeople","teamPeople2","teamPeople3","studyType","onChangeCheckbox","CDPatientNumber","UCPatientNumber","doctorPhoto","width","height","columns","title","dataIndex","key","text","x","y"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  List,\n  Tag,\n  Divider,\n  Table,\n  message,\n  Form,\n  Button,\n  Checkbox,\n  Spin,\n  Modal,\n  Input\n} from \"antd\";\nimport \"./ApproveList.less\";\nimport http from \"../../../utils/api\";\nconst applyDataBaseId = \"621790784304\"; //数据库申请表-审核\nconst { TextArea } = Input;\n\nclass ApproveList extends React.Component {\n  state = {\n    data: [{}],\n    record: {},\n    page: \"listPage\",\n    spin: false,\n    visible: false\n  };\n  componentDidMount = async () => {\n    await this.getData();\n  };\n  getData = async () => {\n    // this.setState({\n    //   spin: true\n    // });\n    let res;\n    try {\n      res = await http().getTable({\n        resid: applyDataBaseId\n      });\n      if (res.data.error === 0) {\n        let data = [];\n        res.data.data.map((item, index) => {\n          item.number = index + 1;\n          data.push(item);\n        });\n        this.setState({\n          data\n        });\n        this.setState({\n          data: res.data.data\n        });\n      }\n    } catch (error) {}\n    // this.setState({\n    //   spin: false\n    // });\n  };\n  onCheck = record => {\n    this.setState({\n      page: \"checkPage\",\n      record\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  onPassOrReject = async type => {\n    let res;\n    let data;\n    if (type === 1) {\n      data = [\n        {\n          ...this.state.record,\n          isPass: \"Y\"\n        }\n      ];\n    } else {\n      data = [\n        {\n          ...this.state.record,\n          isPass: \"N\"\n        }\n      ];\n    }\n    try {\n      res = await http().modifyRecords({\n        resid: applyDataBaseId,\n        data\n      });\n      if (res.data.Error === 0) {\n        message.success(\"操作成功\");\n      }\n      this.setState({\n        page: \"listPage\"\n      });\n      await this.getData();\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  render() {\n    const { data, record, page, spin, visible } = this.state;\n    const options = [\n      { label: \"单中心研究\", value: \"单中心研究\" },\n      { label: \"多中心研究\", value: \"多中心研究\" },\n      { label: \"第三方研究\", value: \"第三方研究\" },\n      { label: \"所有研究\", value: \"所有研究\" }\n    ];\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const checkPage = (\n      <Form {...formItemLayout} className=\"approveList-form\">\n        {page === \"checkPage\" ? (\n          <Button\n            icon={\"rollback\"}\n            type=\"primary\"\n            onClick={this.onBack}\n            className=\"approveList-btn\"\n          >\n            返回\n          </Button>\n        ) : null}\n        <div className=\"approveList-btns\">\n          {record.isPass ? null : (\n            <React.Fragment>\n              {\" \"}\n              <Button\n                className=\"approveList-btn\"\n                type=\"primary\"\n                onClick={() => {\n                  this.onPassOrReject(1);\n                }}\n              >\n                同意\n              </Button>\n              {/* <Button\n                className=\"approveList-btn\"\n                type=\"danger\"\n                onClick={() => {\n                  this.onPassOrReject(2);\n                }}\n              >\n                拒绝\n              </Button> */}\n            </React.Fragment>\n          )}\n        </div>\n        <h1>参与CHASE-IBD数据库建设申请表</h1>\n        <h3>申请医疗单位</h3>\n        <Form.Item label={<span>申请人&nbsp;</span>}>\n          <span>{record.doctor}</span>\n        </Form.Item>\n        <Form.Item label={<span>所属单位&nbsp;</span>}>\n          <span>{record.hospital}</span>\n        </Form.Item>\n        <Form.Item label={<span>职称&nbsp;</span>}>\n          <span>{record.post}</span>\n        </Form.Item>\n        <Form.Item label={<span>联系电话&nbsp;</span>}>\n          <span>{record.phoneNumber}</span>\n        </Form.Item>\n        <Form.Item label={<span>E-mail&nbsp;</span>}>\n          <span>{record.email}</span>\n        </Form.Item>\n        <Form.Item label={<span>IBD治疗团队名单&nbsp;</span>}>\n          <span>{record.teamPeople}</span>&nbsp;&nbsp;\n          <span>{record.teamPeople2}</span>&nbsp;&nbsp;\n          <span>{record.teamPeople3}</span>&nbsp;&nbsp;\n        </Form.Item>\n        <Form.Item label={<span>选择参与数据库研究&nbsp;</span>}>\n          <Checkbox.Group\n            options={options}\n            defaultValue={record.studyType}\n            onChange={this.onChangeCheckbox}\n          />\n        </Form.Item>\n        <h3>贵院目前患者数量</h3>\n\n        <Form.Item label={<span>CD患者数量&nbsp;</span>}>\n          <span>{record.CDPatientNumber}</span>\n        </Form.Item>\n        <Form.Item label={<span>UC患者数量&nbsp;</span>}>\n          <span>{record.UCPatientNumber}</span>\n        </Form.Item>\n        <Form.Item label={<span>医师执照&nbsp;</span>}>\n          <img\n            src={record.doctorPhoto}\n            alt=\"avatar\"\n            style={{ width: \"200px\", height: \"200px\" }}\n          />\n        </Form.Item>\n      </Form>\n    );\n    const columns = [\n      {\n        title: \"序号\",\n        dataIndex: \"number\",\n        key: \"number\",\n        width: 80\n      },\n      {\n        title: \"申请人\",\n        dataIndex: \"doctor\",\n        key: \"doctor\",\n        width: 150\n      },\n      {\n        title: \"申请时间\",\n        dataIndex: \"applyDate\",\n        key: \"applyDate\",\n        width: 150\n      },\n      {\n        title: \"所属单位\",\n        dataIndex: \"hospital\",\n        key: \"hospital\",\n        width: 150\n      },\n      {\n        title: \"研究类型\",\n        dataIndex: \"studyType\",\n        key: \"studyType\",\n        width: 150\n      },\n      {\n        title: \"审批状态\",\n        dataIndex: \"approveStatus\",\n        key: \"approveStatus\",\n        width: 150,\n        render: data => {\n          return (\n            <Tag\n              color={\n                data === \"审核中\"\n                  ? \"blue\"\n                  : data === \"通过\"\n                  ? \"geekblue\"\n                  : \"green\"\n              }\n            >\n              {data}\n            </Tag>\n          );\n        }\n      },\n      // {\n      //   title: 'Tags',\n      //   key: 'tags',\n      //   dataIndex: 'tags',\n      //   render: tags => (\n      //     <span>\n      //       {tags.map(tag => {\n      //         let color = tag.length > 5 ? 'geekblue' : 'green';\n      //         if (tag === 'loser') {\n      //           color = 'volcano';\n      //         }\n      //         return (\n      //           <Tag color={color} key={tag}>\n      //             {tag.toUpperCase()}\n      //           </Tag>\n      //         );\n      //       })}\n      //     </span>\n      //   ),\n      // },\n      {\n        title: \"操作\",\n        key: \"action\",\n        width: 150,\n        render: (text, record) => (\n          <span>\n            <a\n              onClick={() => {\n                this.onCheck(record);\n              }}\n            >\n              查看/建议\n            </a>\n          </span>\n        )\n      }\n    ];\n    return (\n      <div className=\"approveList\">\n        {page === \"listPage\" ? (\n          <Spin spinning={spin}>\n            <Table\n              key=\"1\"\n              className=\"approveList-table\"\n              columns={columns}\n              dataSource={data}\n              scroll={{ x: 1000, y: \"calc(100vh - 220px)\" }}\n            />\n          </Spin>\n        ) : (\n          checkPage\n        )}\n      </div>\n    );\n  }\n}\nexport default ApproveList;\n"]},"metadata":{},"sourceType":"module"}