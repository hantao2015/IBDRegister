{"ast":null,"code":"import _Spin from \"antd/es/spin\";\nimport _Button from \"antd/es/button\";\nimport _Form from \"antd/es/form\";\nimport _Input from \"antd/es/input\";\nimport _Icon from \"antd/es/icon\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/Users/mac/Desktop/IBDRegister/src/components/busniess/Register/Register.js\";\nimport React, { Component } from \"react\";\nimport \"./Register.less\";\nimport http from \"../../../utils/api\";\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      disabled: false,\n      counts: 60,\n      showSpin: false\n    };\n\n    this.componentDidMount = () => {};\n\n    this.onLogin = () => {\n      this.props.history.push({\n        pathname: \"/login\"\n      });\n    };\n\n    this.countDown = () => {\n      let counts = 60;\n      this.setState({\n        disabled: true\n      });\n      let countdown = setInterval(() => {\n        if (counts > 0) {\n          counts--;\n          this.setState({\n            counts\n          });\n        } else {\n          this.setState({\n            disabled: false\n          });\n          clearInterval(countdown);\n        }\n      }, 1000);\n    };\n\n    this.getVerCode = async () => {\n      const form = this.props.form;\n      let res;\n\n      if (form.getFieldValue(\"phone\")) {\n        this.countDown();\n\n        try {\n          res = await http().getVerCode({\n            telephone: form.getFieldValue(\"phone\")\n          });\n        } catch (error) {\n          console.log(error);\n        }\n      } else {\n        _message.info(\"请先输入手机号获取验证码\");\n      }\n    };\n\n    this.register = async () => {\n      http().clearCache();\n      const form = this.props.form;\n      let res;\n      this.props.form.validateFieldsAndScroll(async (err, values) => {\n        if (err) {\n          return;\n        }\n\n        let registerData = {\n          Handphone: form.getFieldValue(\"phone\"),\n          // 手机号\n          userid: form.getFieldValue(\"postNumber\"),\n          //执业证号码\n          // occuptionNumber: form.getFieldValue(\"postNumber\"), //执业证号码\n          validcode: form.getFieldValue(\"valid\"),\n          // 验证码\n          // hospital: form.getFieldValue(\"hospital\"), // 医院\n          nickname: form.getFieldValue(\"doctor\"),\n          // office:form.office,\n          validresid: 616852937051 // unionid: this.unionid,\n          // openid: this.openid\n\n        };\n        let doctorData = {\n          phoneNumber: form.getFieldValue(\"phone\"),\n          // 手机号\n          occupationNumber: form.getFieldValue(\"postNumber\"),\n          //执业证号码\n          hospital: form.getFieldValue(\"hospital\"),\n          // 医院\n          doctor: form.getFieldValue(\"doctor\"),\n          email: form.getFieldValue(\"email\"),\n          post: form.getFieldValue(\"post\") //职称\n\n        };\n        this.setState({\n          showSpin: true\n        });\n\n        try {\n          res = await http().register(registerData);\n\n          if (res.data.error == 0) {\n            _message.success(\"注册成功\");\n\n            this.props.history.push({\n              pathname: \"/login\",\n              state: {\n                doctorData\n              }\n            });\n          } else {\n            _message.error(res.data.message);\n          }\n        } catch (error) {\n          console.log(\"res\", error);\n\n          _message.error(error.message);\n        }\n\n        this.setState({\n          showSpin: false\n        });\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          disabled = _this$state.disabled,\n          counts = _this$state.counts,\n          showSpin = _this$state.showSpin;\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(\"div\", {\n      className: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"register-contain\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(_Spin, {\n      spinning: showSpin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(_Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form-userName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"\\u6CE8\\u518C\"), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, getFieldDecorator(\"doctor\", {\n      rules: [{\n        required: true,\n        message: \"请输入您的姓名!\"\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"user\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }),\n      placeholder: \"\\u59D3\\u540D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, getFieldDecorator(\"hospital\", {\n      rules: [{\n        required: true,\n        message: \"请输入您所在的医院!\"\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"user\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }),\n      placeholder: \"\\u533B\\u9662\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, getFieldDecorator(\"post\", {\n      rules: [{\n        required: true,\n        message: \"请输入您的职称!\"\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"user\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }),\n      placeholder: \"\\u804C\\u79F0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, getFieldDecorator(\"postNumber\", {\n      rules: [{\n        required: true,\n        message: \"请输入您的执业证号码!\"\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"user\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }),\n      placeholder: \"\\u6267\\u4E1A\\u8BC1\\u53F7\\u7801\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, getFieldDecorator(\"email\", {\n      rules: [{\n        type: \"email\",\n        required: true,\n        message: \"请输入您的邮箱!\"\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"mail\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }),\n      placeholder: \"\\u90AE\\u7BB1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, getFieldDecorator(\"phone\", {\n      rules: [{\n        required: true,\n        message: \"请输入您的手机号!\"\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"phone\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }),\n      placeholder: \"\\u624B\\u673A\\u53F7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      className: \"login-form-valid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, getFieldDecorator(\"valid\", {\n      rules: [{\n        required: true,\n        message: \"请输入你的验证码!\"\n      }]\n    })(React.createElement(_Input, {\n      className: \"login-form-valid-input\",\n      prefix: React.createElement(_Icon, {\n        type: \"lock\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }),\n      placeholder: \"\\u9A8C\\u8BC1\\u7801 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }))), disabled ? React.createElement(_Button, {\n      style: {\n        marginLeft: \"10px\"\n      },\n      type: \"primary\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, counts) : React.createElement(_Button, {\n      style: {\n        marginLeft: \"10px\"\n      },\n      type: \"primary\",\n      onClick: this.getVerCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"\\u83B7\\u53D6\\u9A8C\\u8BC1\\u7801\"), React.createElement(_Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      onClick: this.register,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"\\u6CE8\\u518C\"), React.createElement(\"div\", {\n      className: \"login-form-register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      onClick: this.onLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"\\u767B\\u5F55\"))))));\n  }\n\n}\n\nexport default _Form.create()(Register);","map":{"version":3,"sources":["/Users/mac/Desktop/IBDRegister/src/components/busniess/Register/Register.js"],"names":["React","Component","http","Register","state","disabled","counts","showSpin","componentDidMount","onLogin","props","history","push","pathname","countDown","setState","countdown","setInterval","clearInterval","getVerCode","form","res","getFieldValue","telephone","error","console","log","info","register","clearCache","validateFieldsAndScroll","err","values","registerData","Handphone","userid","validcode","nickname","validresid","doctorData","phoneNumber","occupationNumber","hospital","doctor","email","post","data","success","message","render","getFieldDecorator","handleSubmit","rules","required","color","type","marginLeft","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Register.less\";\nimport { Form, message, Icon, Input, Button, Checkbox, Spin } from \"antd\";\nimport http from \"../../../utils/api\";\n\nclass Register extends Component {\n  state = {\n    disabled: false,\n    counts: 60,\n    showSpin: false\n  };\n\n  componentDidMount = () => {};\n  onLogin = () => {\n    this.props.history.push({\n      pathname: \"/login\"\n    });\n  };\n\n  countDown = () => {\n    let counts = 60;\n    this.setState({\n      disabled: true\n    });\n    let countdown = setInterval(() => {\n      if (counts > 0) {\n        counts--;\n        this.setState({\n          counts\n        });\n      } else {\n        this.setState({\n          disabled: false\n        });\n        clearInterval(countdown);\n      }\n    }, 1000);\n  };\n  getVerCode = async () => {\n    const { form } = this.props;\n    let res;\n    if (form.getFieldValue(\"phone\")) {\n      this.countDown();\n      try {\n        res = await http().getVerCode({\n          telephone: form.getFieldValue(\"phone\")\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      message.info(\"请先输入手机号获取验证码\");\n    }\n  };\n  register = async () => {\n    http().clearCache();\n    const { form } = this.props;\n    let res;\n    this.props.form.validateFieldsAndScroll(async (err, values) => {\n      if (err) {\n        return;\n      }\n      let registerData = {\n        Handphone: form.getFieldValue(\"phone\"), // 手机号\n        userid: form.getFieldValue(\"postNumber\"), //执业证号码\n        // occuptionNumber: form.getFieldValue(\"postNumber\"), //执业证号码\n        validcode: form.getFieldValue(\"valid\"), // 验证码\n        // hospital: form.getFieldValue(\"hospital\"), // 医院\n        nickname: form.getFieldValue(\"doctor\"),\n        // office:form.office,\n        validresid: 616852937051\n        // unionid: this.unionid,\n        // openid: this.openid\n      };\n      let doctorData = {\n        phoneNumber: form.getFieldValue(\"phone\"), // 手机号\n        occupationNumber: form.getFieldValue(\"postNumber\"), //执业证号码\n        hospital: form.getFieldValue(\"hospital\"), // 医院\n        doctor: form.getFieldValue(\"doctor\"),\n        email:form.getFieldValue(\"email\"),\n        post: form.getFieldValue(\"post\") //职称\n      };\n      this.setState({\n        showSpin: true\n      });\n\n      try {\n        res = await http().register(registerData);\n        if (res.data.error == 0) {\n          message.success(\"注册成功\");\n          this.props.history.push({\n            pathname: \"/login\",\n            state: { doctorData }\n          });\n        } else {\n          message.error(res.data.message);\n        }\n      } catch (error) {\n        console.log(\"res\", error);\n        message.error(error.message);\n      }\n      this.setState({\n        showSpin: false\n      });\n    });\n  };\n  render() {\n    const { disabled, counts, showSpin } = this.state;\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div className=\"page\">\n        <div className=\"register-contain\">\n          <Spin spinning={showSpin}>\n            <Form onSubmit={this.handleSubmit} className=\"login-form-userName\">\n              <h1>注册</h1>\n              <Form.Item>\n                {getFieldDecorator(\"doctor\", {\n                  rules: [{ required: true, message: \"请输入您的姓名!\" }]\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"姓名\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"hospital\", {\n                  rules: [{ required: true, message: \"请输入您所在的医院!\" }]\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"医院\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"post\", {\n                  rules: [{ required: true, message: \"请输入您的职称!\" }]\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"职称\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"postNumber\", {\n                  rules: [{ required: true, message: \"请输入您的执业证号码!\" }]\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"执业证号码\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"email\", {\n                  rules: [\n                    {\n                      type: \"email\",\n                      required: true,\n                      message: \"请输入您的邮箱!\"\n                    }\n                  ]\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"邮箱\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"phone\", {\n                  rules: [{ required: true, message: \"请输入您的手机号!\" }]\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"phone\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"手机号\"\n                  />\n                )}\n              </Form.Item>\n\n              <Form.Item className=\"login-form-valid\">\n                {getFieldDecorator(\"valid\", {\n                  rules: [{ required: true, message: \"请输入你的验证码!\" }]\n                })(\n                  <Input\n                    className=\"login-form-valid-input\"\n                    prefix={\n                      <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder=\"验证码 \"\n                  />\n                )}\n              </Form.Item>\n              {disabled ? (\n                <Button style={{ marginLeft: \"10px\" }} type=\"primary\" disabled>\n                  {counts}\n                </Button>\n              ) : (\n                <Button\n                  style={{ marginLeft: \"10px\" }}\n                  type=\"primary\"\n                  onClick={this.getVerCode}\n                >\n                  获取验证码\n                </Button>\n              )}\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n                onClick={this.register}\n                size=\"large\"\n              >\n                注册\n              </Button>\n              <div className=\"login-form-register\">\n                <a onClick={this.onLogin}>登录</a>\n              </div>\n            </Form>\n          </Spin>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(Register);\n"]},"metadata":{},"sourceType":"module"}