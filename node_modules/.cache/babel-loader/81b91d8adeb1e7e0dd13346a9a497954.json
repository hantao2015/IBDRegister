{"ast":null,"code":"import _Spin from \"antd/es/spin\";\nimport _Modal from \"antd/es/modal\";\nimport _Form from \"antd/es/form\";\nimport _Input from \"antd/es/input\";\nimport _Table from \"antd/es/table\";\nimport _Button from \"antd/es/button\";\nimport _defineProperty from \"/Users/mac/Desktop/IBDRegister/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _message from \"antd/es/message\";\nimport _Divider from \"antd/es/divider\";\nimport _Tag from \"antd/es/tag\";\nvar _jsxFileName = \"/Users/mac/Desktop/IBDRegister/src/components/busniess/EditNotice/EditNotice.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport \"./EditNotice.less\";\nimport ApplyDataBase from \"../ApplyDataBase\";\nimport http from \"../../../utils/api\";\nimport TextArea from \"antd/lib/input/TextArea\";\nconst noticeId = \"621790850309\";\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\n\nconst columns = props => {\n  const onEdit = props.onEdit,\n        onPublish = props.onPublish,\n        data = props.data;\n  return [{\n    title: \"序号\",\n    dataIndex: \"number\",\n    key: \"number\",\n    width: 80\n  }, {\n    title: \"标题\",\n    dataIndex: \"title\",\n    key: \"title\",\n    width: 250,\n    render: text => React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, text)\n  }, {\n    title: \"消息内容\",\n    dataIndex: \"content\",\n    key: \"content\",\n    width: 400\n  }, {\n    title: \"发布者\",\n    dataIndex: \"publishPerson\",\n    key: \"publishPerson\",\n    width: 150\n  }, {\n    title: \"发布时间\",\n    dataIndex: \"publishTime\",\n    key: \"publishTime\",\n    width: 150\n  }, {\n    title: \"状态\",\n    dataIndex: \"status\",\n    key: \"status\",\n    render: data => React.createElement(_Tag, {\n      color: data === \"已发布\" ? \"geekblue\" : \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, data),\n    width: 150\n  }, {\n    title: \"操作\",\n    key: \"action\",\n    width: 150,\n    render: (text, record) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      onClick: () => {\n        onEdit(record);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"\\u4FEE\\u6539\"), React.createElement(_Divider, {\n      type: \"vertical\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), record.isPublish === \"Y\" ? React.createElement(\"a\", {\n      onClick: () => {\n        onPublish(record, 1);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"\\u53D6\\u6D88\\u53D1\\u5E03\") : React.createElement(\"a\", {\n      onClick: () => {\n        onPublish(record, 2);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"\\u53D1\\u5E03\"))\n  }];\n};\n\nclass EditNotice extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      record: {},\n      page: \"listPage\",\n      //当前页面\n      spin: false,\n      //是否显示加载\n      visible: false,\n      //是否显示添加模态框\n      editVisible: false //是否显示查看模态框\n\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        visible: false,\n        editVisible: false\n      });\n    };\n\n    this.save = async (e, type) => {\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          this.onSubmit(values, type);\n        }\n      });\n    };\n\n    this.onSubmit = async (values, type) => {\n      let res;\n\n      if (type === 1) {\n        let data = [values];\n\n        try {\n          res = await http().addRecords({\n            resid: noticeId,\n            data\n          });\n\n          if (res.data.Error === 0) {\n            _message.success(\"添加成功\");\n\n            this.setState({\n              visible: false\n            });\n            await this.getData();\n          }\n        } catch (error) {\n          _message.error(error.message);\n        }\n      } else {\n        let data = [_objectSpread({}, values, {\n          REC_ID: this.state.record.REC_ID\n        })];\n\n        try {\n          res = await http().modifyRecords({\n            resid: noticeId,\n            data\n          });\n\n          if (res.data.Error === 0) {\n            _message.success(\"修改成功\");\n\n            this.setState({\n              editVisible: false\n            });\n            await this.getData();\n          }\n        } catch (error) {\n          _message.error(error.message);\n        }\n      }\n    };\n\n    this.publish = () => {\n      this.setState({\n        page: \"listPage\"\n      });\n    };\n\n    this.onPublish = async (record, type) => {\n      if (type == 1) {\n        record.isPublish = \"N\";\n      } else {\n        record.isPublish = \"Y\";\n      }\n\n      let res;\n\n      try {\n        res = await http().modifyRecords({\n          resid: noticeId,\n          data: [record]\n        });\n\n        if (res.data.Error === 0) {\n          _message.success(\"发布成功\");\n\n          await this.getData();\n        }\n      } catch (error) {}\n    };\n\n    this.renderContent = () => {\n      let page = this.state.page;\n\n      switch (page) {\n        case \"listPage\":\n          return this.renderListPage();\n\n        case \"addPage\":\n          return this.renderAddPage();\n\n        case \"checkPage\":\n          return this.renderCheckPage();\n      }\n    };\n\n    this.renderListPage = () => {\n      let data = this.state.data;\n      let _this$state = this.state,\n          spin = _this$state.spin,\n          record = _this$state.record;\n      const getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(\"div\", {\n        className: \"editNotice\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        className: \"editNotice-add\",\n        onClick: this.onAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"\\u6DFB\\u52A0\\u65B0\\u901A\\u77E5\"), React.createElement(_Spin, {\n        spinning: spin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(_Table, {\n        key: \"3\",\n        className: \"editNotice-table\",\n        columns: columns({\n          onEdit: record => {\n            this.onEdit(record);\n          },\n          onPublish: (record, type) => {\n            this.onPublish(record, type);\n          },\n          data: data\n        }),\n        scroll: {\n          x: 1000,\n          y: \"calc(100vh - 260px)\"\n        },\n        dataSource: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), React.createElement(_Modal, {\n        title: \"\\u6DFB\\u52A0\\u65B0\\u901A\\u77E5\",\n        visible: this.state.visible,\n        width: 700,\n        onOk: this.handleOk,\n        onCancel: this.handleCancel,\n        destroyOnClose: true,\n        footer: [React.createElement(_Button, {\n          key: \"back\",\n          onClick: this.handleCancel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, \"\\u53D6\\u6D88\"), React.createElement(_Button, {\n          key: \"submit\",\n          type: \"primary\",\n          onClick: () => {\n            this.save(1);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }, \"\\u4FDD\\u5B58\"), React.createElement(_Button, {\n          key: \"submit\",\n          type: \"primary\",\n          onClick: this.publish,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }, \"\\u53D1\\u5E03\")],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(_Form, Object.assign({}, formItemLayout, {\n        className: \"editNotice-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }), React.createElement(_Form.Item, {\n        className: \"editNotice-form-item\",\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        }, \"\\u6807\\u9898\\xA0\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, getFieldDecorator(\"title\", {\n        rules: [{\n          required: true,\n          message: \"请输入标题\",\n          whitespace: true\n        }]\n      })(React.createElement(_Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }))), React.createElement(_Form.Item, {\n        className: \"editNotice-form-item\",\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }, \"\\u6D88\\u606F\\u5185\\u5BB9\\xA0\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, getFieldDecorator(\"content\", {\n        rules: [{\n          required: true,\n          message: \"请输入消息内容\",\n          whitespace: true\n        }]\n      })(React.createElement(TextArea, {\n        className: \"editNotice-form-item-textarea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }))))), React.createElement(_Modal, {\n        title: \"\\u4FEE\\u6539\\u901A\\u77E5\",\n        visible: this.state.editVisible,\n        width: 700,\n        onOk: this.handleOk,\n        onCancel: this.handleCancel,\n        destroyOnClose: true,\n        footer: [React.createElement(_Button, {\n          key: \"back\",\n          onClick: this.handleCancel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          },\n          __self: this\n        }, \"\\u53D6\\u6D88\"), React.createElement(_Button, {\n          key: \"submit\",\n          type: \"primary\",\n          onClick: () => {\n            this.save(2);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        }, \"\\u4FDD\\u5B58\")],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(_Form, Object.assign({}, formItemLayout, {\n        className: \"editNotice-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }), React.createElement(_Form.Item, {\n        className: \"editNotice-form-item\",\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315\n          },\n          __self: this\n        }, \"\\u6807\\u9898\\xA0\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, getFieldDecorator(\"title\", {\n        rules: [{\n          required: true,\n          message: \"请输入标题\",\n          whitespace: true\n        }],\n        initialValue: record.title\n      })(React.createElement(_Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }))), React.createElement(_Form.Item, {\n        className: \"editNotice-form-item\",\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          },\n          __self: this\n        }, \"\\u6D88\\u606F\\u5185\\u5BB9\\xA0\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, getFieldDecorator(\"content\", {\n        rules: [{\n          required: true,\n          message: \"请输入消息内容\",\n          whitespace: true\n        }],\n        initialValue: record.content\n      })(React.createElement(TextArea, {\n        className: \"editNotice-form-item-textarea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      })))))));\n    };\n\n    this.componentDidMount = async () => {\n      await this.getData();\n    };\n\n    this.getData = async () => {\n      let res;\n      this.setState({\n        spin: true\n      });\n\n      try {\n        res = await http().getTable({\n          resid: noticeId\n        });\n\n        if (res.data.error === 0) {\n          this.setState({\n            data: res.data.data\n          });\n        }\n      } catch (error) {\n        _message.error(error.message);\n      }\n\n      this.setState({\n        spin: false\n      });\n    };\n\n    this.onAdd = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.onBack = () => {\n      this.setState({\n        page: \"listPage\"\n      });\n    };\n\n    this.onEdit = record => {\n      this.setState({\n        editVisible: true,\n        record\n      });\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          data = _this$state2.data,\n          record = _this$state2.record,\n          page = _this$state2.page;\n    return this.renderContent();\n  }\n\n}\n\nexport default _Form.create()(EditNotice);","map":{"version":3,"sources":["/Users/mac/Desktop/IBDRegister/src/components/busniess/EditNotice/EditNotice.js"],"names":["React","Component","ApplyDataBase","http","TextArea","noticeId","formItemLayout","labelCol","xs","span","sm","wrapperCol","columns","props","onEdit","onPublish","data","title","dataIndex","key","width","render","text","record","isPublish","EditNotice","state","page","spin","visible","editVisible","handleCancel","setState","save","e","type","form","validateFieldsAndScroll","err","values","onSubmit","res","addRecords","resid","Error","success","getData","error","message","REC_ID","modifyRecords","publish","renderContent","renderListPage","renderAddPage","renderCheckPage","getFieldDecorator","onAdd","x","y","handleOk","rules","required","whitespace","initialValue","content","componentDidMount","getTable","onBack","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  List,\n  Tag,\n  Divider,\n  Table,\n  message,\n  Popconfirm,\n  Button,\n  Form,\n  Input,\n  Spin,\n  Modal\n} from \"antd\";\nimport \"./EditNotice.less\";\nimport ApplyDataBase from \"../ApplyDataBase\";\nimport http from \"../../../utils/api\";\nimport TextArea from \"antd/lib/input/TextArea\";\nconst noticeId = \"621790850309\";\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 }\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 }\n  }\n};\nconst columns = props => {\n  const { onEdit, onPublish, data } = props;\n  return [\n    {\n      title: \"序号\",\n      dataIndex: \"number\",\n      key: \"number\",\n      width: 80\n    },\n    {\n      title: \"标题\",\n      dataIndex: \"title\",\n      key: \"title\",\n      width: 250,\n      render: text => <a>{text}</a>\n    },\n    {\n      title: \"消息内容\",\n      dataIndex: \"content\",\n      key: \"content\",\n      width: 400\n    },\n    {\n      title: \"发布者\",\n      dataIndex: \"publishPerson\",\n      key: \"publishPerson\",\n      width: 150\n    },\n    {\n      title: \"发布时间\",\n      dataIndex: \"publishTime\",\n      key: \"publishTime\",\n      width: 150\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: data => (\n        <Tag color={data === \"已发布\" ? \"geekblue\" : \"green\"}>{data}</Tag>\n      ),\n      width: 150\n    },\n    {\n      title: \"操作\",\n      key: \"action\",\n      width: 150,\n      render: (text, record) => (\n        <span>\n          <a\n            onClick={() => {\n              onEdit(record);\n            }}\n          >\n            修改\n          </a>\n          <Divider type=\"vertical\" />\n          {record.isPublish === \"Y\" ? (\n            <a\n              onClick={() => {\n                onPublish(record, 1);\n              }}\n            >\n              取消发布\n            </a>\n          ) : (\n            <a\n              onClick={() => {\n                onPublish(record, 2);\n              }}\n            >\n              发布\n            </a>\n          )}\n        </span>\n      )\n    }\n  ];\n};\n\nclass EditNotice extends React.Component {\n  state = {\n    data: [],\n    record: {},\n    page: \"listPage\", //当前页面\n    spin: false, //是否显示加载\n    visible: false, //是否显示添加模态框\n    editVisible: false //是否显示查看模态框\n  };\n  handleCancel = () => {\n    this.setState({\n      visible: false,\n      editVisible: false\n    });\n  };\n  save = async (e, type) => {\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.onSubmit(values, type);\n      }\n    });\n  };\n  //保存数据，如果 传入type是1 ，表示添加。type是2 的话表示 修改。\n  onSubmit = async (values, type) => {\n    let res;\n    if (type === 1) {\n      let data = [values];\n      try {\n        res = await http().addRecords({\n          resid: noticeId,\n          data\n        });\n        if (res.data.Error === 0) {\n          message.success(\"添加成功\");\n          this.setState({\n            visible: false\n          });\n          await this.getData();\n        }\n      } catch (error) {\n        message.error(error.message);\n      }\n    } else {\n      let data = [{ ...values, REC_ID: this.state.record.REC_ID }];\n      try {\n        res = await http().modifyRecords({\n          resid: noticeId,\n          data\n        });\n        if (res.data.Error === 0) {\n          message.success(\"修改成功\");\n          this.setState({\n            editVisible: false\n          });\n          await this.getData();\n        }\n      } catch (error) {\n        message.error(error.message);\n      }\n    }\n  };\n\n  publish = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  onPublish = async (record, type) => {\n    if (type == 1) {\n      record.isPublish = \"N\";\n    } else {\n      record.isPublish = \"Y\";\n    }\n    let res;\n    try {\n      res = await http().modifyRecords({\n        resid: noticeId,\n        data: [record]\n      });\n      if (res.data.Error === 0) {\n        message.success(\"发布成功\");\n        await this.getData();\n      }\n    } catch (error) {}\n  };\n  renderContent = () => {\n    let page = this.state.page;\n    switch (page) {\n      case \"listPage\":\n        return this.renderListPage();\n      case \"addPage\":\n        return this.renderAddPage();\n      case \"checkPage\":\n        return this.renderCheckPage();\n    }\n  };\n  renderListPage = () => {\n    let data = this.state.data;\n    let { spin, record } = this.state;\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <div className=\"editNotice\">\n        <Button type=\"primary\" className=\"editNotice-add\" onClick={this.onAdd}>\n          添加新通知\n        </Button>\n        <Spin spinning={spin}>\n          <Table\n            key=\"3\"\n            className=\"editNotice-table\"\n            columns={columns({\n              onEdit: record => {\n                this.onEdit(record);\n              },\n              onPublish: (record, type) => {\n                this.onPublish(record, type);\n              },\n              data: data\n            })}\n            scroll={{ x: 1000, y: \"calc(100vh - 260px)\" }}\n            dataSource={data}\n          />\n          <Modal\n            title=\"添加新通知\"\n            visible={this.state.visible}\n            width={700}\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n            destroyOnClose={true}\n            footer={[\n              <Button key=\"back\" onClick={this.handleCancel}>\n                取消\n              </Button>,\n              <Button\n                key=\"submit\"\n                type=\"primary\"\n                onClick={() => {\n                  this.save(1);\n                }}\n              >\n                保存\n              </Button>,\n              <Button key=\"submit\" type=\"primary\" onClick={this.publish}>\n                发布\n              </Button>\n            ]}\n          >\n            <Form {...formItemLayout} className=\"editNotice-form\">\n              {/* <h1>消息编辑</h1> */}\n              <Form.Item\n                className=\"editNotice-form-item\"\n                label={<span>标题&nbsp;</span>}\n              >\n                {getFieldDecorator(\"title\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入标题\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                className=\"editNotice-form-item\"\n                label={<span>消息内容&nbsp;</span>}\n              >\n                {getFieldDecorator(\"content\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入消息内容\",\n                      whitespace: true\n                    }\n                  ]\n                })(<TextArea className=\"editNotice-form-item-textarea\" />)}\n              </Form.Item>\n            </Form>\n          </Modal>\n          <Modal\n            title=\"修改通知\"\n            visible={this.state.editVisible}\n            width={700}\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n            destroyOnClose={true}\n            footer={[\n              <Button key=\"back\" onClick={this.handleCancel}>\n                取消\n              </Button>,\n              <Button\n                key=\"submit\"\n                type=\"primary\"\n                onClick={() => {\n                  this.save(2);\n                }}\n              >\n                保存\n              </Button>\n            ]}\n          >\n            <Form {...formItemLayout} className=\"editNotice-form\">\n              {/* <h1>消息编辑</h1> */}\n              <Form.Item\n                className=\"editNotice-form-item\"\n                label={<span>标题&nbsp;</span>}\n              >\n                {getFieldDecorator(\"title\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入标题\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: record.title\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                className=\"editNotice-form-item\"\n                label={<span>消息内容&nbsp;</span>}\n              >\n                {getFieldDecorator(\"content\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"请输入消息内容\",\n                      whitespace: true\n                    }\n                  ],\n                  initialValue: record.content\n                })(<TextArea className=\"editNotice-form-item-textarea\" />)}\n              </Form.Item>\n            </Form>\n          </Modal>\n        </Spin>\n      </div>\n    );\n  };\n  componentDidMount = async () => {\n    await this.getData();\n  };\n  getData = async () => {\n    let res;\n    this.setState({\n      spin: true\n    });\n    try {\n      res = await http().getTable({\n        resid: noticeId\n      });\n      if (res.data.error === 0) {\n        this.setState({\n          data: res.data.data\n        });\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n    this.setState({\n      spin: false\n    });\n  };\n  onAdd = () => {\n    this.setState({\n      visible: true\n    });\n  };\n  onBack = () => {\n    this.setState({\n      page: \"listPage\"\n    });\n  };\n  onEdit = record => {\n    this.setState({\n      editVisible: true,\n      record\n    });\n  };\n  render() {\n    const { data, record, page } = this.state;\n\n    return this.renderContent();\n  }\n}\nexport default Form.create()(EditNotice);\n"]},"metadata":{},"sourceType":"module"}