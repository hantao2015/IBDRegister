{"ast":null,"code":"import _Table from \"antd/es/table\";\nimport _Input from \"antd/es/input\";\nimport _Button from \"antd/es/button\";\nimport _Form from \"antd/es/form\";\nimport _Divider from \"antd/es/divider\";\nvar _jsxFileName = \"/Users/mac/Desktop/IBDRegister/src/components/busniess/EditNotice/EditNotice.js\";\nimport React, { Component } from \"react\";\nimport \"./EditNotice.less\";\nimport ApplyDataBase from '../ApplyDataBase';\nimport http from \"../../../utils/api\";\nimport TextArea from \"antd/lib/input/TextArea\";\nconst noticeId = \"620475440053\";\n\nclass EditNotice extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      record: {},\n      page: 'listPage'\n    };\n\n    this.componentDidMount = async () => {\n      await this.getData();\n    };\n\n    this.getData = async () => {\n      let res;\n\n      try {\n        res = await http().getTable({\n          resid: noticeId\n        }); // if(res.data.error === 0){\n\n        this.setState({\n          data: res.data.data\n        });\n        console.log(\"re\", res.data.data); // }\n      } catch (error) {}\n    };\n\n    this.onApply = () => {\n      this.setState({\n        page: 'applyPage'\n      });\n    };\n\n    this.onBack = () => {\n      this.setState({\n        page: 'listPage'\n      });\n    };\n\n    this.onCheck = () => {\n      this.setState({\n        page: 'checkPage'\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          data = _this$state.data,\n          record = _this$state.record,\n          page = _this$state.page;\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const columns = [{\n      title: \"序号\",\n      dataIndex: \"name\",\n      key: \"name\"\n    }, {\n      title: \"标题\",\n      dataIndex: \"title\",\n      key: \"title\",\n      render: text => React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, text)\n    }, {\n      title: \"消息内容\",\n      dataIndex: \"content\",\n      key: \"content\"\n    }, {\n      title: \"发布者\",\n      dataIndex: \"doctor\",\n      key: \"doctor\"\n    }, {\n      title: \"文件\",\n      dataIndex: \"file\",\n      key: \"file\"\n    }, {\n      title: \"状态\",\n      dataIndex: \"status\",\n      key: \"status\"\n    }, {\n      title: \"操作\",\n      key: \"action\",\n      render: (text, record) => React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: this.onCheck,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"\\u67E5\\u770B\"), React.createElement(_Divider, {\n        type: \"vertical\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"\\u4FEE\\u6539\"), React.createElement(_Divider, {\n        type: \"vertical\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"\\u53D1\\u5E03\"))\n    }];\n    const pages = {\n      checkPage: React.createElement(_Form, Object.assign({}, formItemLayout, {\n        // onSubmit={this.handleSubmit}\n        className: \"applyDataBase-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"\\u6D88\\u606F\\u7F16\\u8F91\"), React.createElement(_Form.Item, {\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, \"\\u6D88\\u606F\\u6807\\u9898\\xA0\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, record.doctor)), React.createElement(_Form.Item, {\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, \"\\u6D88\\u606F\\u5185\\u5BB9\\xA0\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, record.hospital)), React.createElement(_Form.Item, {\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \"\\u6587\\u4EF6\\xA0\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, record.post)), React.createElement(_Form.Item, {\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, \"\\u533B\\u5E08\\u6267\\u7167\\xA0\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: record.doctorPhoto,\n        alt: \"avatar\",\n        style: {\n          backgroundSize: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })), React.createElement(_Button, {\n        icon: \"download\",\n        type: \"primary\",\n        className: \"applyDataBase-form-print\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"\\u6253\\u5370\")),\n      applyPage: React.createElement(_Form, Object.assign({}, formItemLayout, {\n        // onSubmit={this.handleSubmit}\n        className: \"applyDataBase-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"\\u6D88\\u606F\\u7F16\\u8F91\"), React.createElement(_Form.Item, {\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, \"\\u6807\\u9898\\xA0\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, getFieldDecorator(\"title\", {\n        rules: [{\n          required: true,\n          message: \"请输入标题\",\n          whitespace: true\n        }]\n      })(React.createElement(_Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }))), React.createElement(_Form.Item, {\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, \"\\u6D88\\u606F\\u5185\\u5BB9\\xA0\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, getFieldDecorator(\"content\", {\n        rules: [{\n          required: true,\n          message: \"请输入消息内容\",\n          whitespace: true\n        }]\n      })(React.createElement(TextArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }))), React.createElement(_Button, {\n        className: \"applyDataBase-form-save\",\n        htmlType: \"submit\",\n        onClick: () => {\n          this.handleSubmit(this, 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"\\u4FDD\\u5B58\"), React.createElement(_Button, {\n        type: \"primary\",\n        className: \"applyDataBase-form-submit\",\n        htmlType: \"submit\",\n        onClick: () => {\n          this.handleSubmit(this, 2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"\\u63D0\\u4EA4\")),\n      listPage: React.createElement(\"div\", {\n        className: \"editNotice\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(_Table, {\n        className: \"EditNotice\",\n        columns: columns,\n        dataSource: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }))\n    };\n    return React.createElement(ApplyDataBase, {\n      pages: pages,\n      page: this.state.page,\n      onBack: this.onBack,\n      onApply: this.onApply,\n      isShowImage: \"Y\",\n      addText: \"\\u6DFB\\u52A0\\u65B0\\u901A\\u77E5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }) // <div className='editNotice'>\n    //   <Button type='primary' className='editNotice-add'>添加新通知</Button>\n    //   <Table className='EditNotice' columns={columns}  dataSource={data} />\n    //   </div>\n    ;\n  }\n\n}\n\nexport default _Form.create()(EditNotice);","map":{"version":3,"sources":["/Users/mac/Desktop/IBDRegister/src/components/busniess/EditNotice/EditNotice.js"],"names":["React","Component","ApplyDataBase","http","TextArea","noticeId","EditNotice","state","data","record","page","componentDidMount","getData","res","getTable","resid","setState","console","log","error","onApply","onBack","onCheck","render","getFieldDecorator","props","form","formItemLayout","labelCol","xs","span","sm","wrapperCol","columns","title","dataIndex","key","text","pages","checkPage","doctor","hospital","post","doctorPhoto","backgroundSize","applyPage","rules","required","message","whitespace","handleSubmit","listPage","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { List, Tag, Divider, Table, message,Popconfirm, Button ,Form,Input} from \"antd\";\nimport \"./EditNotice.less\";\nimport ApplyDataBase from '../ApplyDataBase'\nimport http from \"../../../utils/api\";\nimport TextArea from \"antd/lib/input/TextArea\";\nconst noticeId = \"620475440053\";\n\nclass EditNotice extends React.Component {\n  state = {\n    data: [],\n    record:{},\n    page:'listPage'\n  };\n  componentDidMount = async () => {\n    await this.getData();\n  };\n  getData = async () => {\n    let res;\n    try {\n      res = await http().getTable({\n        resid: noticeId\n      });\n      // if(res.data.error === 0){\n      this.setState({\n        data: res.data.data\n      });\n      console.log(\"re\", res.data.data);\n      // }\n    } catch (error) {}\n  };\n  onApply= () => {\n    this.setState({\n      page:'applyPage'\n    })\n  }\n  onBack = () => {\n    this.setState({\n      page:'listPage'\n    })\n  }\n  onCheck = () => {\n    this.setState({\n      page:'checkPage'\n    })\n  }\n  render() {\n    const { data,record ,page} = this.state;\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const columns = [\n      {\n        title: \"序号\",\n        dataIndex: \"name\",\n        key: \"name\"\n      },\n      {\n        title: \"标题\",\n        dataIndex: \"title\",\n        key: \"title\",\n        render: text => <a>{text}</a>\n      },\n      {\n        title: \"消息内容\",\n        dataIndex: \"content\",\n        key: \"content\"\n      },\n      {\n        title: \"发布者\",\n        dataIndex: \"doctor\",\n        key: \"doctor\"\n      },\n      {\n        title: \"文件\",\n        dataIndex: \"file\",\n        key: \"file\"\n      },\n      {\n        title: \"状态\",\n        dataIndex: \"status\",\n        key: \"status\"\n      },\n      {\n        title: \"操作\",\n        key: \"action\",\n        render: (text, record) => (\n          <span>\n            <a onClick={this.onCheck}>查看</a>\n            <Divider type=\"vertical\" />\n            <a>修改</a>\n            <Divider type=\"vertical\" />\n            <a>发布</a>\n          </span>\n        )\n      }\n    ];\n    const pages = {\n      checkPage: (\n        <Form\n          {...formItemLayout}\n          // onSubmit={this.handleSubmit}\n          className=\"applyDataBase-form\"\n        >\n          <h1>消息编辑</h1>\n          <Form.Item label={<span>消息标题&nbsp;</span>}>\n            <span>{record.doctor}</span>\n          </Form.Item>\n          <Form.Item label={<span>消息内容&nbsp;</span>}>\n            <span>{record.hospital}</span>\n          </Form.Item>\n          <Form.Item label={<span>文件&nbsp;</span>}>\n            <span>{record.post}</span>\n          </Form.Item>\n          <Form.Item label={<span>医师执照&nbsp;</span>}>\n            <img\n              src={record.doctorPhoto}\n              alt=\"avatar\"\n              style={{ backgroundSize: \"100%\" }}\n            />\n          </Form.Item>\n\n          <Button\n            icon=\"download\"\n            type=\"primary\"\n            className=\"applyDataBase-form-print\"\n          >\n            打印\n          </Button>\n        </Form>\n      ),\n      applyPage:(\n          <Form\n            {...formItemLayout}\n            // onSubmit={this.handleSubmit}\n            className=\"applyDataBase-form\"\n          >\n            <h1>消息编辑</h1>\n            <Form.Item label={<span>标题&nbsp;</span>}>\n              {getFieldDecorator(\"title\", {\n                rules: [\n                  {\n                    required: true,\n                    message: \"请输入标题\",\n                    whitespace: true\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label={<span>消息内容&nbsp;</span>}>\n              {getFieldDecorator(\"content\", {\n                rules: [\n                  {\n                    required: true,\n                    message: \"请输入消息内容\",\n                    whitespace: true\n                  }\n                ]\n              })(<TextArea />)}\n            </Form.Item>\n            <Button\n              className=\"applyDataBase-form-save\"\n              htmlType=\"submit\"\n              onClick={() => {\n                this.handleSubmit(this, 1);\n              }}\n            >\n              保存\n            </Button>\n            <Button\n              type=\"primary\"\n              className=\"applyDataBase-form-submit\"\n              htmlType=\"submit\"\n              onClick={() => {\n                this.handleSubmit(this, 2);\n              }}\n            >\n              提交\n            </Button>\n          </Form>\n        \n      ),\n      listPage: (\n        <div className='editNotice'>\n           {/* <Button type='primary' className='editNotice-add'>添加新通知</Button> */}\n           <Table className='EditNotice' columns={columns}  dataSource={data} />\n           </div>\n      ),\n    }\n    return (\n      <ApplyDataBase\n        pages={pages}\n        page={this.state.page}\n        onBack={this.onBack}\n        onApply={this.onApply}\n        isShowImage='Y'\n        addText = '添加新通知'\n      ></ApplyDataBase>\n\n      // <div className='editNotice'>\n      //   <Button type='primary' className='editNotice-add'>添加新通知</Button>\n      //   <Table className='EditNotice' columns={columns}  dataSource={data} />\n      //   </div>\n    );\n  }\n}\nexport default Form.create()(EditNotice)\n"]},"metadata":{},"sourceType":"module"}